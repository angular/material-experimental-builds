{"version":3,"file":"mdc-menu__testing.js","sources":["../../../../../../src/material-experimental/mdc-menu/testing/menu-harness.ts","../../../../../../src/material-experimental/mdc-menu/testing/public-api.ts","../../../../../../src/material-experimental/mdc-menu/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HarnessPredicate} from '@angular/cdk/testing';\nimport {\n  MenuHarnessFilters,\n  MenuItemHarnessFilters,\n  _MatMenuItemHarnessBase,\n  _MatMenuHarnessBase\n} from '@angular/material/menu/testing';\n\n/** Harness for interacting with an MDC-based mat-menu in tests. */\nexport class MatMenuHarness extends _MatMenuHarnessBase<\n  typeof MatMenuItemHarness, MatMenuItemHarness, MenuItemHarnessFilters> {\n  /** The selector for the host element of a `MatMenu` instance. */\n  static hostSelector = '.mat-menu-trigger';\n  protected _itemClass = MatMenuItemHarness;\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a `MatMenuHarness` that meets certain\n   * criteria.\n   * @param options Options for filtering which menu instances are considered a match.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: MenuHarnessFilters = {}): HarnessPredicate<MatMenuHarness> {\n    return new HarnessPredicate(MatMenuHarness, options)\n        .addOption('triggerText', options.triggerText,\n            (harness, text) => HarnessPredicate.stringMatches(harness.getTriggerText(), text));\n  }\n}\n\n/** Harness for interacting with an MDC-based mat-menu-item in tests. */\nexport class MatMenuItemHarness extends\n  _MatMenuItemHarnessBase<typeof MatMenuHarness, MatMenuHarness> {\n  /** The selector for the host element of a `MatMenuItem` instance. */\n  static hostSelector = '.mat-mdc-menu-item';\n  protected _menuClass = MatMenuHarness;\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a `MatMenuItemHarness` that meets\n   * certain criteria.\n   * @param options Options for filtering which menu item instances are considered a match.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: MenuItemHarnessFilters = {}): HarnessPredicate<MatMenuItemHarness> {\n    return new HarnessPredicate(MatMenuItemHarness, options)\n        .addOption('text', options.text,\n            (harness, text) => HarnessPredicate.stringMatches(harness.getText(), text))\n        .addOption('hasSubmenu', options.hasSubmenu,\n            async (harness, hasSubmenu) => (await harness.hasSubmenu()) === hasSubmenu);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './menu-harness';\nexport {MenuHarnessFilters, MenuItemHarnessFilters} from '@angular/material/menu/testing';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;AAAA;;;;;;;AAgBA;AACA,MAAa,cAAe,SAAQ,mBACoC;IADxE;;QAIY,eAAU,GAAG,kBAAkB,CAAC;KAa3C;;;;;;;IALC,OAAO,IAAI,CAAC,UAA8B,EAAE;QAC1C,OAAO,IAAI,gBAAgB,CAAC,cAAc,EAAE,OAAO,CAAC;aAC/C,SAAS,CAAC,aAAa,EAAE,OAAO,CAAC,WAAW,EACzC,CAAC,OAAO,EAAE,IAAI,KAAK,gBAAgB,CAAC,aAAa,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;KAC5F;;;AAbM,2BAAY,GAAG,mBAAmB,CAAC;;AAiB5C,MAAa,kBAAmB,SAC9B,uBAA8D;IADhE;;QAIY,eAAU,GAAG,cAAc,CAAC;KAevC;;;;;;;IAPC,OAAO,IAAI,CAAC,UAAkC,EAAE;QAC9C,OAAO,IAAI,gBAAgB,CAAC,kBAAkB,EAAE,OAAO,CAAC;aACnD,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,EAC3B,CAAC,OAAO,EAAE,IAAI,KAAK,gBAAgB,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;aAC9E,SAAS,CAAC,YAAY,EAAE,OAAO,CAAC,UAAU,EACvC,CAAO,OAAO,EAAE,UAAU,oDAAK,OAAA,CAAC,MAAM,OAAO,CAAC,UAAU,EAAE,MAAM,UAAU,CAAA,GAAA,CAAC,CAAC;KACrF;;;AAfM,+BAAY,GAAG,oBAAoB,CAAC;;ACxC7C;;;;;;GAMG;;ACNH;;;;;;GAMG;;;;"}