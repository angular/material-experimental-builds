{"version":3,"file":"mdc-tooltip.js","sources":["../../../../../../src/material-experimental/mdc-tooltip/tooltip-animations.ts","../../../../../../src/material-experimental/mdc-tooltip/tooltip.ts","../../../../../../src/material-experimental/mdc-tooltip/module.ts","../../../../../../src/material-experimental/mdc-tooltip/public-api.ts","../../../../../../src/material-experimental/mdc-tooltip/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nexport const matTooltipAnimations: {\n  readonly tooltipState: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions a tooltip in and out. */\n  tooltipState: trigger('state', [\n    // TODO(crisbeto): these values are based on MDC's CSS.\n    // We should be able to use their styles directly once we land #19432.\n    state('initial, void, hidden', style({opacity: 0, transform: 'scale(0.8)'})),\n    state('visible', style({transform: 'scale(1)'})),\n    transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n    transition('* => hidden', animate('75ms cubic-bezier(0.4, 0, 1, 1)')),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Inject,\n  NgZone,\n  Optional,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {Platform} from '@angular/cdk/platform';\nimport {AriaDescriber, FocusMonitor} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {ConnectedPosition, Overlay, ScrollDispatcher} from '@angular/cdk/overlay';\nimport {\n  MatTooltipDefaultOptions,\n  MAT_TOOLTIP_DEFAULT_OPTIONS,\n  MAT_TOOLTIP_SCROLL_STRATEGY,\n  _MatTooltipBase,\n  _TooltipComponentBase,\n} from '@angular/material/tooltip';\nimport {numbers} from '@material/tooltip';\nimport {matTooltipAnimations} from './tooltip-animations';\n\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nexport const TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\n\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\n@Directive({\n  selector: '[matTooltip]',\n  exportAs: 'matTooltip',\n  host: {\n    'class': 'mat-mdc-tooltip-trigger'\n  }\n})\nexport class MatTooltip extends _MatTooltipBase<TooltipComponent> {\n  protected readonly _tooltipComponent = TooltipComponent;\n  protected readonly _cssClassPrefix = 'mat-mdc';\n\n  constructor(\n    overlay: Overlay,\n    elementRef: ElementRef<HTMLElement>,\n    scrollDispatcher: ScrollDispatcher,\n    viewContainerRef: ViewContainerRef,\n    ngZone: NgZone,\n    platform: Platform,\n    ariaDescriber: AriaDescriber,\n    focusMonitor: FocusMonitor,\n    @Inject(MAT_TOOLTIP_SCROLL_STRATEGY) scrollStrategy: any,\n    @Optional() dir: Directionality,\n    @Optional() @Inject(MAT_TOOLTIP_DEFAULT_OPTIONS) defaultOptions: MatTooltipDefaultOptions,\n    @Inject(DOCUMENT) _document: any) {\n\n    super(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber,\n      focusMonitor, scrollStrategy, dir, defaultOptions, _document);\n    this._viewportMargin = numbers.MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n  }\n\n  protected _addOffset(position: ConnectedPosition): ConnectedPosition {\n    const offset = numbers.UNBOUNDED_ANCHOR_GAP;\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n\n    if (position.originY === 'top') {\n      position.offsetY = -offset;\n    } else if (position.originY === 'bottom') {\n      position.offsetY = offset;\n    } else if (position.originX === 'start') {\n      position.offsetX = isLtr ? -offset : offset;\n    } else if (position.originX === 'end') {\n      position.offsetX = isLtr ? offset : -offset;\n    }\n\n    return position;\n  }\n}\n\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\n@Component({\n  selector: 'mat-tooltip-component',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTooltipAnimations.tooltipState],\n  host: {\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n    '(body:click)': 'this._handleBodyInteraction()',\n    '(body:auxclick)': 'this._handleBodyInteraction()',\n    'aria-hidden': 'true',\n  }\n})\nexport class TooltipComponent extends _TooltipComponentBase {\n  constructor(changeDetectorRef: ChangeDetectorRef) {\n    super(changeDetectorRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {MatCommonModule} from '@angular/material-experimental/mdc-core';\nimport {MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER} from '@angular/material/tooltip';\nimport {MatTooltip, TooltipComponent} from './tooltip';\n\n@NgModule({\n  imports: [\n    A11yModule,\n    CommonModule,\n    OverlayModule,\n    MatCommonModule,\n  ],\n  exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n  declarations: [MatTooltip, TooltipComponent],\n  entryComponents: [TooltipComponent],\n  providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class MatTooltipModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './tooltip';\nexport * from './tooltip-animations';\nexport * from './module';\n\nexport {\n  getMatTooltipInvalidPositionError,\n  MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n  MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n  TooltipPosition,\n  TooltipTouchGestures,\n  TooltipVisibility,\n  SCROLL_THROTTLE_MS,\n  MAT_TOOLTIP_SCROLL_STRATEGY,\n  MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  MatTooltipDefaultOptions,\n  MAT_TOOLTIP_DEFAULT_OPTIONS\n} from '@angular/material/tooltip';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}