{"version":3,"file":"mdc-autocomplete.mjs","sources":["../../../../../../src/material-experimental/mdc-autocomplete/animations.ts","../../../../../../src/material-experimental/mdc-autocomplete/autocomplete.ts","../../../../../../src/material-experimental/mdc-autocomplete/autocomplete.html","../../../../../../src/material-experimental/mdc-autocomplete/autocomplete-trigger.ts","../../../../../../src/material-experimental/mdc-autocomplete/autocomplete-origin.ts","../../../../../../src/material-experimental/mdc-autocomplete/module.ts","../../../../../../src/material-experimental/mdc-autocomplete/public-api.ts","../../../../../../src/material-experimental/mdc-autocomplete/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  animate,\n  AnimationTriggerMetadata,\n  group,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n// Animation values come from\n// https://github.com/material-components/material-components-web/blob/master/packages/mdc-menu-surface/_mixins.scss\n// TODO(mmalerba): Ideally find a way to import the values from MDC's code.\nexport const panelAnimation: AnimationTriggerMetadata = trigger('panelAnimation', [\n  state(\n    'void, hidden',\n    style({\n      opacity: 0,\n      transform: 'scaleY(0.8)',\n    }),\n  ),\n  transition(':enter, hidden => visible', [\n    group([\n      animate('0.03s linear', style({opacity: 1})),\n      animate('0.12s cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scaleY(1)'})),\n    ]),\n  ]),\n  transition(':leave, visible => hidden', [animate('0.075s linear', style({opacity: 0}))]),\n]);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  MAT_OPTGROUP,\n  MAT_OPTION_PARENT_COMPONENT,\n  MatOptgroup,\n  MatOption,\n} from '@angular/material-experimental/mdc-core';\nimport {_MatAutocompleteBase} from '@angular/material/autocomplete';\nimport {panelAnimation} from './animations';\n\n@Component({\n  selector: 'mat-autocomplete',\n  templateUrl: 'autocomplete.html',\n  styleUrls: ['autocomplete.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'matAutocomplete',\n  inputs: ['disableRipple'],\n  host: {\n    'class': 'mat-mdc-autocomplete',\n  },\n  providers: [{provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete}],\n  animations: [panelAnimation],\n})\nexport class MatAutocomplete extends _MatAutocompleteBase {\n  /** Reference to all option groups within the autocomplete. */\n  @ContentChildren(MAT_OPTGROUP, {descendants: true}) optionGroups: QueryList<MatOptgroup>;\n  /** Reference to all options within the autocomplete. */\n  @ContentChildren(MatOption, {descendants: true}) options: QueryList<MatOption>;\n  protected _visibleClass = 'mat-mdc-autocomplete-visible';\n  protected _hiddenClass = 'mat-mdc-autocomplete-hidden';\n}\n","<ng-template let-formFieldId=\"id\">\n  <div\n    class=\"mat-mdc-autocomplete-panel mdc-menu-surface mdc-menu-surface--open\"\n    role=\"listbox\"\n    [id]=\"id\"\n    [ngClass]=\"_classList\"\n    [attr.aria-label]=\"ariaLabel || null\"\n    [attr.aria-labelledby]=\"_getPanelAriaLabelledby(formFieldId)\"\n    [@panelAnimation]=\"isOpen ? 'visible' : 'hidden'\"\n    #panel>\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, forwardRef} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {_MatAutocompleteTriggerBase} from '@angular/material/autocomplete';\nimport {\n  _countGroupLabelsBeforeOption,\n  _getOptionScrollPosition,\n} from '@angular/material-experimental/mdc-core';\n\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nexport const MAT_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatAutocompleteTrigger),\n  multi: true,\n};\n\n@Directive({\n  selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n  host: {\n    'class': 'mat-mdc-autocomplete-trigger',\n    '[attr.autocomplete]': 'autocompleteAttribute',\n    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n    '[attr.aria-haspopup]': '!autocompleteDisabled',\n    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n    // a little earlier. This avoids issues where IE delays the focusing of the input.\n    '(focusin)': '_handleFocus()',\n    '(blur)': '_onTouched()',\n    '(input)': '_handleInput($event)',\n    '(keydown)': '_handleKeydown($event)',\n  },\n  exportAs: 'matAutocompleteTrigger',\n  providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR],\n})\nexport class MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n  protected _aboveClass = 'mat-mdc-autocomplete-panel-above';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {_MatAutocompleteOriginBase} from '@angular/material/autocomplete';\n\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\n@Directive({\n  selector: '[matAutocompleteOrigin]',\n  exportAs: 'matAutocompleteOrigin',\n})\nexport class MatAutocompleteOrigin extends _MatAutocompleteOriginBase {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatOptionModule} from '@angular/material-experimental/mdc-core';\nimport {CommonModule} from '@angular/common';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER} from '@angular/material/autocomplete';\nimport {MatAutocomplete} from './autocomplete';\nimport {MatAutocompleteTrigger} from './autocomplete-trigger';\nimport {MatAutocompleteOrigin} from './autocomplete-origin';\n\n@NgModule({\n  imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule],\n  exports: [\n    CdkScrollableModule,\n    MatAutocomplete,\n    MatOptionModule,\n    MatCommonModule,\n    MatAutocompleteTrigger,\n    MatAutocompleteOrigin,\n  ],\n  declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n  providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n})\nexport class MatAutocompleteModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './module';\nexport * from './autocomplete';\nexport * from './autocomplete-origin';\nexport * from './autocomplete-trigger';\n\n// Everything from `material/autocomplete`, except for `MatAutcomplete` and `MatAutocompleteModule`.\nexport {\n  getMatAutocompleteMissingPanelError,\n  MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,\n  MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n  MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n  MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n  MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  MatAutocompleteActivatedEvent,\n  MatAutocompleteDefaultOptions,\n  MatAutocompleteSelectedEvent,\n} from '@angular/material/autocomplete';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}