{"version":3,"file":"mdc-autocomplete.js","sources":["../../../../../../src/material-experimental/mdc-autocomplete/animations.ts","../../../../../../src/material-experimental/mdc-autocomplete/autocomplete.ts","../../../../../../src/material-experimental/mdc-autocomplete/autocomplete-trigger.ts","../../../../../../src/material-experimental/mdc-autocomplete/autocomplete-origin.ts","../../../../../../src/material-experimental/mdc-autocomplete/module.ts","../../../../../../src/material-experimental/mdc-autocomplete/public-api.ts","../../../../../../src/material-experimental/mdc-autocomplete/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  animate,\n  AnimationTriggerMetadata,\n  group,\n  state,\n  style,\n  transition,\n  trigger\n} from '@angular/animations';\n\n// Animation values come from\n// https://github.com/material-components/material-components-web/blob/master/packages/mdc-menu-surface/_mixins.scss\n// TODO(mmalerba): Ideally find a way to import the values from MDC's code.\nexport const panelAnimation: AnimationTriggerMetadata = trigger('panelAnimation', [\n  state('void, hidden', style({\n    opacity: 0,\n    transform: 'scale(0.8)',\n  })),\n  transition(':enter, hidden => visible', [\n    group([\n        animate('0.03s linear', style({ opacity: 1 })),\n        animate('0.12s cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'scale(1)' })),\n    ]),\n  ]),\n  transition(':leave, visible => hidden', [\n    animate('0.075s linear', style({ opacity: 0 })),\n  ]),\n]);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  MAT_OPTGROUP,\n  MAT_OPTION_PARENT_COMPONENT,\n  MatOptgroup,\n  MatOption,\n} from '@angular/material-experimental/mdc-core';\nimport {_MatAutocompleteBase} from '@angular/material/autocomplete';\nimport {panelAnimation} from './animations';\n\n@Component({\n  selector: 'mat-autocomplete',\n  templateUrl: 'autocomplete.html',\n  styleUrls: ['autocomplete.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'matAutocomplete',\n  inputs: ['disableRipple'],\n  host: {\n    'class': 'mat-mdc-autocomplete'\n  },\n  providers: [\n    {provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete}\n  ],\n  animations: [panelAnimation],\n})\nexport class MatAutocomplete extends _MatAutocompleteBase {\n  @ContentChildren(MAT_OPTGROUP, {descendants: true}) optionGroups: QueryList<MatOptgroup>;\n  @ContentChildren(MatOption, {descendants: true}) options: QueryList<MatOption>;\n  protected _visibleClass = 'mat-mdc-autocomplete-visible';\n  protected _hiddenClass = 'mat-mdc-autocomplete-hidden';\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, forwardRef} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {_MatAutocompleteTriggerBase} from '@angular/material/autocomplete';\nimport {\n  _countGroupLabelsBeforeOption,\n  _getOptionScrollPosition,\n} from '@angular/material-experimental/mdc-core';\n\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nexport const MAT_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatAutocompleteTrigger),\n  multi: true\n};\n\n@Directive({\n  selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n  host: {\n    'class': 'mat-mdc-autocomplete-trigger',\n    '[attr.autocomplete]': 'autocompleteAttribute',\n    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n    '[attr.aria-haspopup]': '!autocompleteDisabled',\n    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n    // a little earlier. This avoids issues where IE delays the focusing of the input.\n    '(focusin)': '_handleFocus()',\n    '(blur)': '_onTouched()',\n    '(input)': '_handleInput($event)',\n    '(keydown)': '_handleKeydown($event)',\n  },\n  exportAs: 'matAutocompleteTrigger',\n  providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n})\nexport class MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n  protected _aboveClass = 'mat-mdc-autocomplete-panel-above';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {_MatAutocompleteOriginBase} from '@angular/material/autocomplete';\n\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\n@Directive({\n  selector: '[matAutocompleteOrigin]',\n  exportAs: 'matAutocompleteOrigin',\n})\nexport class MatAutocompleteOrigin extends _MatAutocompleteOriginBase {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatOptionModule} from '@angular/material-experimental/mdc-core';\nimport {CommonModule} from '@angular/common';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER} from '@angular/material/autocomplete';\nimport {MatAutocomplete} from './autocomplete';\nimport {MatAutocompleteTrigger} from './autocomplete-trigger';\nimport {MatAutocompleteOrigin} from './autocomplete-origin';\n\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    MatOptionModule,\n    MatCommonModule,\n    CommonModule\n  ],\n  exports: [\n    CdkScrollableModule,\n    MatAutocomplete,\n    MatOptionModule,\n    MatCommonModule,\n    MatAutocompleteTrigger,\n    MatAutocompleteOrigin,\n  ],\n  declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n  providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n})\nexport class MatAutocompleteModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './module';\nexport * from './autocomplete';\nexport * from './autocomplete-origin';\nexport * from './autocomplete-trigger';\n\n// Everything from `material/autocomplete`, except for `MatAutcomplete` and `MatAutocompleteModule`.\nexport {\n  getMatAutocompleteMissingPanelError,\n  MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,\n  MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n  MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n  MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n  MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  MatAutocompleteActivatedEvent,\n  MatAutocompleteDefaultOptions,\n  MatAutocompleteSelectedEvent,\n} from '@angular/material/autocomplete';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {panelAnimation as Éµangular_material_src_material_experimental_mdc_autocomplete_mdc_autocomplete_a} from './animations';"],"names":[],"mappings":"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"}