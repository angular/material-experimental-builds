{"version":3,"file":"mdc-autocomplete.js","sources":["../../../../../../src/material-experimental/mdc-autocomplete/autocomplete.ts","../../../../../../src/material-experimental/mdc-autocomplete/autocomplete-trigger.ts","../../../../../../src/material-experimental/mdc-autocomplete/autocomplete-origin.ts","../../../../../../src/material-experimental/mdc-autocomplete/module.ts","../../../../../../src/material-experimental/mdc-autocomplete/public-api.ts","../../../../../../src/material-experimental/mdc-autocomplete/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChildren,\n  QueryList,\n} from '@angular/core';\nimport {MAT_OPTGROUP} from '@angular/material/core';\nimport {_MatAutocompleteBase} from '@angular/material/autocomplete';\nimport {\n  MAT_OPTION_PARENT_COMPONENT,\n  MatOptgroup,\n  MatOption,\n} from '@angular/material-experimental/mdc-core';\n\n\n@Component({\n  selector: 'mat-autocomplete',\n  templateUrl: 'autocomplete.html',\n  styleUrls: ['autocomplete.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'matAutocomplete',\n  inputs: ['disableRipple'],\n  host: {\n    'class': 'mat-mdc-autocomplete'\n  },\n  providers: [\n    {provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete}\n  ]\n})\nexport class MatAutocomplete extends _MatAutocompleteBase {\n  // TODO: Remove cast once https://github.com/angular/angular/pull/37506 is available.\n  @ContentChildren(MAT_OPTGROUP as any, {descendants: true}) optionGroups: QueryList<MatOptgroup>;\n  @ContentChildren(MatOption, {descendants: true}) options: QueryList<MatOption>;\n  protected _visibleClass = 'mat-mdc-autocomplete-visible';\n  protected _hiddenClass = 'mat-mdc-autocomplete-hidden';\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, forwardRef} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {_MatAutocompleteTriggerBase} from '@angular/material/autocomplete';\nimport {_countGroupLabelsBeforeOption, _getOptionScrollPosition} from '@angular/material/core';\n\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nexport const MAT_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatAutocompleteTrigger),\n  multi: true\n};\n\n@Directive({\n  selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n  host: {\n    'class': 'mat-autocomplete-trigger',\n    '[attr.autocomplete]': 'autocompleteAttribute',\n    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n    '[attr.aria-haspopup]': '!autocompleteDisabled',\n    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n    // a little earlier. This avoids issues where IE delays the focusing of the input.\n    '(focusin)': '_handleFocus()',\n    '(blur)': '_onTouched()',\n    '(input)': '_handleInput($event)',\n    '(keydown)': '_handleKeydown($event)',\n  },\n  exportAs: 'matAutocompleteTrigger',\n  providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n})\nexport class MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n  protected _aboveClass = 'mat-mdc-autocomplete-panel-above';\n\n  protected _scrollToOption(index: number): void {\n    // Given that we are not actually focusing active options, we must manually adjust scroll\n    // to reveal options below the fold. First, we find the offset of the option from the top\n    // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n    // the panel height + the option height, so the active option will be just visible at the\n    // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n    // will become the offset. If that offset is visible within the panel already, the scrollTop is\n    // not adjusted.\n    const autocomplete = this.autocomplete;\n    const labelCount = _countGroupLabelsBeforeOption(index,\n      autocomplete.options, autocomplete.optionGroups);\n\n    if (index === 0 && labelCount === 1) {\n      // If we've got one group label before the option and we're at the top option,\n      // scroll the list to the top. This is better UX than scrolling the list to the\n      // top of the option, because it allows the user to read the top group's label.\n      autocomplete._setScrollTop(0);\n    } else {\n      const option = autocomplete.options.toArray()[index];\n\n      if (option) {\n        const element = option._getHostElement();\n        const newScrollPosition = _getOptionScrollPosition(\n          element.offsetTop,\n          element.offsetHeight,\n          autocomplete._getScrollTop(),\n          autocomplete.panel.nativeElement.offsetHeight\n        );\n\n        autocomplete._setScrollTop(newScrollPosition);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {_MatAutocompleteOriginBase} from '@angular/material/autocomplete';\n\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\n@Directive({\n  selector: '[matAutocompleteOrigin]',\n  exportAs: 'matAutocompleteOrigin',\n})\nexport class MatAutocompleteOrigin extends _MatAutocompleteOriginBase {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatOptionModule} from '@angular/material-experimental/mdc-core';\nimport {CommonModule} from '@angular/common';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER} from '@angular/material/autocomplete';\nimport {MatAutocomplete} from './autocomplete';\nimport {MatAutocompleteTrigger} from './autocomplete-trigger';\nimport {MatAutocompleteOrigin} from './autocomplete-origin';\n\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    MatOptionModule,\n    MatCommonModule,\n    CommonModule\n  ],\n  exports: [\n    CdkScrollableModule,\n    MatAutocomplete,\n    MatOptionModule,\n    MatCommonModule,\n    MatAutocompleteTrigger,\n    MatAutocompleteOrigin,\n  ],\n  declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n  providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n})\nexport class MatAutocompleteModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './module';\nexport * from './autocomplete';\nexport * from './autocomplete-origin';\nexport * from './autocomplete-trigger';\n\n// Everything from `material/autocomplete`, except for `MatAutcomplete` and `MatAutocompleteModule`.\nexport {\n  AUTOCOMPLETE_OPTION_HEIGHT,\n  AUTOCOMPLETE_PANEL_HEIGHT,\n  getMatAutocompleteMissingPanelError,\n  MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,\n  MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n  MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n  MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n  MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  MatAutocompleteActivatedEvent,\n  MatAutocompleteDefaultOptions,\n  MatAutocompleteSelectedEvent,\n} from '@angular/material/autocomplete';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}