{"version":3,"file":"mdc-button__testing.js","sources":["../../../../../../src/material-experimental/mdc-button/testing/button-harness.ts","../../../../../../src/material-experimental/mdc-button/testing/public-api.ts","../../../../../../src/material-experimental/mdc-button/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentHarness, HarnessPredicate} from '@angular/cdk/testing';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ButtonHarnessFilters} from '@angular/material/button/testing';\n\n\n/** Harness for interacting with a MDC-based mat-button in tests. */\nexport class MatButtonHarness extends ComponentHarness {\n  // TODO(jelbourn) use a single class, like `.mat-button-base`\n  static hostSelector = [\n    '[mat-button]',\n    '[mat-raised-button]',\n    '[mat-flat-button]',\n    '[mat-icon-button]',\n    '[mat-stroked-button]',\n    '[mat-fab]',\n    '[mat-mini-fab]',\n  ].join(',');\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a button with specific attributes.\n   * @param options Options for narrowing the search:\n   *   - `selector` finds a button whose host element matches the given selector.\n   *   - `text` finds a button with specific text content.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: ButtonHarnessFilters = {}): HarnessPredicate<MatButtonHarness> {\n    return new HarnessPredicate(MatButtonHarness, options)\n        .addOption('text', options.text,\n            (harness, text) => HarnessPredicate.stringMatches(harness.getText(), text));\n  }\n\n  /** Clicks the button. */\n  async click(): Promise<void> {\n    return (await this.host()).click();\n  }\n\n  /** Gets a boolean promise indicating if the button is disabled. */\n  async isDisabled(): Promise<boolean> {\n    const disabled = (await this.host()).getAttribute('disabled');\n    return coerceBooleanProperty(await disabled);\n  }\n\n  /** Gets a promise for the button's label text. */\n  async getText(): Promise<string> {\n    return (await this.host()).text();\n  }\n\n  /** Focuses the button and returns a void promise that indicates when the action is complete. */\n  async focus(): Promise<void> {\n    return (await this.host()).focus();\n  }\n\n  /** Blurs the button and returns a void promise that indicates when the action is complete. */\n  async blur(): Promise<void> {\n    return (await this.host()).blur();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './button-harness';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;AAAA;;;;;;;AAaA;AACA;IAAA,MAAa,gBAAiB,SAAQ,gBAAgB;;;;;;;;QAmBpD,OAAO,IAAI,CAAC,UAAgC,EAAE;YAC5C,OAAO,IAAI,gBAAgB,CAAC,gBAAgB,EAAE,OAAO,CAAC;iBACjD,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,EAC3B,CAAC,OAAO,EAAE,IAAI,KAAK,gBAAgB,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;SACrF;;QAGK,KAAK;;gBACT,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC;aACpC;SAAA;;QAGK,UAAU;;gBACd,MAAM,QAAQ,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC;gBAC9D,OAAO,qBAAqB,CAAC,MAAM,QAAQ,CAAC,CAAC;aAC9C;SAAA;;QAGK,OAAO;;gBACX,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC;aACnC;SAAA;;QAGK,KAAK;;gBACT,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC;aACpC;SAAA;;QAGK,IAAI;;gBACR,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC;aACnC;SAAA;;;IA/CM,6BAAY,GAAG;QACpB,cAAc;QACd,qBAAqB;QACrB,mBAAmB;QACnB,mBAAmB;QACnB,sBAAsB;QACtB,WAAW;QACX,gBAAgB;KACjB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAwCd,uBAAC;;;AChED;;;;;;GAMG;;ACNH;;;;;;GAMG;;;;"}