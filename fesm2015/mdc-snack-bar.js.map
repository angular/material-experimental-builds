{"version":3,"file":"mdc-snack-bar.js","sources":["../../../../../../src/material-experimental/mdc-snack-bar/simple-snack-bar.ts","../../../../../../src/material-experimental/mdc-snack-bar/snack-bar-container.ts","../../../../../../src/material-experimental/mdc-snack-bar/snack-bar-content.ts","../../../../../../src/material-experimental/mdc-snack-bar/module.ts","../../../../../../src/material-experimental/mdc-snack-bar/snack-bar.ts","../../../../../../src/material-experimental/mdc-snack-bar/public-api.ts","../../../../../../src/material-experimental/mdc-snack-bar/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, Inject, ViewEncapsulation} from '@angular/core';\nimport {\n  MAT_SNACK_BAR_DATA,\n  TextOnlySnackBar,\n  MatSnackBarRef,\n  SimpleSnackBar\n} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'mat-simple-snack-bar',\n  templateUrl: 'simple-snack-bar.html',\n  styleUrls: ['simple-snack-bar.css'],\n  exportAs: 'matSnackBar',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-mdc-simple-snack-bar',\n  }\n})\nexport class MatSimpleSnackBar implements TextOnlySnackBar {\n  constructor(\n      public snackBarRef: MatSnackBarRef<SimpleSnackBar>,\n      @Inject(MAT_SNACK_BAR_DATA) public data: {message: string, action: string}) {\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  BasePortalOutlet,\n  CdkPortalOutlet,\n  ComponentPortal,\n  TemplatePortal\n} from '@angular/cdk/portal';\nimport {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  OnDestroy,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MatSnackBarConfig, SnackBarContainer} from '@angular/material/snack-bar';\nimport {MDCSnackbarAdapter, MDCSnackbarFoundation} from '@material/snackbar';\nimport {Observable, Subject} from 'rxjs';\n\n/**\n * The MDC label class that should wrap the label content of the snack bar.\n * @docs-private\n */\nconst MDC_SNACKBAR_LABEL_CLASS = 'mdc-snackbar__label';\n\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\n@Component({\n  selector: 'mat-mdc-snack-bar-container',\n  templateUrl: 'snack-bar-container.html',\n  styleUrls: ['snack-bar-container.css'],\n  // In Ivy embedded views will be change detected from their declaration place, rather than\n  // where they were stamped out. This means that we can't have the snack bar container be OnPush,\n  // because it might cause snack bars that were opened from a template not to be out of date.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[attr.role]': '_role',\n    'class': 'mdc-snackbar mat-mdc-snack-bar-container',\n    '[class.mat-snack-bar-container]': 'false',\n    // Mark this element with a 'mat-exit' attribute to indicate that the snackbar has\n    // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n    // test harness.\n    '[attr.mat-exit]': `_exiting ? '' : null`,\n  }\n})\nexport class MatSnackBarContainer extends BasePortalOutlet\n    implements SnackBarContainer, AfterViewChecked, OnDestroy {\n  /** Subject for notifying that the snack bar has exited from view. */\n  readonly _onExit: Subject<void> = new Subject();\n\n  /** Subject for notifying that the snack bar has finished entering the view. */\n  readonly _onEnter: Subject<void> = new Subject();\n\n  /** ARIA role for the snack bar container. */\n  _role: 'alert' | 'status' | null;\n\n  /** Whether the snack bar is currently exiting. */\n  _exiting = false;\n\n  private _mdcAdapter: MDCSnackbarAdapter = {\n    addClass: (className: string) => this._setClass(className, true),\n    removeClass: (className: string) => this._setClass(className, false),\n    announce: () => {},\n    notifyClosed: () => {\n      this._onExit.next();\n      this._mdcFoundation.destroy();\n    },\n    notifyClosing: () => {},\n    notifyOpened: () => this._onEnter.next(),\n    notifyOpening: () => {},\n  };\n\n  _mdcFoundation = new MDCSnackbarFoundation(this._mdcAdapter);\n\n  /** The portal outlet inside of this container into which the snack bar content will be loaded. */\n  @ViewChild(CdkPortalOutlet, {static: true}) _portalOutlet: CdkPortalOutlet;\n\n  /** Element that acts as the MDC surface container which should contain the label and actions. */\n  @ViewChild('surface', {static: true}) _surface: ElementRef;\n\n  /**\n   * Element that will have the `mdc-snackbar__label` class applied if the attached component\n   * or template does not have it. This ensures that the appropriate structure, typography, and\n   * color is applied to the attached view.\n   */\n  @ViewChild('label', {static: true}) _label: ElementRef;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>,\n      public snackBarConfig: MatSnackBarConfig) {\n    super();\n\n    // Based on the ARIA spec, `alert` and `status` roles have an\n    // implicit `assertive` and `polite` politeness respectively.\n    if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n      this._role = 'alert';\n    } else if (snackBarConfig.politeness === 'off') {\n      this._role = null;\n    } else {\n      this._role = 'status';\n    }\n\n    // `MatSnackBar` will use the config's timeout to determine when the snack bar should be closed.\n    // Set this to `-1` to mark it as indefinitely open so that MDC does not close itself.\n    this._mdcFoundation.setTimeoutMs(-1);\n  }\n\n  ngAfterViewChecked() {\n    // Check to see if the attached component or template uses the MDC template structure,\n    // specifically the MDC label. If not, the container should apply the MDC label class to this\n    // component's label container, which will apply MDC's label styles to the attached view.\n    if (!this._label.nativeElement.querySelector(`.${MDC_SNACKBAR_LABEL_CLASS}`)) {\n      this._label.nativeElement.classList.add(MDC_SNACKBAR_LABEL_CLASS);\n    } else {\n      this._label.nativeElement.classList.remove(MDC_SNACKBAR_LABEL_CLASS);\n    }\n  }\n\n  /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n  ngOnDestroy() {\n    this._mdcFoundation.close();\n  }\n\n  enter() {\n    this._mdcFoundation.open();\n  }\n\n  exit(): Observable<void> {\n    this._exiting = true;\n    this._mdcFoundation.close();\n    return this._onExit.asObservable();\n  }\n\n  /** Attach a component portal as content to this snack bar container. */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    this._assertNotAttached();\n    this._applySnackBarClasses();\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  /** Attach a template portal as content to this snack bar container. */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    this._assertNotAttached();\n    this._applySnackBarClasses();\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n\n  private _setClass(cssClass: string, active: boolean) {\n    const classList = this._elementRef.nativeElement.classList;\n    active ? classList.add(cssClass) : classList.remove(cssClass);\n  }\n\n  /** Applies the user-configured CSS classes to the snack bar. */\n  private _applySnackBarClasses() {\n    const panelClasses = this.snackBarConfig.panelClass;\n    if (panelClasses) {\n      if (Array.isArray(panelClasses)) {\n        // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n        panelClasses.forEach(cssClass => this._setClass(cssClass, true));\n      } else {\n        this._setClass(panelClasses, true);\n      }\n    }\n  }\n\n  /** Asserts that no content is already attached to the container. */\n  private _assertNotAttached() {\n    if (this._portalOutlet.hasAttached()) {\n      throw Error('Attempting to attach snack bar content after content is already attached');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\n/** Directive that should be applied to the text element to be rendered in the snack bar. */\n@Directive({\n  selector: `[matSnackBarLabel]`,\n  host: {\n    'class': 'mat-mdc-snack-bar-label mdc-snackbar__label',\n  }\n})\nexport class MatSnackBarLabel {}\n\n/** Directive that should be applied to the element containing the snack bar's action buttons. */\n@Directive({\n  selector: `[matSnackBarActions]`,\n  host: {\n    'class': 'mat-mdc-snack-bar-actions mdc-snackbar__actions',\n  }\n})\nexport class MatSnackBarActions {}\n\n/** Directive that should be applied to each of the snack bar's action buttons. */\n@Directive({\n  selector: `[matSnackBarAction]`,\n  host: {\n    'class': 'mat-mdc-snack-bar-action mdc-snackbar__action',\n  }\n})\nexport class MatSnackBarAction {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCommonModule} from '@angular/material/core';\n\nimport {MatSimpleSnackBar} from './simple-snack-bar';\nimport {MatSnackBarContainer} from './snack-bar-container';\nimport {\n  MatSnackBarAction,\n  MatSnackBarActions,\n  MatSnackBarLabel\n} from './snack-bar-content';\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    PortalModule,\n    CommonModule,\n    MatButtonModule,\n    MatCommonModule,\n  ],\n  exports: [\n    MatCommonModule,\n    MatSnackBarContainer,\n    MatSnackBarLabel,\n    MatSnackBarActions,\n    MatSnackBarAction,\n  ],\n  declarations: [\n    MatSimpleSnackBar,\n    MatSnackBarContainer,\n    MatSnackBarLabel,\n    MatSnackBarActions,\n    MatSnackBarAction,\n  ],\n  entryComponents: [\n    MatSimpleSnackBar,\n    MatSnackBarContainer,\n  ],\n})\nexport class MatSnackBarModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {MatSnackBar as BaseMatSnackBar} from '@angular/material/snack-bar';\nimport {MatSnackBarModule} from './module';\nimport {MatSimpleSnackBar} from './simple-snack-bar';\nimport {MatSnackBarContainer} from './snack-bar-container';\n\n/**\n * Service to dispatch Material Design snack bar messages.\n */\n@Injectable({providedIn: MatSnackBarModule})\nexport class MatSnackBar extends BaseMatSnackBar {\n  protected simpleSnackBarComponent = MatSimpleSnackBar;\n  protected snackBarContainerComponent = MatSnackBarContainer;\n  protected handsetCssClass = 'mat-mdc-snack-bar-handset';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './simple-snack-bar';\nexport * from './snack-bar-container';\nexport * from './snack-bar-content';\nexport * from './snack-bar';\nexport * from './module';\n\nexport {\n  MatSnackBarConfig,\n  MatSnackBarRef,\n  SimpleSnackBar,\n  MAT_SNACK_BAR_DATA,\n  MAT_SNACK_BAR_DEFAULT_OPTIONS,\n} from '@angular/material/snack-bar';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["BaseMatSnackBar"],"mappings":"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"}