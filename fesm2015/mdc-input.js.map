{"version":3,"file":"mdc-input.js","sources":["../../../../../../src/material-experimental/mdc-input/input.ts","../../../../../../src/material-experimental/mdc-input/autosize.ts","../../../../../../src/material-experimental/mdc-input/module.ts","../../../../../../src/material-experimental/mdc-input/public-api.ts","../../../../../../src/material-experimental/mdc-input/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {MatFormFieldControl} from '@angular/material/form-field';\nimport {MatInput as BaseMatInput} from '@angular/material/input';\n\n// workaround until we have feature targeting for MDC text-field. At that\n// point we can just use the actual \"MatInput\" class and apply the MDC text-field\n// styles appropriately.\n\n@Directive({\n  selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n  exportAs: 'matInput',\n  host: {\n    'class': 'mat-mdc-input-element mdc-text-field__input',\n    // The BaseMatInput parent class adds `mat-input-element` and `mat-form-field-autofill-control`\n    // to the CSS classlist, but this should not be added for this MDC equivalent input.\n    '[class.mat-form-field-autofill-control]': 'false',\n    '[class.mat-input-element]': 'false',\n    '[class.mat-input-server]': '_isServer',\n    '[class.mat-mdc-textarea-input]': '_isTextarea',\n    // Native input properties that are overwritten by Angular inputs need to be synced with\n    // the native input element. Otherwise property bindings for those don't work.\n    '[id]': 'id',\n    '[disabled]': 'disabled',\n    '[required]': 'required',\n    '[attr.placeholder]': 'placeholder',\n    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n    // Only mark the input as invalid for assistive technology if it has a value since the\n    // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n    '[attr.aria-invalid]': 'errorState && !empty',\n    '[attr.aria-required]': 'required',\n  },\n  providers: [{provide: MatFormFieldControl, useExisting: MatInput}],\n})\nexport class MatInput extends BaseMatInput {}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MatTextareaAutosize as BaseTextareaAutosize} from '@angular/material/input';\nimport {Directive} from '@angular/core';\n\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.\n * @breaking-change 8.0.0\n */\n@Directive({\n  selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n  exportAs: 'matTextareaAutosize',\n  inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n  host: {\n    'class': 'cdk-textarea-autosize mat-mdc-autosize',\n    // Textarea elements that have the directive applied should have a single row by default.\n    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n    'rows': '1',\n  },\n})\nexport class MatTextareaAutosize extends BaseTextareaAutosize {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TextFieldModule} from '@angular/cdk/text-field';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material-experimental/mdc-core';\nimport {MatFormFieldModule} from '@angular/material-experimental/mdc-form-field';\nimport {MatTextareaAutosize} from './autosize';\nimport {MatInput} from './input';\n\n@NgModule({\n  imports: [MatCommonModule, MatFormFieldModule],\n  exports: [MatInput, MatTextareaAutosize, MatFormFieldModule, TextFieldModule, MatCommonModule],\n  declarations: [MatInput, MatTextareaAutosize],\n})\nexport class MatInputModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {MatInput} from './input';\nexport {MatInputModule} from './module';\nexport {MatTextareaAutosize} from './autosize';\nexport {\n  getMatInputUnsupportedTypeError,\n  MAT_INPUT_VALUE_ACCESSOR,\n} from '@angular/material/input';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["BaseMatInput","BaseTextareaAutosize"],"mappings":";;;;;;;;AAAA;;;;;;;AAQA,AAIA;;;AA8BA,MAAa,QAAS,SAAQA,UAAY;;;YA1BzC,SAAS,SAAC;gBACT,QAAQ,EAAE;0DAC8C;gBACxD,QAAQ,EAAE,UAAU;gBACpB,IAAI,EAAE;oBACJ,OAAO,EAAE,6CAA6C;;;oBAGtD,yCAAyC,EAAE,OAAO;oBAClD,2BAA2B,EAAE,OAAO;oBACpC,0BAA0B,EAAE,WAAW;oBACvC,gCAAgC,EAAE,aAAa;;;oBAG/C,MAAM,EAAE,IAAI;oBACZ,YAAY,EAAE,UAAU;oBACxB,YAAY,EAAE,UAAU;oBACxB,oBAAoB,EAAE,aAAa;oBACnC,iBAAiB,EAAE,sCAAsC;;;oBAGzD,qBAAqB,EAAE,sBAAsB;oBAC7C,sBAAsB,EAAE,UAAU;iBACnC;gBACD,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,mBAAmB,EAAE,WAAW,EAAE,QAAQ,EAAC,CAAC;aACnE;;;ACzCD;;;;;;;AAQA,AAGA;;;;;AAgBA,MAAa,mBAAoB,SAAQC,qBAAoB;;;YAX5D,SAAS,SAAC;gBACT,QAAQ,EAAE,uDAAuD;gBACjE,QAAQ,EAAE,qBAAqB;gBAC/B,MAAM,EAAE,CAAC,oBAAoB,EAAE,oBAAoB,CAAC;gBACpD,IAAI,EAAE;oBACJ,OAAO,EAAE,wCAAwC;;;oBAGjD,MAAM,EAAE,GAAG;iBACZ;aACF;;;AC1BD;;;;;;;AAQA,MAYa,cAAc;;;YAL1B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,eAAe,EAAE,kBAAkB,CAAC;gBAC9C,OAAO,EAAE,CAAC,QAAQ,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,eAAe,EAAE,eAAe,CAAC;gBAC9F,YAAY,EAAE,CAAC,QAAQ,EAAE,mBAAmB,CAAC;aAC9C;;;ACnBD;;;;;;GAMG;;ACNH;;GAEG;;;;"}