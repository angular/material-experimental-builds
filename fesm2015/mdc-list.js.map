{"version":3,"file":"mdc-list.js","sources":["../../../../../../src/material-experimental/mdc-list/list-base.ts","../../../../../../src/material-experimental/mdc-list/list.ts","../../../../../../src/material-experimental/mdc-list/action-list.ts","../../../../../../src/material-experimental/mdc-list/nav-list.ts","../../../../../../src/material-experimental/mdc-list/selection-list.ts","../../../../../../src/material-experimental/mdc-list/module.ts","../../../../../../src/material-experimental/mdc-list/public-api.ts","../../../../../../src/material-experimental/mdc-list/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  NgZone,\n  OnDestroy,\n  QueryList\n} from '@angular/core';\nimport {RippleConfig, RippleRenderer, RippleTarget, setLines} from '@angular/material/core';\nimport {MDCListAdapter, MDCListFoundation} from '@material/list';\nimport {Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\n\nfunction toggleClass(el: Element, className: string, on: boolean) {\n  if (on) {\n    el.classList.add(className);\n  } else {\n    el.classList.remove(className);\n  }\n}\n\n@Directive()\n/** @docs-private */\nexport abstract class MatListItemBase implements AfterContentInit, OnDestroy, RippleTarget {\n  lines: QueryList<ElementRef<Element>>;\n\n  rippleConfig: RippleConfig = {};\n\n  // TODO(mmalerba): Add @Input for disabling ripple.\n  rippleDisabled: boolean;\n\n  private _subscriptions = new Subscription();\n\n  private _rippleRenderer: RippleRenderer;\n\n  protected constructor(public _elementRef: ElementRef<HTMLElement>, protected _ngZone: NgZone,\n                        private _listBase: MatListBase, private _platform: Platform) {\n    this._initRipple();\n  }\n\n  ngAfterContentInit() {\n    this._monitorLines();\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.unsubscribe();\n    this._rippleRenderer._removeTriggerEvents();\n  }\n\n  _initDefaultTabIndex(tabIndex: number) {\n    const el = this._elementRef.nativeElement;\n    if (!el.hasAttribute('tabIndex')) {\n      el.tabIndex = tabIndex;\n    }\n  }\n\n  private _initRipple() {\n    this.rippleDisabled = this._listBase._isNonInteractive;\n    if (!this._listBase._isNonInteractive) {\n      this._elementRef.nativeElement.classList.add('mat-mdc-list-item-interactive');\n    }\n    this._rippleRenderer =\n        new RippleRenderer(this, this._ngZone, this._elementRef.nativeElement, this._platform);\n    this._rippleRenderer.setupTriggerEvents(this._elementRef.nativeElement);\n  }\n\n  /**\n   * Subscribes to changes in `MatLine` content children and annotates them appropriately when they\n   * change.\n   */\n  private _monitorLines() {\n    this._ngZone.runOutsideAngular(() => {\n      this._subscriptions.add(this.lines.changes.pipe(startWith(this.lines))\n          .subscribe((lines: QueryList<ElementRef<Element>>) => {\n            this._elementRef.nativeElement.classList\n                .toggle('mat-mdc-list-item-single-line', lines.length <= 1);\n            lines.forEach((line: ElementRef<Element>, index: number) => {\n              toggleClass(line.nativeElement,\n                  'mdc-list-item__primary-text', index === 0 && lines.length > 1);\n              toggleClass(line.nativeElement, 'mdc-list-item__secondary-text', index !== 0);\n            });\n            setLines(lines, this._elementRef, 'mat-mdc');\n          }));\n    });\n  }\n}\n\n@Directive()\n/** @docs-private */\nexport abstract class MatListBase {\n  @HostBinding('class.mdc-list--non-interactive')\n  _isNonInteractive: boolean = true;\n}\n\n@Directive()\nexport abstract class MatInteractiveListBase extends MatListBase\n    implements AfterViewInit, OnDestroy {\n  @HostListener('keydown', ['$event'])\n  _handleKeydown(event: KeyboardEvent) {\n    const index = this._indexForElement(event.target as HTMLElement);\n    this._foundation.handleKeydown(\n        event, this._elementAtIndex(index) === event.target, index);\n  }\n\n  @HostListener('click', ['$event'])\n  _handleClick(event: MouseEvent) {\n    this._foundation.handleClick(this._indexForElement(event.target as HTMLElement), false);\n  }\n\n  @HostListener('focusin', ['$event'])\n  _handleFocusin(event: FocusEvent) {\n    this._foundation.handleFocusIn(event, this._indexForElement(event.target as HTMLElement));\n  }\n\n  @HostListener('focusout', ['$event'])\n  _handleFocusout(event: FocusEvent) {\n    this._foundation.handleFocusOut(event, this._indexForElement(event.target as HTMLElement));\n  }\n\n  @ContentChildren(MatListItemBase, {descendants: true}) _items: QueryList<MatListItemBase>;\n\n  protected _adapter: MDCListAdapter = {\n    getListItemCount: () => this._items.length,\n    listItemAtIndexHasClass:\n        (index, className) => this._elementAtIndex(index).classList.contains(className),\n    addClassForElementIndex:\n        (index, className) => this._elementAtIndex(index).classList.add(className),\n    removeClassForElementIndex:\n        (index, className) => this._elementAtIndex(index).classList.remove(className),\n    getAttributeForElementIndex: (index, attr) => this._elementAtIndex(index).getAttribute(attr),\n    setAttributeForElementIndex:\n        (index, attr, value) => this._elementAtIndex(index).setAttribute(attr, value),\n    getFocusedElementIndex: () => this._indexForElement(this._document?.activeElement),\n    isFocusInsideList: () => this._element.nativeElement.contains(this._document?.activeElement),\n    isRootFocused: () => this._element.nativeElement === this._document?.activeElement,\n    focusItemAtIndex: index =>  this._elementAtIndex(index).focus(),\n\n    // MDC uses this method to disable focusable children of list items. However, we believe that\n    // this is not an accessible pattern and should be avoided, therefore we intentionally do not\n    // implement this method. In addition, implementing this would require violating Angular\n    // Material's general principle of not having components modify DOM elements they do not own.\n    // A user who feels they really need this feature can simply listen to the `(focus)` and\n    // `(blur)` events on the list item and enable/disable focus on the children themselves as\n    // appropriate.\n    setTabIndexForListItemChildren: () => {},\n\n    // The following methods have a dummy implementation in the base class because they are only\n    // applicable to certain types of lists. They should be implemented for the concrete classes\n    // where they are applicable.\n    hasCheckboxAtIndex: () => false,\n    hasRadioAtIndex: () => false,\n    setCheckedCheckboxOrRadioAtIndex: () => {},\n    isCheckboxCheckedAtIndex: () => false,\n\n    // TODO(mmalerba): Determine if we need to implement these.\n    getPrimaryTextAtIndex: () => '',\n    notifyAction: () => {},\n  };\n\n  protected _foundation: MDCListFoundation;\n\n  protected _document: Document;\n\n  private _itemsArr: MatListItemBase[] = [];\n\n  private _subscriptions = new Subscription();\n\n  constructor(protected _element: ElementRef<HTMLElement>, @Inject(DOCUMENT) document: any) {\n    super();\n    this._document = document;\n    this._isNonInteractive = false;\n    this._foundation = new MDCListFoundation(this._adapter);\n  }\n\n  ngAfterViewInit() {\n    this._initItems();\n    this._foundation.init();\n    this._foundation.layout();\n  }\n\n  ngOnDestroy() {\n    this._foundation.destroy();\n    this._subscriptions.unsubscribe();\n  }\n\n  private _initItems() {\n    this._subscriptions.add(\n        this._items.changes.pipe(startWith(null))\n            .subscribe(() => this._itemsArr = this._items.toArray()));\n    for (let i = 0; this._itemsArr.length; i++) {\n      this._itemsArr[i]._initDefaultTabIndex(i === 0 ? 0 : -1);\n    }\n  }\n\n  private _itemAtIndex(index: number): MatListItemBase {\n    return this._itemsArr[index];\n  }\n\n  private _elementAtIndex(index: number): HTMLElement {\n    return this._itemAtIndex(index)._elementRef.nativeElement;\n  }\n\n  private _indexForElement(element: Element | null) {\n    return element ?\n        this._itemsArr.findIndex(i => i._elementRef.nativeElement.contains(element)) : -1;\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  NgZone,\n  QueryList,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MatLine} from '@angular/material/core';\nimport {MatListBase, MatListItemBase} from './list-base';\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-list-avatar], [matListAvatar]',\n  host: {'class': 'mat-mdc-list-avatar mdc-list-item__graphic'}\n})\nexport class MatListAvatarCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-list-icon], [matListIcon]',\n  host: {'class': 'mat-mdc-list-icon mdc-list-item__graphic'}\n})\nexport class MatListIconCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-subheader], [matSubheader]',\n  // TODO(mmalerba): MDC's subheader font looks identical to the list item font, figure out why and\n  //  make a change in one of the repos to visually distinguish.\n  host: {'class': 'mat-mdc-subheader mdc-list-group__subheader'}\n})\nexport class MatListSubheaderCssMatStyler {}\n\n@Component({\n  selector: 'mat-list',\n  exportAs: 'matList',\n  template: '<ng-content></ng-content>',\n  host: {\n    'class': 'mat-mdc-list mat-mdc-list-base mdc-list',\n  },\n  styleUrls: ['list.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {provide: MatListBase, useExisting: MatList},\n  ]\n})\nexport class MatList extends MatListBase {}\n\n@Component({\n  selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n  exportAs: 'matListItem',\n  host: {\n    'class': 'mat-mdc-list-item mdc-list-item',\n  },\n  templateUrl: 'list-item.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {provide: MatListItemBase, useExisting: MatListItem},\n  ]\n})\nexport class MatListItem extends MatListItemBase {\n  @ContentChildren(MatLine, {read: ElementRef, descendants: true}) lines:\n      QueryList<ElementRef<Element>>;\n\n  constructor(element: ElementRef, ngZone: NgZone, listBase: MatListBase, platform: Platform) {\n    super(element, ngZone, listBase, platform);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {MatInteractiveListBase, MatListBase} from './list-base';\n\n@Component({\n  selector: 'mat-action-list',\n  exportAs: 'matActionList',\n  template: '<ng-content></ng-content>',\n  host: {\n    'class': 'mat-mdc-action-list mat-mdc-list-base mdc-list',\n  },\n  styleUrls: ['list.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {provide: MatListBase, useExisting: MatActionList},\n  ]\n})\nexport class MatActionList extends MatInteractiveListBase {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {MatList} from './list';\nimport {MatInteractiveListBase, MatListBase} from './list-base';\n\n@Component({\n  selector: 'mat-nav-list',\n  /**\n   * @deprecated `matList` export will be removed, use `matNavList`\n   * @breaking-change 11.0.0\n   */\n  exportAs: 'matNavList, matList',\n  template: '<ng-content></ng-content>',\n  host: {\n    'class': 'mat-mdc-nav-list mat-mdc-list-base mdc-list',\n  },\n  styleUrls: ['list.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {provide: MatListBase, useExisting: MatNavList},\n    /**\n     * @deprecated Provider for `MatList` will be removed, use `MatNavList` instead.\n     * @breaking-change 11.0.0\n     */\n    {provide: MatList, useExisting: MatNavList},\n  ]\n})\nexport class MatNavList extends MatInteractiveListBase {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  NgZone,\n  Output,\n  QueryList,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {MatLine, ThemePalette} from '@angular/material/core';\nimport {MatListBase, MatListItemBase} from './list-base';\n\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSelectionList),\n  multi: true\n};\n\n/** Change event that is being fired whenever the selected state of an option changes. */\nexport class MatSelectionListChange {\n  constructor(\n      /** Reference to the selection list that emitted the event. */\n      public source: MatSelectionList,\n      /** Reference to the option that has been changed. */\n      public option: MatListOption) {}\n}\n\n@Component({\n  selector: 'mat-selection-list',\n  exportAs: 'matSelectionList',\n  host: {\n    'class': 'mat-mdc-selection-list mat-mdc-list-base mdc-list',\n    'role': 'listbox',\n  },\n  template: '<ng-content></ng-content>',\n  styleUrls: ['list.css'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    MAT_SELECTION_LIST_VALUE_ACCESSOR,\n    {provide: MatListBase, useExisting: MatSelectionList}\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatSelectionList extends MatListBase implements ControlValueAccessor {\n  // TODO: Implement these inputs.\n  @Input() disableRipple: boolean;\n  @Input() tabIndex: number;\n  @Input() color: ThemePalette;\n  @Input() compareWith: (o1: any, o2: any) => boolean;\n  @Input() disabled: boolean;\n  @Input() multiple: boolean;\n\n  // TODO: Implement these inputs.\n  @Output() readonly selectionChange = new EventEmitter<MatSelectionListChange>();\n\n  @ContentChildren(forwardRef(() => MatListOption), {descendants: true}) options:\n      QueryList<MatListOption>;\n\n  // TODO: Implement these properties.\n  selectedOptions: SelectionModel<MatListOption>;\n\n  // TODO: Implement these methods.\n  focus(options?: FocusOptions) {}\n  selectAll() {}\n  deselectAll() {}\n  registerOnChange(fn: any) {}\n  registerOnTouched(fn: any) {}\n  writeValue(obj: any) {}\n}\n\n@Component({\n  selector: 'mat-list-option',\n  exportAs: 'matListOption',\n  host: {\n    'class': 'mat-mdc-list-item mat-mdc-list-option mdc-list-item',\n    'role': 'option',\n    'tabindex': '-1',\n  },\n  templateUrl: 'list-option.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {provide: MatListItemBase, useExisting: MatListOption},\n  ]\n})\nexport class MatListOption extends MatListItemBase {\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_selected: BooleanInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n\n  @ContentChildren(MatLine, {read: ElementRef, descendants: true}) lines:\n      QueryList<ElementRef<Element>>;\n\n  // TODO: Implement these inputs.\n  @Input() disableRipple: boolean;\n  @Input() checkboxPosition: 'before' | 'after' = 'before';\n  @Input() color: ThemePalette;\n  @Input() value: any;\n  @Input() disabled: boolean;\n  @Input() selected: boolean;\n\n  constructor(element: ElementRef, ngZone: NgZone, listBase: MatListBase, platform: Platform,\n              public selectionList: MatSelectionList) {\n    super(element, ngZone, listBase, platform);\n  }\n\n  // TODO: Implement these methods.\n  getLabel() { return ''; }\n  focus() {}\n  toggle() {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatLineModule, MatPseudoCheckboxModule, MatRippleModule} from '@angular/material/core';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatActionList} from './action-list';\nimport {\n  MatList,\n  MatListAvatarCssMatStyler,\n  MatListIconCssMatStyler,\n  MatListItem,\n  MatListSubheaderCssMatStyler,\n} from './list';\nimport {MatNavList} from './nav-list';\nimport {MatListOption, MatSelectionList} from './selection-list';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatLineModule,\n    MatRippleModule,\n    MatPseudoCheckboxModule,\n  ],\n  exports: [\n    MatList,\n    MatActionList,\n    MatNavList,\n    MatSelectionList,\n    MatListItem,\n    MatListOption,\n    MatListAvatarCssMatStyler,\n    MatListIconCssMatStyler,\n    MatListSubheaderCssMatStyler,\n    MatDividerModule,\n    MatLineModule,\n  ],\n  declarations: [\n    MatList,\n    MatActionList,\n    MatNavList,\n    MatSelectionList,\n    MatListItem,\n    MatListOption,\n    MatListAvatarCssMatStyler,\n    MatListIconCssMatStyler,\n    MatListSubheaderCssMatStyler,\n  ]\n})\nexport class MatListModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './list';\nexport * from './action-list';\nexport * from './nav-list';\nexport * from './selection-list';\nexport * from './module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {MatInteractiveListBase as Éµangular_material_src_material_experimental_mdc_list_mdc_list_c,MatListBase as Éµangular_material_src_material_experimental_mdc_list_mdc_list_b,MatListItemBase as Éµangular_material_src_material_experimental_mdc_list_mdc_list_a} from './list-base';"],"names":[],"mappings":"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"}