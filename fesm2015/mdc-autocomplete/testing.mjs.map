{"version":3,"file":"testing.mjs","sources":["../../../../../../../src/material-experimental/mdc-autocomplete/testing/autocomplete-harness.ts","../../../../../../../src/material-experimental/mdc-autocomplete/testing/public-api.ts","../../../../../../../src/material-experimental/mdc-autocomplete/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HarnessPredicate} from '@angular/cdk/testing';\nimport {\n  MatOptgroupHarness,\n  MatOptionHarness,\n  OptgroupHarnessFilters,\n  OptionHarnessFilters,\n} from '@angular/material-experimental/mdc-core/testing';\nimport {_MatAutocompleteHarnessBase} from '@angular/material/autocomplete/testing';\nimport {AutocompleteHarnessFilters} from './autocomplete-harness-filters';\n\n/** Harness for interacting with an MDC-based mat-autocomplete in tests. */\nexport class MatAutocompleteHarness extends _MatAutocompleteHarnessBase<\n  typeof MatOptionHarness,\n  MatOptionHarness,\n  OptionHarnessFilters,\n  typeof MatOptgroupHarness,\n  MatOptgroupHarness,\n  OptgroupHarnessFilters\n> {\n  protected _prefix = 'mat-mdc';\n  protected _optionClass = MatOptionHarness;\n  protected _optionGroupClass = MatOptgroupHarness;\n\n  /** The selector for the host element of a `MatAutocomplete` instance. */\n  static hostSelector = '.mat-mdc-autocomplete-trigger';\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a `MatAutocompleteHarness` that meets\n   * certain criteria.\n   * @param options Options for filtering which autocomplete instances are considered a match.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: AutocompleteHarnessFilters = {}): HarnessPredicate<MatAutocompleteHarness> {\n    return new HarnessPredicate(MatAutocompleteHarness, options).addOption(\n      'value',\n      options.value,\n      (harness, value) => HarnessPredicate.stringMatches(harness.getValue(), value),\n    );\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './autocomplete-harness';\nexport * from './autocomplete-harness-filters';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;AAAA;;;;;;;AAkBA;MACa,+BAA+B,2BAO3C;IAPD;;QAQY,YAAO,GAAG,SAAS,CAAC;QACpB,iBAAY,GAAG,gBAAgB,CAAC;QAChC,sBAAiB,GAAG,kBAAkB,CAAC;KAkBlD;;;;;;;IAPC,OAAO,IAAI,CAAC,UAAsC,EAAE;QAClD,OAAO,IAAI,gBAAgB,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAC,SAAS,CACpE,OAAO,EACP,OAAO,CAAC,KAAK,EACb,CAAC,OAAO,EAAE,KAAK,KAAK,gBAAgB,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAC9E,CAAC;KACH;;AAfD;AACO,mCAAY,GAAG,+BAA+B;;AChCvD;;;;;;;;ACAA;;;;;;;;;;"}