{"version":3,"file":"mdc-progress-bar.js","sources":["../../../../../../src/material-experimental/mdc-progress-bar/progress-bar.ts","../../../../../../src/material-experimental/mdc-progress-bar/module.ts","../../../../../../src/material-experimental/mdc-progress-bar/public-api.ts","../../../../../../src/material-experimental/mdc-progress-bar/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n  ElementRef,\n  NgZone,\n  Optional,\n  Inject,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport {CanColor, CanColorCtor, mixinColor} from '@angular/material-experimental/mdc-core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {ProgressAnimationEnd} from '@angular/material/progress-bar';\nimport {\n  MDCLinearProgressAdapter,\n  MDCLinearProgressFoundation,\n  WithMDCResizeObserver,\n} from '@material/linear-progress';\nimport {Subscription, fromEvent, Observable} from 'rxjs';\nimport {filter} from 'rxjs/operators';\nimport {Directionality} from '@angular/cdk/bidi';\n\n// Boilerplate for applying mixins to MatProgressBar.\n/** @docs-private */\nclass MatProgressBarBase {\n  constructor(public _elementRef: ElementRef) { }\n}\n\nconst _MatProgressBarMixinBase: CanColorCtor & typeof MatProgressBarBase =\n    mixinColor(MatProgressBarBase, 'primary');\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate' | 'buffer' | 'query';\n\n@Component({\n  selector: 'mat-progress-bar',\n  exportAs: 'matProgressBar',\n  host: {\n    'role': 'progressbar',\n    'aria-valuemin': '0',\n    'aria-valuemax': '100',\n    '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n    '[attr.mode]': 'mode',\n    'class': 'mat-mdc-progress-bar',\n    '[class._mat-animation-noopable]': '_isNoopAnimation',\n  },\n  inputs: ['color'],\n  templateUrl: 'progress-bar.html',\n  styleUrls: ['progress-bar.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatProgressBar extends _MatProgressBarMixinBase implements AfterViewInit, OnDestroy,\n  CanColor {\n\n  constructor(public _elementRef: ElementRef<HTMLElement>,\n              private _ngZone: NgZone,\n              @Optional() private _dir?: Directionality,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    super(_elementRef);\n    this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe(() => this._syncFoundation());\n    }\n  }\n\n  /** Implements all of the logic of the MDC progress bar. */\n  private _foundation: MDCLinearProgressFoundation | undefined;\n\n  /** Adapter used by MDC to interact with the DOM. */\n  private _adapter: MDCLinearProgressAdapter = {\n    addClass: (className: string) => this._rootElement.classList.add(className),\n    forceLayout: () => this._rootElement.offsetWidth,\n    removeAttribute: (name: string) => this._rootElement.removeAttribute(name),\n    setAttribute: (name: string, value: string) => this._rootElement.setAttribute(name, value),\n    hasClass: (className: string) => this._rootElement.classList.contains(className),\n    removeClass: (className: string) => this._rootElement.classList.remove(className),\n    setPrimaryBarStyle: (styleProperty: string, value: string) => {\n      (this._primaryBar.style as any)[styleProperty] = value;\n    },\n    setBufferBarStyle: (styleProperty: string, value: string) => {\n      (this._bufferBar.style as any)[styleProperty] = value;\n    },\n    setStyle: (styleProperty: string, value: string) => {\n      (this._rootElement.style as any)[styleProperty] = value;\n    },\n    getWidth: () => this._rootElement.offsetWidth,\n    attachResizeObserver: (callback) => {\n      const resizeObserverConstructor = (typeof window !== 'undefined') &&\n                                        (window as unknown as WithMDCResizeObserver).ResizeObserver;\n\n      if (resizeObserverConstructor) {\n        return this._ngZone.runOutsideAngular(() => {\n          const observer = new resizeObserverConstructor(callback);\n\n          // Internal client users found production errors where `observe` was not a function\n          // on the constructed `observer`. This should not happen, but adding this check for this\n          // edge case.\n          if (typeof observer.observe === 'function') {\n            observer.observe(this._rootElement);\n            return observer;\n          }\n\n          return null;\n        });\n      }\n\n      return null;\n    }\n  };\n\n  /** Flag that indicates whether NoopAnimations mode is set to true. */\n  _isNoopAnimation = false;\n\n  /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n  @Input()\n  get value(): number { return this._value; }\n  set value(v: number) {\n    this._value = clamp(v || 0);\n    this._syncFoundation();\n  }\n  private _value = 0;\n\n  /** Buffer value of the progress bar. Defaults to zero. */\n  @Input()\n  get bufferValue(): number { return this._bufferValue || 0; }\n  set bufferValue(v: number) {\n    this._bufferValue = clamp(v || 0);\n    this._syncFoundation();\n  }\n  private _bufferValue = 0;\n\n  private _rootElement: HTMLElement;\n  private _primaryBar: HTMLElement;\n  private _bufferBar: HTMLElement;\n\n  /**\n   * Event emitted when animation of the primary progress bar completes. This event will not\n   * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n   * animations (indeterminate and query).\n   */\n  @Output() animationEnd = new EventEmitter<ProgressAnimationEnd>();\n\n  /** Reference to animation end subscription to be unsubscribed on destroy. */\n  private _animationEndSubscription = Subscription.EMPTY;\n\n  /** Subscription to when the layout direction changes. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /**\n   * Mode of the progress bar.\n   *\n   * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n   * 'determinate'.\n   * Mirrored to mode attribute.\n   */\n  @Input()\n  get mode(): ProgressBarMode { return this._mode; }\n  set mode(value: ProgressBarMode) {\n    // Note that we don't technically need a getter and a setter here,\n    // but we use it to match the behavior of the existing mat-progress-bar.\n    this._mode = value;\n    this._syncFoundation();\n  }\n  private _mode: ProgressBarMode = 'determinate';\n\n  ngAfterViewInit() {\n    const element = this._elementRef.nativeElement;\n\n    this._rootElement = element.querySelector('.mdc-linear-progress') as HTMLElement;\n    this._primaryBar = element.querySelector('.mdc-linear-progress__primary-bar') as HTMLElement;\n    this._bufferBar = element.querySelector('.mdc-linear-progress__buffer-bar') as HTMLElement;\n\n    this._foundation = new MDCLinearProgressFoundation(this._adapter);\n    this._foundation.init();\n    this._syncFoundation();\n\n    // Run outside angular so change detection didn't get triggered on every transition end\n    // instead only on the animation that we care about (primary value bar's transitionend)\n    this._ngZone.runOutsideAngular((() => {\n      this._animationEndSubscription =\n          (fromEvent(this._primaryBar, 'transitionend') as Observable<TransitionEvent>)\n            .pipe(filter(((e: TransitionEvent) => e.target === this._primaryBar)))\n            .subscribe(() => {\n              if (this.mode === 'determinate' || this.mode === 'buffer') {\n                this._ngZone.run(() => this.animationEnd.next({value: this.value}));\n              }\n            });\n    }));\n  }\n\n  ngOnDestroy() {\n    if (this._foundation) {\n      this._foundation.destroy();\n    }\n    this._animationEndSubscription.unsubscribe();\n    this._dirChangeSubscription.unsubscribe();\n  }\n\n  /** Syncs the state of the progress bar with the MDC foundation. */\n  private _syncFoundation() {\n    const foundation = this._foundation;\n\n    if (foundation) {\n      const direction = this._dir ? this._dir.value : 'ltr';\n      const mode = this.mode;\n\n      const reverse = direction === 'rtl' ? mode !== 'query' : mode === 'query';\n      const progressDirection = reverse ? 'rtl' : 'ltr';\n      const currentDirection = this._rootElement.getAttribute('dir');\n      if (currentDirection !== progressDirection) {\n        this._rootElement.setAttribute('dir', progressDirection);\n        foundation.restartAnimation();\n      }\n\n      foundation.setDeterminate(mode !== 'indeterminate' && mode !== 'query');\n\n      // Divide by 100 because MDC deals with values between 0 and 1.\n      foundation.setProgress(this.value / 100);\n\n      if (mode === 'buffer') {\n        foundation.setBuffer(this.bufferValue / 100);\n      }\n    }\n  }\n}\n\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v: number, min = 0, max = 100) {\n  return Math.max(min, Math.min(max, v));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material-experimental/mdc-core';\nimport {MatProgressBar} from './progress-bar';\n\n@NgModule({\n  exports: [MatProgressBar, MatCommonModule],\n  declarations: [MatProgressBar],\n})\nexport class MatProgressBarModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './progress-bar';\nexport * from './module';\n\nexport {\n  ProgressAnimationEnd,\n  MAT_PROGRESS_BAR_LOCATION,\n  MatProgressBarLocation,\n  MAT_PROGRESS_BAR_LOCATION_FACTORY,\n} from '@angular/material/progress-bar';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}