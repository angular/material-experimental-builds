{"version":3,"file":"mdc-progress-bar.js","sources":["../../../../../../src/material-experimental/mdc-progress-bar/progress-bar.ts","../../../../../../src/material-experimental/mdc-progress-bar/module.ts","../../../../../../src/material-experimental/mdc-progress-bar/public-api.ts","../../../../../../src/material-experimental/mdc-progress-bar/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n  ElementRef,\n  NgZone,\n  Optional,\n  Inject,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport {CanColor, CanColorCtor, mixinColor} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {ProgressAnimationEnd} from '@angular/material/progress-bar';\nimport {MDCLinearProgressAdapter, MDCLinearProgressFoundation} from '@material/linear-progress';\nimport {Subscription, fromEvent, Observable} from 'rxjs';\nimport {filter} from 'rxjs/operators';\nimport {Directionality} from '@angular/cdk/bidi';\n\n// Boilerplate for applying mixins to MatProgressBar.\n/** @docs-private */\nclass MatProgressBarBase {\n  constructor(public _elementRef: ElementRef) { }\n}\n\nconst _MatProgressBarMixinBase: CanColorCtor & typeof MatProgressBarBase =\n    mixinColor(MatProgressBarBase, 'primary');\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate' | 'buffer' | 'query';\n\n@Component({\n  selector: 'mat-progress-bar',\n  exportAs: 'matProgressBar',\n  host: {\n    'role': 'progressbar',\n    'aria-valuemin': '0',\n    'aria-valuemax': '100',\n    '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n    '[attr.mode]': 'mode',\n    'class': 'mat-mdc-progress-bar',\n    '[class._mat-animation-noopable]': '_isNoopAnimation',\n  },\n  inputs: ['color'],\n  templateUrl: 'progress-bar.html',\n  styleUrls: ['progress-bar.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatProgressBar extends _MatProgressBarMixinBase implements AfterViewInit, OnDestroy,\n  CanColor {\n\n  constructor(public _elementRef: ElementRef<HTMLElement>,\n              private _ngZone: NgZone,\n              @Optional() private _dir?: Directionality,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    super(_elementRef);\n    this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe(() => this._syncFoundation());\n    }\n  }\n\n  /** Implements all of the logic of the MDC progress bar. */\n  private _foundation: MDCLinearProgressFoundation | undefined;\n\n  /** Adapter used by MDC to interact with the DOM. */\n  private _adapter: MDCLinearProgressAdapter = {\n    addClass: (className: string) => this._rootElement.classList.add(className),\n    forceLayout: () => this._rootElement.offsetWidth,\n    removeAttribute: (name: string) => this._rootElement.removeAttribute(name),\n    setAttribute: (name: string, value: string) => this._rootElement.setAttribute(name, value),\n    hasClass: (className: string) => this._rootElement.classList.contains(className),\n    removeClass: (className: string) => this._rootElement.classList.remove(className),\n    setPrimaryBarStyle: (styleProperty: string, value: string) => {\n      (this._primaryBar.style as any)[styleProperty] = value;\n    },\n    setBufferBarStyle: (styleProperty: string, value: string) => {\n      (this._bufferBar.style as any)[styleProperty] = value;\n    }\n  };\n\n  /** Flag that indicates whether NoopAnimations mode is set to true. */\n  _isNoopAnimation = false;\n\n  /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n  @Input()\n  get value(): number { return this._value; }\n  set value(v: number) {\n    this._value = clamp(v || 0);\n    this._syncFoundation();\n  }\n  private _value = 0;\n\n  /** Buffer value of the progress bar. Defaults to zero. */\n  @Input()\n  get bufferValue(): number { return this._bufferValue || 0; }\n  set bufferValue(v: number) {\n    this._bufferValue = clamp(v || 0);\n    this._syncFoundation();\n  }\n  private _bufferValue = 0;\n\n  private _rootElement: HTMLElement;\n  private _primaryBar: HTMLElement;\n  private _bufferBar: HTMLElement;\n\n  /**\n   * Event emitted when animation of the primary progress bar completes. This event will not\n   * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n   * animations (indeterminate and query).\n   */\n  @Output() animationEnd = new EventEmitter<ProgressAnimationEnd>();\n\n  /** Reference to animation end subscription to be unsubscribed on destroy. */\n  private _animationEndSubscription = Subscription.EMPTY;\n\n  /** Subscription to when the layout direction changes. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /**\n   * Mode of the progress bar.\n   *\n   * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n   * 'determinate'.\n   * Mirrored to mode attribute.\n   */\n  @Input()\n  get mode(): ProgressBarMode { return this._mode; }\n  set mode(value: ProgressBarMode) {\n    // Note that we don't technically need a getter and a setter here,\n    // but we use it to match the behavior of the existing mat-progress-bar.\n    this._mode = value;\n    this._syncFoundation();\n  }\n  private _mode: ProgressBarMode = 'determinate';\n\n  ngAfterViewInit() {\n    const element = this._elementRef.nativeElement;\n\n    this._rootElement = element.querySelector('.mdc-linear-progress') as HTMLElement;\n    this._primaryBar = element.querySelector('.mdc-linear-progress__primary-bar') as HTMLElement;\n    this._bufferBar = element.querySelector('.mdc-linear-progress__buffer-bar') as HTMLElement;\n\n    this._foundation = new MDCLinearProgressFoundation(this._adapter);\n    this._foundation.init();\n    this._syncFoundation();\n\n    // Run outside angular so change detection didn't get triggered on every transition end\n    // instead only on the animation that we care about (primary value bar's transitionend)\n    this._ngZone.runOutsideAngular((() => {\n      this._animationEndSubscription =\n          (fromEvent(this._primaryBar, 'transitionend') as Observable<TransitionEvent>)\n            .pipe(filter(((e: TransitionEvent) => e.target === this._primaryBar)))\n            .subscribe(() => {\n              if (this.mode === 'determinate' || this.mode === 'buffer') {\n                this._ngZone.run(() => this.animationEnd.next({value: this.value}));\n              }\n            });\n    }));\n  }\n\n  ngOnDestroy() {\n    if (this._foundation) {\n      this._foundation.destroy();\n    }\n    this._animationEndSubscription.unsubscribe();\n    this._dirChangeSubscription.unsubscribe();\n  }\n\n  /** Syncs the state of the progress bar with the MDC foundation. */\n  private _syncFoundation() {\n    const foundation = this._foundation;\n\n    if (foundation) {\n      const direction = this._dir ? this._dir.value : 'ltr';\n      const mode = this.mode;\n\n      foundation.setReverse(direction === 'rtl' ? mode !== 'query' : mode === 'query');\n      foundation.setDeterminate(mode !== 'indeterminate' && mode !== 'query');\n\n      // Divide by 100 because MDC deals with values between 0 and 1.\n      foundation.setProgress(this.value / 100);\n\n      if (mode === 'buffer') {\n        foundation.setBuffer(this.bufferValue / 100);\n      }\n    }\n  }\n}\n\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v: number, min = 0, max = 100) {\n  return Math.max(min, Math.min(max, v));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatProgressBar} from './progress-bar';\n\n@NgModule({\n  exports: [MatProgressBar, MatCommonModule],\n  declarations: [MatProgressBar],\n})\nexport class MatProgressBarModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './progress-bar';\nexport * from './module';\n\nexport {\n  ProgressAnimationEnd,\n  MAT_PROGRESS_BAR_LOCATION,\n  MatProgressBarLocation,\n  MAT_PROGRESS_BAR_LOCATION_FACTORY,\n} from '@angular/material/progress-bar';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}