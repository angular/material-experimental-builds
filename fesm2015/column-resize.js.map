{"version":3,"file":"column-resize.js","sources":["../../../../../../src/material-experimental/column-resize/resize-strategy.ts","../../../../../../src/material-experimental/column-resize/column-resize-directives/common.ts","../../../../../../src/material-experimental/column-resize/column-resize-directives/column-resize.ts","../../../../../../src/material-experimental/column-resize/column-resize-directives/column-resize-flex.ts","../../../../../../src/material-experimental/column-resize/column-resize-directives/default-enabled-column-resize.ts","../../../../../../src/material-experimental/column-resize/column-resize-directives/default-enabled-column-resize-flex.ts","../../../../../../src/material-experimental/column-resize/overlay-handle.ts","../../../../../../src/material-experimental/column-resize/resizable-directives/common.ts","../../../../../../src/material-experimental/column-resize/resizable-directives/default-enabled-resizable.ts","../../../../../../src/material-experimental/column-resize/resizable-directives/resizable.ts","../../../../../../src/material-experimental/column-resize/column-resize-module.ts","../../../../../../src/material-experimental/column-resize/public-api.ts","../../../../../../src/material-experimental/column-resize/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Provider} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {\n  ColumnResize,\n  ResizeStrategy,\n  CdkFlexTableResizeStrategy,\n  TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER,\n} from '@angular/cdk-experimental/column-resize';\n\nexport {TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER};\n\n/**\n * Overrides CdkFlexTableResizeStrategy to match mat-column elements.\n */\n@Injectable()\nexport class MatFlexTableResizeStrategy extends CdkFlexTableResizeStrategy {\n  constructor(\n      columnResize: ColumnResize,\n      @Inject(DOCUMENT) document: any) {\n    super(columnResize, document);\n  }\n\n  protected getColumnCssClass(cssFriendlyColumnName: string): string {\n    return `mat-column-${cssFriendlyColumnName}`;\n  }\n}\n\nexport const FLEX_RESIZE_STRATEGY_PROVIDER: Provider = {\n  provide: ResizeStrategy,\n  useClass: MatFlexTableResizeStrategy,\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Provider} from '@angular/core';\n\nimport {\n  ColumnResize,\n  ColumnResizeNotifier,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {\n  TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER,\n  FLEX_RESIZE_STRATEGY_PROVIDER,\n} from '../resize-strategy';\n\nconst PROVIDERS: Provider[] = [\n  ColumnResizeNotifier,\n  HeaderRowEventDispatcher,\n  ColumnResizeNotifierSource,\n];\nexport const TABLE_PROVIDERS: Provider[] = [\n  ...PROVIDERS,\n  TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER,\n];\nexport const FLEX_PROVIDERS: Provider[] = [...PROVIDERS, FLEX_RESIZE_STRATEGY_PROVIDER];\n\nexport const TABLE_HOST_BINDINGS = {\n  'class': 'mat-column-resize-table',\n};\nexport const FLEX_HOST_BINDINGS = {\n  'class': 'mat-column-resize-flex',\n};\n\nexport abstract class AbstractMatColumnResize extends ColumnResize {\n  getTableHeight() {\n    return this.elementRef.nativeElement!.offsetHeight;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, NgZone} from '@angular/core';\nimport {\n  ColumnResize,\n  ColumnResizeNotifier,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatColumnResize, TABLE_HOST_BINDINGS, TABLE_PROVIDERS} from './common';\n\n/**\n * Explicitly enables column resizing for a table-based mat-table.\n * Individual columns must be annotated specifically.\n */\n@Directive({\n  selector: 'table[mat-table][columnResize]',\n  host: TABLE_HOST_BINDINGS,\n  providers: [\n    ...TABLE_PROVIDERS,\n    {provide: ColumnResize, useExisting: MatColumnResize},\n  ],\n})\nexport class MatColumnResize extends AbstractMatColumnResize {\n  constructor(\n      readonly columnResizeNotifier: ColumnResizeNotifier,\n      readonly elementRef: ElementRef<HTMLElement>,\n      protected readonly eventDispatcher: HeaderRowEventDispatcher,\n      protected readonly ngZone: NgZone,\n      protected readonly notifier: ColumnResizeNotifierSource) {\n    super();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, NgZone} from '@angular/core';\nimport {\n  ColumnResize,\n  ColumnResizeNotifier,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatColumnResize, FLEX_HOST_BINDINGS, FLEX_PROVIDERS} from './common';\n\n/**\n * Explicitly enables column resizing for a flexbox-based mat-table.\n * Individual columns must be annotated specifically.\n */\n@Directive({\n  selector: 'mat-table[columnResize]',\n  host: FLEX_HOST_BINDINGS,\n  providers: [\n    ...FLEX_PROVIDERS,\n    {provide: ColumnResize, useExisting: MatColumnResizeFlex},\n  ],\n})\nexport class MatColumnResizeFlex extends AbstractMatColumnResize {\n  constructor(\n      readonly columnResizeNotifier: ColumnResizeNotifier,\n      readonly elementRef: ElementRef<HTMLElement>,\n      protected readonly eventDispatcher: HeaderRowEventDispatcher,\n      protected readonly ngZone: NgZone,\n      protected readonly notifier: ColumnResizeNotifierSource) {\n    super();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, NgZone} from '@angular/core';\nimport {\n  ColumnResize,\n  ColumnResizeNotifier,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatColumnResize, TABLE_HOST_BINDINGS, TABLE_PROVIDERS} from './common';\n\n/**\n * Implicitly enables column resizing for a table-based mat-table.\n * Individual columns will be resizable unless opted out.\n */\n@Directive({\n  selector: 'table[mat-table]',\n  host: TABLE_HOST_BINDINGS,\n  providers: [\n    ...TABLE_PROVIDERS,\n    {provide: ColumnResize, useExisting: MatDefaultEnabledColumnResize},\n  ],\n})\nexport class MatDefaultEnabledColumnResize extends AbstractMatColumnResize {\n  constructor(\n      readonly columnResizeNotifier: ColumnResizeNotifier,\n      readonly elementRef: ElementRef<HTMLElement>,\n      protected readonly eventDispatcher: HeaderRowEventDispatcher,\n      protected readonly ngZone: NgZone,\n      protected readonly notifier: ColumnResizeNotifierSource) {\n    super();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, NgZone} from '@angular/core';\nimport {\n  ColumnResize,\n  ColumnResizeNotifier,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatColumnResize, FLEX_HOST_BINDINGS, FLEX_PROVIDERS} from './common';\n\n/**\n * Implicitly enables column resizing for a flexbox-based mat-table.\n * Individual columns will be resizable unless opted out.\n */\n@Directive({\n  selector: 'mat-table',\n  host: FLEX_HOST_BINDINGS,\n  providers: [\n    ...FLEX_PROVIDERS,\n    {provide: ColumnResize, useExisting: MatDefaultEnabledColumnResizeFlex},\n  ],\n})\nexport class MatDefaultEnabledColumnResizeFlex extends AbstractMatColumnResize {\n  constructor(\n      readonly columnResizeNotifier: ColumnResizeNotifier,\n      readonly elementRef: ElementRef<HTMLElement>,\n      protected readonly eventDispatcher: HeaderRowEventDispatcher,\n      protected readonly ngZone: NgZone,\n      protected readonly notifier: ColumnResizeNotifierSource) {\n    super();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Inject,\n  NgZone,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {CdkColumnDef} from '@angular/cdk/table';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  ColumnResize,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n  ResizeOverlayHandle,\n  ResizeRef,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatColumnResize} from './column-resize-directives/common';\n\n/**\n * Component shown over the edge of a resizable column that is responsible\n * for handling column resize mouse events and displaying a vertical line along the column edge.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'class': 'mat-column-resize-overlay-thumb'},\n  template: '',\n})\nexport class MatColumnResizeOverlayHandle extends ResizeOverlayHandle {\n  protected readonly document: Document;\n\n  constructor(\n      protected readonly columnDef: CdkColumnDef,\n      protected readonly columnResize: ColumnResize,\n      protected readonly directionality: Directionality,\n      protected readonly elementRef: ElementRef,\n      protected readonly eventDispatcher: HeaderRowEventDispatcher,\n      protected readonly ngZone: NgZone,\n      protected readonly resizeNotifier: ColumnResizeNotifierSource,\n      protected readonly resizeRef: ResizeRef,\n      @Inject(DOCUMENT) document: any) {\n    super();\n    this.document = document;\n  }\n\n  protected updateResizeActive(active: boolean): void {\n    super.updateResizeActive(active);\n\n    this.resizeRef.overlayRef.updateSize({\n      height: active ?\n          (this.columnResize as AbstractMatColumnResize).getTableHeight() :\n          this.resizeRef.origin.nativeElement!.offsetHeight\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '@angular/core';\nimport {Resizable} from '@angular/cdk-experimental/column-resize';\nimport {MatColumnResizeOverlayHandle} from '../overlay-handle';\n\nexport abstract class AbstractMatResizable extends Resizable<MatColumnResizeOverlayHandle> {\n  minWidthPxInternal = 32;\n\n  protected getInlineHandleCssClassName(): string {\n    return 'mat-resizable-handle';\n  }\n\n  protected getOverlayHandleComponentType(): Type<MatColumnResizeOverlayHandle> {\n    return MatColumnResizeOverlayHandle;\n  }\n}\n\nexport const RESIZABLE_HOST_BINDINGS = {\n  'class': 'mat-resizable',\n};\n\nexport const RESIZABLE_INPUTS = [\n  'minWidthPx: matResizableMinWidthPx',\n  'maxWidthPx: matResizableMaxWidthPx',\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  Injector,\n  NgZone,\n  ViewContainerRef,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Overlay} from '@angular/cdk/overlay';\nimport {CdkColumnDef} from '@angular/cdk/table';\nimport {\n  ColumnResize,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n  ResizeStrategy,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatResizable, RESIZABLE_HOST_BINDINGS, RESIZABLE_INPUTS} from './common';\n\n/**\n * Implicitly enables column resizing for a mat-header-cell unless the disableResize attribute\n * is present.\n */\n@Directive({\n  selector: 'mat-header-cell:not([disableResize]), th[mat-header-cell]:not([disableResize])',\n  host: RESIZABLE_HOST_BINDINGS,\n  inputs: RESIZABLE_INPUTS,\n})\nexport class MatDefaultResizable extends AbstractMatResizable {\n  protected readonly document: Document;\n\n  constructor(\n      protected readonly columnDef: CdkColumnDef,\n      protected readonly columnResize: ColumnResize,\n      protected readonly directionality: Directionality,\n      @Inject(DOCUMENT) document: any,\n      protected readonly elementRef: ElementRef,\n      protected readonly eventDispatcher: HeaderRowEventDispatcher,\n      protected readonly injector: Injector,\n      protected readonly ngZone: NgZone,\n      protected readonly overlay: Overlay,\n      protected readonly resizeNotifier: ColumnResizeNotifierSource,\n      protected readonly resizeStrategy: ResizeStrategy,\n      protected readonly viewContainerRef: ViewContainerRef,\n      protected readonly changeDetectorRef: ChangeDetectorRef) {\n    super();\n    this.document = document;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  Injector,\n  NgZone,\n  ViewContainerRef,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Overlay} from '@angular/cdk/overlay';\nimport {CdkColumnDef} from '@angular/cdk/table';\nimport {\n  ColumnResize,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n  ResizeStrategy,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatResizable, RESIZABLE_HOST_BINDINGS, RESIZABLE_INPUTS} from './common';\n\n/**\n * Explicitly enables column resizing for a mat-header-cell.\n */\n@Directive({\n  selector: 'mat-header-cell[resizable], th[mat-header-cell][resizable]',\n  host: RESIZABLE_HOST_BINDINGS,\n  inputs: RESIZABLE_INPUTS,\n})\nexport class MatResizable extends AbstractMatResizable {\n  protected readonly document: Document;\n\n  constructor(\n      protected readonly columnDef: CdkColumnDef,\n      protected readonly columnResize: ColumnResize,\n      protected readonly directionality: Directionality,\n      @Inject(DOCUMENT) document: any,\n      protected readonly elementRef: ElementRef,\n      protected readonly eventDispatcher: HeaderRowEventDispatcher,\n      protected readonly injector: Injector,\n      protected readonly ngZone: NgZone,\n      protected readonly overlay: Overlay,\n      protected readonly resizeNotifier: ColumnResizeNotifierSource,\n      protected readonly resizeStrategy: ResizeStrategy,\n      protected readonly viewContainerRef: ViewContainerRef,\n      protected readonly changeDetectorRef: ChangeDetectorRef) {\n    super();\n    this.document = document;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\nimport {MatColumnResize} from './column-resize-directives/column-resize';\nimport {MatColumnResizeFlex} from './column-resize-directives/column-resize-flex';\nimport {\n  MatDefaultEnabledColumnResize\n} from './column-resize-directives/default-enabled-column-resize';\nimport {\n  MatDefaultEnabledColumnResizeFlex\n} from './column-resize-directives/default-enabled-column-resize-flex';\nimport {MatDefaultResizable} from './resizable-directives/default-enabled-resizable';\nimport {MatResizable} from './resizable-directives/resizable';\nimport {MatColumnResizeOverlayHandle} from './overlay-handle';\n\nconst ENTRY_COMMON_COMPONENTS = [\n  MatColumnResizeOverlayHandle,\n];\n\n@NgModule({\n  declarations: ENTRY_COMMON_COMPONENTS,\n  exports: ENTRY_COMMON_COMPONENTS,\n  entryComponents: ENTRY_COMMON_COMPONENTS,\n})\nexport class MatColumnResizeCommonModule {}\n\nconst IMPORTS = [\n  OverlayModule,\n  MatColumnResizeCommonModule,\n];\n\n@NgModule({\n  imports: IMPORTS,\n  declarations: [\n    MatDefaultEnabledColumnResize,\n    MatDefaultEnabledColumnResizeFlex,\n    MatDefaultResizable,\n  ],\n  exports: [\n    MatDefaultEnabledColumnResize,\n    MatDefaultEnabledColumnResizeFlex,\n    MatDefaultResizable,\n  ],\n})\nexport class MatDefaultEnabledColumnResizeModule {}\n\n@NgModule({\n  imports: IMPORTS,\n  declarations: [\n    MatColumnResize,\n    MatColumnResizeFlex,\n    MatResizable,\n  ],\n  exports: [\n    MatColumnResize,\n    MatColumnResizeFlex,\n    MatResizable,\n  ],\n})\nexport class MatColumnResizeModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './column-resize-directives/column-resize';\nexport * from './column-resize-directives/column-resize-flex';\nexport * from './column-resize-directives/default-enabled-column-resize';\nexport * from './column-resize-directives/default-enabled-column-resize-flex';\nexport * from './column-resize-module';\nexport * from './resizable-directives/default-enabled-resizable';\nexport * from './resizable-directives/resizable';\nexport * from './resize-strategy';\nexport * from './overlay-handle';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AbstractMatColumnResize as Éµangular_material_src_material_experimental_column_resize_column_resize_e,FLEX_HOST_BINDINGS as Éµangular_material_src_material_experimental_column_resize_column_resize_d,FLEX_PROVIDERS as Éµangular_material_src_material_experimental_column_resize_column_resize_b,TABLE_HOST_BINDINGS as Éµangular_material_src_material_experimental_column_resize_column_resize_c,TABLE_PROVIDERS as Éµangular_material_src_material_experimental_column_resize_column_resize_a} from './column-resize-directives/common';\nexport {AbstractMatResizable as Éµangular_material_src_material_experimental_column_resize_column_resize_f,RESIZABLE_HOST_BINDINGS as Éµangular_material_src_material_experimental_column_resize_column_resize_g,RESIZABLE_INPUTS as Éµangular_material_src_material_experimental_column_resize_column_resize_h} from './resizable-directives/common';"],"names":[],"mappings":"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"}