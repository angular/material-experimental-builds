{"version":3,"file":"column-resize.js","sources":["../../../../../../src/material-experimental/column-resize/resize-strategy.ts","../../../../../../src/material-experimental/column-resize/column-resize-directives/common.ts","../../../../../../src/material-experimental/column-resize/column-resize-directives/column-resize.ts","../../../../../../src/material-experimental/column-resize/column-resize-directives/column-resize-flex.ts","../../../../../../src/material-experimental/column-resize/column-resize-directives/default-enabled-column-resize.ts","../../../../../../src/material-experimental/column-resize/column-resize-directives/default-enabled-column-resize-flex.ts","../../../../../../src/material-experimental/column-resize/overlay-handle.ts","../../../../../../src/material-experimental/column-resize/resizable-directives/common.ts","../../../../../../src/material-experimental/column-resize/resizable-directives/default-enabled-resizable.ts","../../../../../../src/material-experimental/column-resize/resizable-directives/resizable.ts","../../../../../../src/material-experimental/column-resize/column-resize-module.ts","../../../../../../src/material-experimental/column-resize/public-api.ts","../../../../../../src/material-experimental/column-resize/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Provider} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {CdkTable, _CoalescedStyleScheduler, _COALESCED_STYLE_SCHEDULER} from '@angular/cdk/table';\n\nimport {\n  ColumnResize,\n  ResizeStrategy,\n  CdkFlexTableResizeStrategy,\n  TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER,\n} from '@angular/cdk-experimental/column-resize';\n\nexport {TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER};\n\n/**\n * Overrides CdkFlexTableResizeStrategy to match mat-column elements.\n */\n@Injectable()\nexport class MatFlexTableResizeStrategy extends CdkFlexTableResizeStrategy {\n  constructor(\n      columnResize: ColumnResize,\n      @Inject(_COALESCED_STYLE_SCHEDULER) styleScheduler: _CoalescedStyleScheduler,\n      table: CdkTable<unknown>,\n      @Inject(DOCUMENT) document: any) {\n    super(columnResize, styleScheduler, table, document);\n  }\n\n  protected getColumnCssClass(cssFriendlyColumnName: string): string {\n    return `mat-column-${cssFriendlyColumnName}`;\n  }\n}\n\nexport const FLEX_RESIZE_STRATEGY_PROVIDER: Provider = {\n  provide: ResizeStrategy,\n  useClass: MatFlexTableResizeStrategy,\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Provider} from '@angular/core';\n\nimport {\n  ColumnResize,\n  ColumnResizeNotifier,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {\n  TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER,\n  FLEX_RESIZE_STRATEGY_PROVIDER,\n} from '../resize-strategy';\n\nconst PROVIDERS: Provider[] = [\n  ColumnResizeNotifier,\n  HeaderRowEventDispatcher,\n  ColumnResizeNotifierSource,\n];\nexport const TABLE_PROVIDERS: Provider[] = [\n  ...PROVIDERS,\n  TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER,\n];\nexport const FLEX_PROVIDERS: Provider[] = [...PROVIDERS, FLEX_RESIZE_STRATEGY_PROVIDER];\n\nexport const TABLE_HOST_BINDINGS = {\n  'class': 'mat-column-resize-table',\n};\nexport const FLEX_HOST_BINDINGS = {\n  'class': 'mat-column-resize-flex',\n};\n\nexport abstract class AbstractMatColumnResize extends ColumnResize {\n  getTableHeight() {\n    return this.elementRef.nativeElement!.offsetHeight;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, NgZone} from '@angular/core';\nimport {\n  ColumnResize,\n  ColumnResizeNotifier,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatColumnResize, TABLE_HOST_BINDINGS, TABLE_PROVIDERS} from './common';\n\n/**\n * Explicitly enables column resizing for a table-based mat-table.\n * Individual columns must be annotated specifically.\n */\n@Directive({\n  selector: 'table[mat-table][columnResize]',\n  host: TABLE_HOST_BINDINGS,\n  providers: [\n    ...TABLE_PROVIDERS,\n    {provide: ColumnResize, useExisting: MatColumnResize},\n  ],\n})\nexport class MatColumnResize extends AbstractMatColumnResize {\n  constructor(\n      readonly columnResizeNotifier: ColumnResizeNotifier,\n      readonly elementRef: ElementRef<HTMLElement>,\n      protected readonly eventDispatcher: HeaderRowEventDispatcher,\n      protected readonly ngZone: NgZone,\n      protected readonly notifier: ColumnResizeNotifierSource) {\n    super();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, NgZone} from '@angular/core';\nimport {\n  ColumnResize,\n  ColumnResizeNotifier,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatColumnResize, FLEX_HOST_BINDINGS, FLEX_PROVIDERS} from './common';\n\n/**\n * Explicitly enables column resizing for a flexbox-based mat-table.\n * Individual columns must be annotated specifically.\n */\n@Directive({\n  selector: 'mat-table[columnResize]',\n  host: FLEX_HOST_BINDINGS,\n  providers: [\n    ...FLEX_PROVIDERS,\n    {provide: ColumnResize, useExisting: MatColumnResizeFlex},\n  ],\n})\nexport class MatColumnResizeFlex extends AbstractMatColumnResize {\n  constructor(\n      readonly columnResizeNotifier: ColumnResizeNotifier,\n      readonly elementRef: ElementRef<HTMLElement>,\n      protected readonly eventDispatcher: HeaderRowEventDispatcher,\n      protected readonly ngZone: NgZone,\n      protected readonly notifier: ColumnResizeNotifierSource) {\n    super();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, NgZone} from '@angular/core';\nimport {\n  ColumnResize,\n  ColumnResizeNotifier,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatColumnResize, TABLE_HOST_BINDINGS, TABLE_PROVIDERS} from './common';\n\n/**\n * Implicitly enables column resizing for a table-based mat-table.\n * Individual columns will be resizable unless opted out.\n */\n@Directive({\n  selector: 'table[mat-table]',\n  host: TABLE_HOST_BINDINGS,\n  providers: [\n    ...TABLE_PROVIDERS,\n    {provide: ColumnResize, useExisting: MatDefaultEnabledColumnResize},\n  ],\n})\nexport class MatDefaultEnabledColumnResize extends AbstractMatColumnResize {\n  constructor(\n      readonly columnResizeNotifier: ColumnResizeNotifier,\n      readonly elementRef: ElementRef<HTMLElement>,\n      protected readonly eventDispatcher: HeaderRowEventDispatcher,\n      protected readonly ngZone: NgZone,\n      protected readonly notifier: ColumnResizeNotifierSource) {\n    super();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, NgZone} from '@angular/core';\nimport {\n  ColumnResize,\n  ColumnResizeNotifier,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatColumnResize, FLEX_HOST_BINDINGS, FLEX_PROVIDERS} from './common';\n\n/**\n * Implicitly enables column resizing for a flexbox-based mat-table.\n * Individual columns will be resizable unless opted out.\n */\n@Directive({\n  selector: 'mat-table',\n  host: FLEX_HOST_BINDINGS,\n  providers: [\n    ...FLEX_PROVIDERS,\n    {provide: ColumnResize, useExisting: MatDefaultEnabledColumnResizeFlex},\n  ],\n})\nexport class MatDefaultEnabledColumnResizeFlex extends AbstractMatColumnResize {\n  constructor(\n      readonly columnResizeNotifier: ColumnResizeNotifier,\n      readonly elementRef: ElementRef<HTMLElement>,\n      protected readonly eventDispatcher: HeaderRowEventDispatcher,\n      protected readonly ngZone: NgZone,\n      protected readonly notifier: ColumnResizeNotifierSource) {\n    super();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Inject,\n  NgZone,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  CdkColumnDef,\n  _CoalescedStyleScheduler,\n  _COALESCED_STYLE_SCHEDULER,\n} from '@angular/cdk/table';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  ColumnResize,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n  ResizeOverlayHandle,\n  ResizeRef,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatColumnResize} from './column-resize-directives/common';\n\n/**\n * Component shown over the edge of a resizable column that is responsible\n * for handling column resize mouse events and displaying a vertical line along the column edge.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'class': 'mat-column-resize-overlay-thumb'},\n  template: '',\n})\nexport class MatColumnResizeOverlayHandle extends ResizeOverlayHandle {\n  protected readonly document: Document;\n\n  constructor(\n      protected readonly columnDef: CdkColumnDef,\n      protected readonly columnResize: ColumnResize,\n      protected readonly directionality: Directionality,\n      protected readonly elementRef: ElementRef,\n      protected readonly eventDispatcher: HeaderRowEventDispatcher,\n      protected readonly ngZone: NgZone,\n      protected readonly resizeNotifier: ColumnResizeNotifierSource,\n      protected readonly resizeRef: ResizeRef,\n      @Inject(_COALESCED_STYLE_SCHEDULER)\n          protected readonly styleScheduler: _CoalescedStyleScheduler,\n      @Inject(DOCUMENT) document: any) {\n    super();\n    this.document = document;\n  }\n\n  protected updateResizeActive(active: boolean): void {\n    super.updateResizeActive(active);\n\n    this.resizeRef.overlayRef.updateSize({\n      height: active ?\n          (this.columnResize as AbstractMatColumnResize).getTableHeight() :\n          this.resizeRef.origin.nativeElement!.offsetHeight\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '@angular/core';\nimport {Resizable} from '@angular/cdk-experimental/column-resize';\nimport {MatColumnResizeOverlayHandle} from '../overlay-handle';\n\nexport abstract class AbstractMatResizable extends Resizable<MatColumnResizeOverlayHandle> {\n  minWidthPxInternal = 32;\n\n  protected getInlineHandleCssClassName(): string {\n    return 'mat-resizable-handle';\n  }\n\n  protected getOverlayHandleComponentType(): Type<MatColumnResizeOverlayHandle> {\n    return MatColumnResizeOverlayHandle;\n  }\n}\n\nexport const RESIZABLE_HOST_BINDINGS = {\n  'class': 'mat-resizable',\n};\n\nexport const RESIZABLE_INPUTS = [\n  'minWidthPx: matResizableMinWidthPx',\n  'maxWidthPx: matResizableMaxWidthPx',\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  Injector,\n  NgZone,\n  ViewContainerRef,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Overlay} from '@angular/cdk/overlay';\nimport {\n  CdkColumnDef,\n  _CoalescedStyleScheduler,\n  _COALESCED_STYLE_SCHEDULER,\n} from '@angular/cdk/table';\nimport {\n  ColumnResize,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n  ResizeStrategy,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatResizable, RESIZABLE_HOST_BINDINGS, RESIZABLE_INPUTS} from './common';\n\n/**\n * Implicitly enables column resizing for a mat-header-cell unless the disableResize attribute\n * is present.\n */\n@Directive({\n  selector: 'mat-header-cell:not([disableResize]), th[mat-header-cell]:not([disableResize])',\n  host: RESIZABLE_HOST_BINDINGS,\n  inputs: RESIZABLE_INPUTS,\n})\nexport class MatDefaultResizable extends AbstractMatResizable {\n  protected readonly document: Document;\n\n  constructor(\n      protected readonly columnDef: CdkColumnDef,\n      protected readonly columnResize: ColumnResize,\n      protected readonly directionality: Directionality,\n      @Inject(DOCUMENT) document: any,\n      protected readonly elementRef: ElementRef,\n      protected readonly eventDispatcher: HeaderRowEventDispatcher,\n      protected readonly injector: Injector,\n      protected readonly ngZone: NgZone,\n      protected readonly overlay: Overlay,\n      protected readonly resizeNotifier: ColumnResizeNotifierSource,\n      protected readonly resizeStrategy: ResizeStrategy,\n      @Inject(_COALESCED_STYLE_SCHEDULER)\n          protected readonly styleScheduler: _CoalescedStyleScheduler,\n      protected readonly viewContainerRef: ViewContainerRef,\n      protected readonly changeDetectorRef: ChangeDetectorRef) {\n    super();\n    this.document = document;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  Injector,\n  NgZone,\n  ViewContainerRef,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Overlay} from '@angular/cdk/overlay';\nimport {\n  CdkColumnDef,\n  _CoalescedStyleScheduler,\n  _COALESCED_STYLE_SCHEDULER,\n} from '@angular/cdk/table';\nimport {\n  ColumnResize,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n  ResizeStrategy,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatResizable, RESIZABLE_HOST_BINDINGS, RESIZABLE_INPUTS} from './common';\n\n/**\n * Explicitly enables column resizing for a mat-header-cell.\n */\n@Directive({\n  selector: 'mat-header-cell[resizable], th[mat-header-cell][resizable]',\n  host: RESIZABLE_HOST_BINDINGS,\n  inputs: RESIZABLE_INPUTS,\n})\nexport class MatResizable extends AbstractMatResizable {\n  protected readonly document: Document;\n\n  constructor(\n      protected readonly columnDef: CdkColumnDef,\n      protected readonly columnResize: ColumnResize,\n      protected readonly directionality: Directionality,\n      @Inject(DOCUMENT) document: any,\n      protected readonly elementRef: ElementRef,\n      protected readonly eventDispatcher: HeaderRowEventDispatcher,\n      protected readonly injector: Injector,\n      protected readonly ngZone: NgZone,\n      protected readonly overlay: Overlay,\n      protected readonly resizeNotifier: ColumnResizeNotifierSource,\n      protected readonly resizeStrategy: ResizeStrategy,\n      @Inject(_COALESCED_STYLE_SCHEDULER)\n          protected readonly styleScheduler: _CoalescedStyleScheduler,\n      protected readonly viewContainerRef: ViewContainerRef,\n      protected readonly changeDetectorRef: ChangeDetectorRef) {\n    super();\n    this.document = document;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\nimport {MatColumnResize} from './column-resize-directives/column-resize';\nimport {MatColumnResizeFlex} from './column-resize-directives/column-resize-flex';\nimport {\n  MatDefaultEnabledColumnResize\n} from './column-resize-directives/default-enabled-column-resize';\nimport {\n  MatDefaultEnabledColumnResizeFlex\n} from './column-resize-directives/default-enabled-column-resize-flex';\nimport {MatDefaultResizable} from './resizable-directives/default-enabled-resizable';\nimport {MatResizable} from './resizable-directives/resizable';\nimport {MatColumnResizeOverlayHandle} from './overlay-handle';\n\nconst ENTRY_COMMON_COMPONENTS = [\n  MatColumnResizeOverlayHandle,\n];\n\n@NgModule({\n  declarations: ENTRY_COMMON_COMPONENTS,\n  exports: ENTRY_COMMON_COMPONENTS,\n  entryComponents: ENTRY_COMMON_COMPONENTS,\n})\nexport class MatColumnResizeCommonModule {}\n\nconst IMPORTS = [\n  MatCommonModule,\n  OverlayModule,\n  MatColumnResizeCommonModule,\n];\n\n@NgModule({\n  imports: IMPORTS,\n  declarations: [\n    MatDefaultEnabledColumnResize,\n    MatDefaultEnabledColumnResizeFlex,\n    MatDefaultResizable,\n  ],\n  exports: [\n    MatDefaultEnabledColumnResize,\n    MatDefaultEnabledColumnResizeFlex,\n    MatDefaultResizable,\n  ],\n})\nexport class MatDefaultEnabledColumnResizeModule {}\n\n@NgModule({\n  imports: IMPORTS,\n  declarations: [\n    MatColumnResize,\n    MatColumnResizeFlex,\n    MatResizable,\n  ],\n  exports: [\n    MatColumnResize,\n    MatColumnResizeFlex,\n    MatResizable,\n  ],\n})\nexport class MatColumnResizeModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './column-resize-directives/column-resize';\nexport * from './column-resize-directives/column-resize-flex';\nexport * from './column-resize-directives/default-enabled-column-resize';\nexport * from './column-resize-directives/default-enabled-column-resize-flex';\nexport * from './column-resize-module';\nexport * from './resizable-directives/default-enabled-resizable';\nexport * from './resizable-directives/resizable';\nexport * from './resize-strategy';\nexport * from './overlay-handle';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AbstractMatColumnResize as ɵangular_material_src_material_experimental_column_resize_column_resize_e,FLEX_HOST_BINDINGS as ɵangular_material_src_material_experimental_column_resize_column_resize_d,FLEX_PROVIDERS as ɵangular_material_src_material_experimental_column_resize_column_resize_b,TABLE_HOST_BINDINGS as ɵangular_material_src_material_experimental_column_resize_column_resize_c,TABLE_PROVIDERS as ɵangular_material_src_material_experimental_column_resize_column_resize_a} from './column-resize-directives/common';\nexport {AbstractMatResizable as ɵangular_material_src_material_experimental_column_resize_column_resize_f,RESIZABLE_HOST_BINDINGS as ɵangular_material_src_material_experimental_column_resize_column_resize_g,RESIZABLE_INPUTS as ɵangular_material_src_material_experimental_column_resize_column_resize_h} from './resizable-directives/common';"],"names":[],"mappings":"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"}