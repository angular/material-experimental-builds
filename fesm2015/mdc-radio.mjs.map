{"version":3,"file":"mdc-radio.mjs","sources":["../../../../../../src/material-experimental/mdc-radio/radio.ts","../../../../../../src/material-experimental/mdc-radio/radio.html","../../../../../../src/material-experimental/mdc-radio/module.ts","../../../../../../src/material-experimental/mdc-radio/public-api.ts","../../../../../../src/material-experimental/mdc-radio/index.ts","../../../../../../src/material-experimental/mdc-radio/mdc-radio_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  AfterViewInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  InjectionToken,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {MDCRadioAdapter, MDCRadioFoundation} from '@material/radio';\nimport {\n  MAT_RADIO_DEFAULT_OPTIONS,\n  _MatRadioButtonBase,\n  MatRadioDefaultOptions,\n  _MatRadioGroupBase,\n} from '@angular/material/radio';\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\n\n// Re-export symbols used by the base Material radio component so that users do not need to depend\n// on both packages.\nexport {MatRadioChange, MAT_RADIO_DEFAULT_OPTIONS} from '@angular/material/radio';\n\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatRadioGroup),\n  multi: true,\n};\n\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nexport const MAT_RADIO_GROUP = new InjectionToken<_MatRadioGroupBase<_MatRadioButtonBase>>(\n  'MatRadioGroup',\n);\n\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\n@Directive({\n  selector: 'mat-radio-group',\n  exportAs: 'matRadioGroup',\n  providers: [\n    MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n    {provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup},\n  ],\n  host: {\n    'role': 'radiogroup',\n    'class': 'mat-mdc-radio-group',\n  },\n})\nexport class MatRadioGroup extends _MatRadioGroupBase<MatRadioButton> {\n  /** Child radio buttons. */\n  @ContentChildren(forwardRef(() => MatRadioButton), {descendants: true})\n  _radios: QueryList<MatRadioButton>;\n}\n\n@Component({\n  selector: 'mat-radio-button',\n  templateUrl: 'radio.html',\n  styleUrls: ['radio.css'],\n  host: {\n    'class': 'mat-mdc-radio-button',\n    '[attr.id]': 'id',\n    '[class.mat-primary]': 'color === \"primary\"',\n    '[class.mat-accent]': 'color === \"accent\"',\n    '[class.mat-warn]': 'color === \"warn\"',\n    '[class._mat-animation-noopable]': '_noopAnimations',\n    // Needs to be removed since it causes some a11y issues (see #21266).\n    '[attr.tabindex]': 'null',\n    '[attr.aria-label]': 'null',\n    '[attr.aria-labelledby]': 'null',\n    '[attr.aria-describedby]': 'null',\n    // Note: under normal conditions focus shouldn't land on this element, however it may be\n    // programmatically set, for example inside of a focus trap, in this case we want to forward\n    // the focus to the native element.\n    '(focus)': '_inputElement.nativeElement.focus()',\n  },\n  inputs: ['disableRipple', 'tabIndex'],\n  exportAs: 'matRadioButton',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatRadioButton extends _MatRadioButtonBase implements AfterViewInit, OnDestroy {\n  private _radioAdapter: MDCRadioAdapter = {\n    addClass: (className: string) => this._setClass(className, true),\n    removeClass: (className: string) => this._setClass(className, false),\n    setNativeControlDisabled: (disabled: boolean) => {\n      if (this.disabled !== disabled) {\n        this.disabled = disabled;\n        this._changeDetector.markForCheck();\n      }\n    },\n  };\n\n  _radioFoundation = new MDCRadioFoundation(this._radioAdapter);\n  _classes: {[key: string]: boolean} = {};\n\n  constructor(\n    @Optional() @Inject(MAT_RADIO_GROUP) radioGroup: MatRadioGroup,\n    elementRef: ElementRef,\n    _changeDetector: ChangeDetectorRef,\n    _focusMonitor: FocusMonitor,\n    _radioDispatcher: UniqueSelectionDispatcher,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string,\n    @Optional()\n    @Inject(MAT_RADIO_DEFAULT_OPTIONS)\n    _providerOverride?: MatRadioDefaultOptions,\n    @Attribute('tabindex') tabIndex?: string,\n  ) {\n    super(\n      radioGroup,\n      elementRef,\n      _changeDetector,\n      _focusMonitor,\n      _radioDispatcher,\n      animationMode,\n      _providerOverride,\n      tabIndex,\n    );\n  }\n\n  override ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this._radioFoundation.init();\n  }\n\n  override ngOnDestroy() {\n    super.ngOnDestroy();\n    this._radioFoundation.destroy();\n  }\n\n  private _setClass(cssClass: string, active: boolean) {\n    this._classes = {...this._classes, [cssClass]: active};\n    this._changeDetector.markForCheck();\n  }\n\n  /**\n   * Overrides the parent function so that the foundation can be set with the current\n   * disabled state.\n   */\n  protected override _setDisabled(value: boolean) {\n    super._setDisabled(value);\n    this._radioFoundation.setDisabled(this.disabled);\n  }\n}\n","<div class=\"mdc-form-field\" #formField\n     [class.mdc-form-field--align-end]=\"labelPosition == 'before'\">\n  <div class=\"mdc-radio\" [ngClass]=\"_classes\">\n    <!-- Render this element first so the input is on top. -->\n    <div class=\"mat-mdc-radio-touch-target\" (click)=\"_onInputInteraction($event)\"></div>\n    <input #input class=\"mdc-radio__native-control\" type=\"radio\"\n           [id]=\"inputId\"\n           [checked]=\"checked\"\n           [disabled]=\"disabled\"\n           [tabIndex]=\"tabIndex\"\n           [attr.name]=\"name\"\n           [attr.value]=\"value\"\n           [required]=\"required\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           [attr.aria-describedby]=\"ariaDescribedby\"\n           (change)=\"_onInputInteraction($event)\">\n    <div class=\"mdc-radio__background\">\n      <div class=\"mdc-radio__outer-circle\"></div>\n      <div class=\"mdc-radio__inner-circle\"></div>\n    </div>\n    <div mat-ripple class=\"mat-radio-ripple mat-mdc-focus-indicator\"\n         [matRippleTrigger]=\"formField\"\n         [matRippleDisabled]=\"_isRippleDisabled()\"\n         [matRippleCentered]=\"true\">\n      <div class=\"mat-ripple-element mat-radio-persistent-ripple\"></div>\n    </div>\n  </div>\n  <label [for]=\"inputId\">\n    <ng-content></ng-content>\n  </label>\n</div>\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material-experimental/mdc-core';\nimport {MatRadioButton, MatRadioGroup} from './radio';\n\n@NgModule({\n  imports: [MatCommonModule, CommonModule, MatRippleModule],\n  exports: [MatCommonModule, MatRadioGroup, MatRadioButton],\n  declarations: [MatRadioGroup, MatRadioButton],\n})\nexport class MatRadioModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './radio';\nexport * from './module';\n\nexport {MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MatRadioDefaultOptions} from '@angular/material/radio';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}