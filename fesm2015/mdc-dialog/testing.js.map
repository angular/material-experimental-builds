{"version":3,"file":"mdc-dialog__testing.js","sources":["../../../../../../src/material-experimental/mdc-dialog/testing/dialog-harness.ts","../../../../../../src/material-experimental/mdc-dialog/testing/public-api.ts","../../../../../../src/material-experimental/mdc-dialog/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HarnessPredicate} from '@angular/cdk/testing';\nimport {\n  DialogHarnessFilters,\n  MatDialogHarness as NonMdcDialogHarness\n} from '@angular/material/dialog/testing';\n\n/** Harness for interacting with a standard `MatDialog` in tests. */\nexport class MatDialogHarness extends NonMdcDialogHarness {\n  /** The selector for the host element of a `MatDialog` instance. */\n  static override hostSelector = '.mat-mdc-dialog-container';\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a `MatDialogHarness` that meets\n   * certain criteria.\n   * @param options Options for filtering which dialog instances are considered a match.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static override with(options: DialogHarnessFilters = {}): HarnessPredicate<MatDialogHarness> {\n    return new HarnessPredicate(MatDialogHarness, options);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {DialogHarnessFilters} from '@angular/material/dialog/testing';\nexport {MatDialogHarness} from './dialog-harness';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":["NonMdcDialogHarness"],"mappings":";;;AAAA;;;;;;;AAcA;MACa,gBAAiB,SAAQA,kBAAmB;;;;;;;IAUvD,OAAgB,IAAI,CAAC,UAAgC,EAAE;QACrD,OAAO,IAAI,gBAAgB,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;KACxD;;AAXD;AACgB,6BAAY,GAAG,2BAA2B;;ACjB5D;;;;;;;;ACAA;;;;;;;;;;"}