{"version":3,"file":"mdc-paginator__testing.js","sources":["../../../../../../src/material-experimental/mdc-paginator/testing/paginator-harness.ts","../../../../../../src/material-experimental/mdc-paginator/testing/public-api.ts","../../../../../../src/material-experimental/mdc-paginator/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HarnessPredicate} from '@angular/cdk/testing';\nimport {MatSelectHarness} from '@angular/material-experimental/mdc-select/testing';\nimport {\n  PaginatorHarnessFilters,\n  _MatPaginatorHarnessBase,\n} from '@angular/material/paginator/testing';\n\n\n/** Harness for interacting with an MDC-based mat-paginator in tests. */\nexport class MatPaginatorHarness extends _MatPaginatorHarnessBase {\n  /** Selector used to find paginator instances. */\n  static hostSelector = '.mat-mdc-paginator';\n  protected _nextButton = this.locatorFor('.mat-mdc-paginator-navigation-next');\n  protected _previousButton = this.locatorFor('.mat-mdc-paginator-navigation-previous');\n  protected _firstPageButton = this.locatorForOptional('.mat-mdc-paginator-navigation-first');\n  protected _lastPageButton = this.locatorForOptional('.mat-mdc-paginator-navigation-last');\n  protected _select = this.locatorForOptional(MatSelectHarness.with({\n    ancestor: '.mat-mdc-paginator-page-size'\n  }));\n  protected _pageSizeFallback = this.locatorFor('.mat-mdc-paginator-page-size-value');\n  protected _rangeLabel = this.locatorFor('.mat-mdc-paginator-range-label');\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a `MatPaginatorHarness` that meets\n   * certain criteria.\n   * @param options Options for filtering which paginator instances are considered a match.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: PaginatorHarnessFilters = {}): HarnessPredicate<MatPaginatorHarness> {\n    return new HarnessPredicate(MatPaginatorHarness, options);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './paginator-harness';\nexport {PaginatorHarnessFilters} from '@angular/material/paginator/testing';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;AAAA;;;;;;;AAQA,AAQA;AACA,MAAa,mBAAoB,SAAQ,wBAAwB;IAAjE;;QAGY,gBAAW,GAAG,IAAI,CAAC,UAAU,CAAC,oCAAoC,CAAC,CAAC;QACpE,oBAAe,GAAG,IAAI,CAAC,UAAU,CAAC,wCAAwC,CAAC,CAAC;QAC5E,qBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,qCAAqC,CAAC,CAAC;QAClF,oBAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,oCAAoC,CAAC,CAAC;QAChF,YAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC;YAChE,QAAQ,EAAE,8BAA8B;SACzC,CAAC,CAAC,CAAC;QACM,sBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,oCAAoC,CAAC,CAAC;QAC1E,gBAAW,GAAG,IAAI,CAAC,UAAU,CAAC,gCAAgC,CAAC,CAAC;KAW3E;;;;;;;IAHC,OAAO,IAAI,CAAC,UAAmC,EAAE;QAC/C,OAAO,IAAI,gBAAgB,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;KAC3D;;;AAnBM,gCAAY,GAAG,oBAAoB,CAAC;;ACnB7C;;;;;;GAMG;;ACNH;;;;;;GAMG;;;;"}