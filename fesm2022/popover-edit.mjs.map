{"version":3,"file":"popover-edit.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/material-experimental/popover-edit/lens-directives.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/material-experimental/popover-edit/table-directives.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/material-experimental/popover-edit/popover-edit-module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Directive} from '@angular/core';\n\nimport {\n  CdkEditControl,\n  CdkEditRevert,\n  CdkEditClose,\n  EditRef,\n} from '@angular/cdk-experimental/popover-edit';\n\n/**\n * A component that attaches to a form within the edit.\n * It coordinates the form state with the table-wide edit system and handles\n * closing the edit when the form is submitted or the user clicks\n * out.\n */\n@Directive({\n  selector: 'form[matEditLens]',\n  host: {\n    'class': 'mat-edit-lens',\n  },\n  inputs: [\n    {name: 'clickOutBehavior', alias: 'matEditLensClickOutBehavior'},\n    {name: 'preservedFormValue', alias: 'matEditLensPreservedFormValue'},\n    {name: 'ignoreSubmitUnlessValid', alias: 'matEditLensIgnoreSubmitUnlessValid'},\n  ],\n  outputs: ['preservedFormValueChange: matEditLensPreservedFormValueChange'],\n  providers: [EditRef],\n})\nexport class MatEditLens<FormValue> extends CdkEditControl<FormValue> {}\n\n/** Reverts the form to its initial or previously submitted state on click. */\n@Directive({\n  selector: 'button[matEditRevert]',\n  host: {\n    'type': 'button', // Prevents accidental form submits.\n  },\n})\nexport class MatEditRevert<FormValue> extends CdkEditRevert<FormValue> {}\n\n/** Closes the lens on click. */\n@Directive({\n  selector: '[matEditClose]',\n})\nexport class MatEditClose<FormValue> extends CdkEditClose<FormValue> {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\nimport {Directive} from '@angular/core';\nimport {\n  _CELL_SELECTOR,\n  _closest,\n  CdkPopoverEdit,\n  CdkPopoverEditTabOut,\n  CdkRowHoverContent,\n  CdkEditOpen,\n} from '@angular/cdk-experimental/popover-edit';\n\nconst POPOVER_EDIT_HOST_BINDINGS = {\n  '[attr.tabindex]': 'disabled ? null : 0',\n  'class': 'mat-popover-edit-cell',\n  '[attr.aria-haspopup]': '!disabled',\n};\n\nconst POPOVER_EDIT_INPUTS = [\n  {name: 'template', alias: 'matPopoverEdit'},\n  {name: 'context', alias: 'matPopoverEditContext'},\n  {name: 'colspan', alias: 'matPopoverEditColspan'},\n  {name: 'disabled', alias: 'matPopoverEditDisabled'},\n  {name: 'ariaLabel', alias: 'matPopoverEditAriaLabel'},\n];\n\nconst EDIT_PANE_CLASS = 'mat-edit-pane';\n\nconst MAT_ROW_HOVER_CLASS = 'mat-row-hover-content';\nconst MAT_ROW_HOVER_RTL_CLASS = MAT_ROW_HOVER_CLASS + '-rtl';\nconst MAT_ROW_HOVER_ANIMATE_CLASS = MAT_ROW_HOVER_CLASS + '-visible';\nconst MAT_ROW_HOVER_CELL_CLASS = MAT_ROW_HOVER_CLASS + '-host-cell';\n\n/**\n * Attaches an ng-template to a cell and shows it when instructed to by the\n * EditEventDispatcher service.\n * Makes the cell focusable.\n */\n@Directive({\n  selector: '[matPopoverEdit]:not([matPopoverEditTabOut])',\n  host: POPOVER_EDIT_HOST_BINDINGS,\n  inputs: POPOVER_EDIT_INPUTS,\n})\nexport class MatPopoverEdit<C> extends CdkPopoverEdit<C> {\n  protected override panelClass(): string {\n    return EDIT_PANE_CLASS;\n  }\n}\n\n/**\n * Attaches an ng-template to a cell and shows it when instructed to by the\n * EditEventDispatcher service.\n * Makes the cell focusable.\n */\n@Directive({\n  selector: '[matPopoverEdit][matPopoverEditTabOut]',\n  host: POPOVER_EDIT_HOST_BINDINGS,\n  inputs: POPOVER_EDIT_INPUTS,\n})\nexport class MatPopoverEditTabOut<C> extends CdkPopoverEditTabOut<C> {\n  protected override panelClass(): string {\n    return EDIT_PANE_CLASS;\n  }\n}\n\n/**\n * A structural directive that shows its contents when the table row containing\n * it is hovered or when an element in the row has focus.\n */\n@Directive({\n  selector: '[matRowHoverContent]',\n})\nexport class MatRowHoverContent extends CdkRowHoverContent {\n  protected override initElement(element: HTMLElement) {\n    super.initElement(element);\n    element.classList.add(MAT_ROW_HOVER_CLASS);\n  }\n\n  protected override makeElementHiddenButFocusable(element: HTMLElement): void {\n    element.classList.remove(MAT_ROW_HOVER_ANIMATE_CLASS);\n  }\n\n  protected override makeElementVisible(element: HTMLElement): void {\n    _closest(this.elementRef.nativeElement!, _CELL_SELECTOR)!.classList.add(\n      MAT_ROW_HOVER_CELL_CLASS,\n    );\n\n    if (this.services.directionality.value === 'rtl') {\n      element.classList.add(MAT_ROW_HOVER_RTL_CLASS);\n    } else {\n      element.classList.remove(MAT_ROW_HOVER_RTL_CLASS);\n    }\n\n    element.classList.remove(MAT_ROW_HOVER_ANIMATE_CLASS);\n    this.services.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        element.classList.add(MAT_ROW_HOVER_ANIMATE_CLASS);\n      });\n    });\n  }\n}\n\n/**\n * Opens the closest edit popover to this element, whether it's associated with this exact\n * element or an ancestor element.\n */\n@Directive({\n  selector: '[matEditOpen]',\n})\nexport class MatEditOpen extends CdkEditOpen {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkEditable, CdkPopoverEditModule} from '@angular/cdk-experimental/popover-edit';\nimport {\n  MatPopoverEdit,\n  MatPopoverEditTabOut,\n  MatRowHoverContent,\n  MatEditOpen,\n} from './table-directives';\nimport {MatEditLens, MatEditRevert, MatEditClose} from './lens-directives';\n\n@NgModule({\n  imports: [\n    CdkPopoverEditModule,\n    MatPopoverEdit,\n    MatPopoverEditTabOut,\n    MatRowHoverContent,\n    MatEditLens,\n    MatEditRevert,\n    MatEditClose,\n    MatEditOpen,\n  ],\n  exports: [\n    MatPopoverEdit,\n    MatPopoverEditTabOut,\n    MatRowHoverContent,\n    MatEditLens,\n    MatEditRevert,\n    MatEditClose,\n    MatEditOpen,\n    CdkEditable,\n  ],\n})\nexport class MatPopoverEditModule {}\n"],"names":["ɵfac","i0","ɵɵngDeclareFactory","minVersion","version","ngImport","type","MatEditLens","deps","target","ɵɵFactoryTarget","Directive","args","selector","name","alias","EditRef","CdkEditClose","MatEditClose","decorators","POPOVER_EDIT_INPUTS","MAT_ROW_HOVER_CLASS","MAT_ROW_HOVER_RTL_CLASS","MAT_ROW_HOVER_CELL_CLASS","MatPopoverEdit","CdkPopoverEdit","panelClass","EDIT_PANE_CLASS","CdkPopoverEditTabOut","ɵɵngDeclareClassMetadata","MatPopoverEditTabOut","element","classList","add","remove","MAT_ROW_HOVER_ANIMATE_CLASS","makeElementVisible","elementRef","nativeElement","_CELL_SELECTOR","services","directionality","value","ngZone","runOutsideAngular","setTimeout","ɵdir","ɵɵngDeclareDirective","MatRowHoverContent","isStandalone","usesInheritance","CdkEditOpen","ɵɵngDeclareNgModule","MatPopoverEditModule","imports","CdkPopoverEditModule","MatEditOpen","CdkEditable","MatEditRevert"],"mappings":"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"}