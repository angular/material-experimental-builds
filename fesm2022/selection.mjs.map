{"version":3,"file":"selection.mjs","sources":["../../../../../../src/material-experimental/selection/selection.ts","../../../../../../src/material-experimental/selection/select-all.ts","../../../../../../src/material-experimental/selection/selection-toggle.ts","../../../../../../src/material-experimental/selection/selection-column.ts","../../../../../../src/material-experimental/selection/row-selection.ts","../../../../../../src/material-experimental/selection/selection-module.ts","../../../../../../src/material-experimental/selection/selection_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {CdkSelection, SelectionChange} from '@angular/cdk-experimental/selection';\nimport {Directive, Input, Output, EventEmitter} from '@angular/core';\n\n/**\n * Manages the selection states of the items and provides methods to check and update the selection\n * states.\n * It must be applied to the parent element if `matSelectionToggle`, `matSelectAll`,\n * `matRowSelection` and `matSelectionColumn` are applied.\n */\n@Directive({\n  selector: '[matSelection]',\n  exportAs: 'matSelection',\n  providers: [{provide: CdkSelection, useExisting: MatSelection}],\n  standalone: true,\n})\n// tslint:disable-next-line: coercion-types\nexport class MatSelection<T> extends CdkSelection<T> {\n  /** Whether to support multiple selection */\n  @Input('matSelectionMultiple')\n  override get multiple(): boolean {\n    return this._multiple;\n  }\n  override set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /** Emits when selection changes. */\n  @Output('matSelectionChange') override readonly change = new EventEmitter<SelectionChange<T>>();\n}\n\n/**\n * Represents the change in the selection set.\n */\nexport {SelectionChange} from '@angular/cdk-experimental/selection';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkSelectAll} from '@angular/cdk-experimental/selection';\nimport {Directive} from '@angular/core';\n\n/**\n * Makes the element a select-all toggle.\n *\n * Must be used within a parent `MatSelection` directive. It toggles the selection states\n * of all the selection toggles connected with the `MatSelection` directive.\n * If the element implements `ControlValueAccessor`, e.g. `MatCheckbox`, the directive\n * automatically connects it with the select-all state provided by the `MatSelection` directive. If\n * not, use `checked` to get the checked state, `indeterminate` to get the indeterminate state,\n * and `toggle()` to change the selection state.\n */\n@Directive({\n  selector: '[matSelectAll]',\n  exportAs: 'matSelectAll',\n  providers: [{provide: CdkSelectAll, useExisting: MatSelectAll}],\n  standalone: true,\n})\nexport class MatSelectAll<T> extends CdkSelectAll<T> {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkSelectionToggle} from '@angular/cdk-experimental/selection';\nimport {Directive, Input} from '@angular/core';\n\n/**\n * Makes the element a selection toggle.\n *\n * Must be used within a parent `MatSelection` directive.\n * Must be provided with the value. If `trackBy` is used on `MatSelection`, the index of the value\n * is required. If the element implements `ControlValueAccessor`, e.g. `MatCheckbox`, the directive\n * automatically connects it with the selection state provided by the `MatSelection` directive. If\n * not, use `checked$` to get the checked state of the value, and `toggle()` to change the selection\n * state.\n */\n@Directive({\n  selector: '[matSelectionToggle]',\n  exportAs: 'matSelectionToggle',\n  inputs: [{name: 'index', alias: 'matSelectionToggleIndex'}],\n  providers: [{provide: CdkSelectionToggle, useExisting: MatSelectionToggle}],\n  standalone: true,\n})\nexport class MatSelectionToggle<T> extends CdkSelectionToggle<T> {\n  /** The value that is associated with the toggle */\n  @Input('matSelectionToggleValue') override value: T = undefined!;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  MatCell,\n  MatCellDef,\n  MatColumnDef,\n  MatHeaderCell,\n  MatHeaderCellDef,\n  MatTable,\n} from '@angular/material/table';\nimport {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewChild,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Inject,\n} from '@angular/core';\nimport {AsyncPipe} from '@angular/common';\n\nimport {MatSelection} from './selection';\nimport {MatCheckbox} from '@angular/material/checkbox';\nimport {MatSelectionToggle} from './selection-toggle';\nimport {MatSelectAll} from './select-all';\n\n/**\n * Column that adds row selecting checkboxes and a select-all checkbox if `matSelectionMultiple` is\n * `true`.\n *\n * Must be used within a parent `MatSelection` directive.\n */\n@Component({\n  selector: 'mat-selection-column',\n  template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef class=\"mat-selection-column-header\">\n        @if (selection.multiple) {\n          <mat-checkbox\n              matSelectAll\n              #allToggler=\"matSelectAll\"\n              [indeterminate]=\"allToggler.indeterminate | async\"></mat-checkbox>\n        }\n      </th>\n      <td mat-cell *matCellDef=\"let row; let i = $index\" class=\"mat-selection-column-cell\">\n        <mat-checkbox\n            matSelectionToggle\n            [matSelectionToggleValue]=\"row\"\n            [matSelectionToggleIndex]=\"i\"></mat-checkbox>\n      </td>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrl: 'selection-column.css',\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n  imports: [\n    MatColumnDef,\n    MatHeaderCellDef,\n    MatHeaderCell,\n    MatCheckbox,\n    MatSelectAll,\n    MatCellDef,\n    MatCell,\n    MatSelectionToggle,\n    AsyncPipe,\n  ],\n})\nexport class MatSelectionColumn<T> implements OnInit, OnDestroy {\n  /** Column name that should be used to reference this column. */\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(name: string) {\n    this._name = name;\n\n    this._syncColumnDefName();\n  }\n  private _name: string;\n\n  @ViewChild(MatColumnDef, {static: true}) private readonly _columnDef: MatColumnDef;\n  @ViewChild(MatCellDef, {static: true}) private readonly _cell: MatCellDef;\n  @ViewChild(MatHeaderCellDef, {static: true})\n  private readonly _headerCell: MatHeaderCellDef;\n\n  constructor(\n    @Optional() @Inject(MatTable) private _table: MatTable<T>,\n    @Optional() @Inject(MatSelection) readonly selection: MatSelection<T>,\n  ) {}\n\n  ngOnInit() {\n    if (!this.selection && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('MatSelectionColumn: missing MatSelection in the parent');\n    }\n\n    this._syncColumnDefName();\n\n    if (this._table) {\n      this._columnDef.cell = this._cell;\n      this._columnDef.headerCell = this._headerCell;\n      this._table.addColumnDef(this._columnDef);\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throw Error('MatSelectionColumn: missing parent table');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._table) {\n      this._table.removeColumnDef(this._columnDef);\n    }\n  }\n\n  private _syncColumnDefName() {\n    if (this._columnDef) {\n      this._columnDef.name = this._name;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkRowSelection} from '@angular/cdk-experimental/selection';\nimport {Input, Directive} from '@angular/core';\n\n/**\n * Applies `mat-selected` class and `aria-selected` to an element.\n *\n * Must be used within a parent `MatSelection` directive.\n * Must be provided with the value. The index is required if `trackBy` is used on the `CdkSelection`\n * directive.\n */\n@Directive({\n  selector: '[matRowSelection]',\n  host: {\n    '[class.mat-selected]': '_selection.isSelected(this.value, this.index)',\n    '[attr.aria-selected]': '_selection.isSelected(this.value, this.index)',\n  },\n  providers: [{provide: CdkRowSelection, useExisting: MatRowSelection}],\n  inputs: [{name: 'index', alias: 'matRowSelectionIndex'}],\n  standalone: true,\n})\nexport class MatRowSelection<T> extends CdkRowSelection<T> {\n  /** The value that is associated with the row */\n  @Input('matRowSelectionValue') override value: T;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// TODO(yifange): Move the table-specific code to a separate module from the other selection\n// behaviors once we move it out of experimental.\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSelectAll} from './select-all';\nimport {MatSelection} from './selection';\nimport {MatSelectionToggle} from './selection-toggle';\nimport {MatSelectionColumn} from './selection-column';\nimport {MatRowSelection} from './row-selection';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatSelectAll,\n    MatSelection,\n    MatSelectionToggle,\n    MatSelectionColumn,\n    MatRowSelection,\n  ],\n  exports: [MatSelectAll, MatSelection, MatSelectionToggle, MatSelectionColumn, MatRowSelection],\n})\nexport class MatSelectionModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}