{"version":3,"file":"column-resize.mjs","sources":["../../../../../k8-fastbuild-ST-46c76129e412/bin/src/material-experimental/column-resize/resize-strategy.ts","../../../../../k8-fastbuild-ST-46c76129e412/bin/src/material-experimental/column-resize/column-resize-directives/common.ts","../../../../../k8-fastbuild-ST-46c76129e412/bin/src/material-experimental/column-resize/column-resize-directives/column-resize.ts","../../../../../k8-fastbuild-ST-46c76129e412/bin/src/material-experimental/column-resize/column-resize-directives/column-resize-flex.ts","../../../../../k8-fastbuild-ST-46c76129e412/bin/src/material-experimental/column-resize/column-resize-directives/default-enabled-column-resize.ts","../../../../../k8-fastbuild-ST-46c76129e412/bin/src/material-experimental/column-resize/column-resize-directives/default-enabled-column-resize-flex.ts","../../../../../k8-fastbuild-ST-46c76129e412/bin/src/material-experimental/column-resize/overlay-handle.ts","../../../../../k8-fastbuild-ST-46c76129e412/bin/src/material-experimental/column-resize/resizable-directives/common.ts","../../../../../k8-fastbuild-ST-46c76129e412/bin/src/material-experimental/column-resize/resizable-directives/default-enabled-resizable.ts","../../../../../k8-fastbuild-ST-46c76129e412/bin/src/material-experimental/column-resize/resizable-directives/resizable.ts","../../../../../k8-fastbuild-ST-46c76129e412/bin/src/material-experimental/column-resize/column-resize-module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Injectable, Provider} from '@angular/core';\nimport {_CoalescedStyleScheduler, _COALESCED_STYLE_SCHEDULER} from '@angular/cdk/table';\n\nimport {\n  ResizeStrategy,\n  CdkFlexTableResizeStrategy,\n  TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER,\n} from '@angular/cdk-experimental/column-resize';\n\nexport {TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER};\n\n/**\n * Overrides CdkFlexTableResizeStrategy to match mat-column elements.\n */\n@Injectable()\nexport class MatFlexTableResizeStrategy extends CdkFlexTableResizeStrategy {\n  protected override getColumnCssClass(cssFriendlyColumnName: string): string {\n    return `mat-column-${cssFriendlyColumnName}`;\n  }\n}\n\nexport const FLEX_RESIZE_STRATEGY_PROVIDER: Provider = {\n  provide: ResizeStrategy,\n  useClass: MatFlexTableResizeStrategy,\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Provider} from '@angular/core';\n\nimport {\n  ColumnResize,\n  ColumnResizeNotifier,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {\n  TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER,\n  FLEX_RESIZE_STRATEGY_PROVIDER,\n} from '../resize-strategy';\n\nconst PROVIDERS: Provider[] = [\n  ColumnResizeNotifier,\n  HeaderRowEventDispatcher,\n  ColumnResizeNotifierSource,\n];\nexport const TABLE_PROVIDERS: Provider[] = [\n  ...PROVIDERS,\n  TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER,\n];\nexport const FLEX_PROVIDERS: Provider[] = [...PROVIDERS, FLEX_RESIZE_STRATEGY_PROVIDER];\n\nexport const TABLE_HOST_BINDINGS = {\n  'class': 'mat-column-resize-table',\n};\nexport const FLEX_HOST_BINDINGS = {\n  'class': 'mat-column-resize-flex',\n};\n\nexport abstract class AbstractMatColumnResize extends ColumnResize {\n  getTableHeight() {\n    return this.elementRef.nativeElement!.offsetHeight;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Directive, ElementRef, NgZone, inject} from '@angular/core';\nimport {\n  ColumnResize,\n  ColumnResizeNotifier,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatColumnResize, TABLE_HOST_BINDINGS, TABLE_PROVIDERS} from './common';\n\n/**\n * Explicitly enables column resizing for a table-based mat-table.\n * Individual columns must be annotated specifically.\n */\n@Directive({\n  selector: 'table[mat-table][columnResize]',\n  host: TABLE_HOST_BINDINGS,\n  providers: [...TABLE_PROVIDERS, {provide: ColumnResize, useExisting: MatColumnResize}],\n})\nexport class MatColumnResize extends AbstractMatColumnResize {\n  readonly columnResizeNotifier = inject(ColumnResizeNotifier);\n  readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  protected readonly eventDispatcher = inject(HeaderRowEventDispatcher);\n  protected readonly ngZone = inject(NgZone);\n  protected readonly notifier = inject(ColumnResizeNotifierSource);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Directive, ElementRef, NgZone, inject} from '@angular/core';\nimport {\n  ColumnResize,\n  ColumnResizeNotifier,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatColumnResize, FLEX_HOST_BINDINGS, FLEX_PROVIDERS} from './common';\n\n/**\n * Explicitly enables column resizing for a flexbox-based mat-table.\n * Individual columns must be annotated specifically.\n */\n@Directive({\n  selector: 'mat-table[columnResize]',\n  host: FLEX_HOST_BINDINGS,\n  providers: [...FLEX_PROVIDERS, {provide: ColumnResize, useExisting: MatColumnResizeFlex}],\n})\nexport class MatColumnResizeFlex extends AbstractMatColumnResize {\n  readonly columnResizeNotifier = inject(ColumnResizeNotifier);\n  readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  protected readonly eventDispatcher = inject(HeaderRowEventDispatcher);\n  protected readonly ngZone = inject(NgZone);\n  protected readonly notifier = inject(ColumnResizeNotifierSource);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Directive, ElementRef, NgZone, inject} from '@angular/core';\nimport {\n  ColumnResize,\n  ColumnResizeNotifier,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatColumnResize, TABLE_HOST_BINDINGS, TABLE_PROVIDERS} from './common';\n\n/**\n * Implicitly enables column resizing for a table-based mat-table.\n * Individual columns will be resizable unless opted out.\n */\n@Directive({\n  selector: 'table[mat-table]',\n  host: TABLE_HOST_BINDINGS,\n  providers: [\n    ...TABLE_PROVIDERS,\n    {provide: ColumnResize, useExisting: MatDefaultEnabledColumnResize},\n  ],\n})\nexport class MatDefaultEnabledColumnResize extends AbstractMatColumnResize {\n  readonly columnResizeNotifier = inject(ColumnResizeNotifier);\n  readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  protected readonly eventDispatcher = inject(HeaderRowEventDispatcher);\n  protected readonly ngZone = inject(NgZone);\n  protected readonly notifier = inject(ColumnResizeNotifierSource);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Directive, ElementRef, NgZone, inject} from '@angular/core';\nimport {\n  ColumnResize,\n  ColumnResizeNotifier,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatColumnResize, FLEX_HOST_BINDINGS, FLEX_PROVIDERS} from './common';\n\n/**\n * Implicitly enables column resizing for a flexbox-based mat-table.\n * Individual columns will be resizable unless opted out.\n */\n@Directive({\n  selector: 'mat-table',\n  host: FLEX_HOST_BINDINGS,\n  providers: [\n    ...FLEX_PROVIDERS,\n    {provide: ColumnResize, useExisting: MatDefaultEnabledColumnResizeFlex},\n  ],\n})\nexport class MatDefaultEnabledColumnResizeFlex extends AbstractMatColumnResize {\n  readonly columnResizeNotifier = inject(ColumnResizeNotifier);\n  readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  protected readonly eventDispatcher = inject(HeaderRowEventDispatcher);\n  protected readonly ngZone = inject(NgZone);\n  protected readonly notifier = inject(ColumnResizeNotifierSource);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  NgZone,\n  ViewChild,\n  ViewEncapsulation,\n  inject,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  CdkColumnDef,\n  _CoalescedStyleScheduler,\n  _COALESCED_STYLE_SCHEDULER,\n} from '@angular/cdk/table';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  ColumnResize,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n  ResizeOverlayHandle,\n  ResizeRef,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatColumnResize} from './column-resize-directives/common';\n\n/**\n * Component shown over the edge of a resizable column that is responsible\n * for handling column resize mouse events and displaying a vertical line along the column edge.\n */\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'class': 'mat-column-resize-overlay-thumb'},\n  template: '<div #top class=\"mat-column-resize-overlay-thumb-top\"></div>',\n})\nexport class MatColumnResizeOverlayHandle extends ResizeOverlayHandle {\n  protected readonly columnDef = inject(CdkColumnDef);\n  protected readonly columnResize = inject(ColumnResize);\n  protected readonly directionality = inject(Directionality);\n  protected readonly elementRef = inject(ElementRef);\n  protected readonly eventDispatcher = inject(HeaderRowEventDispatcher);\n  protected readonly ngZone = inject(NgZone);\n  protected readonly resizeNotifier = inject(ColumnResizeNotifierSource);\n  protected readonly resizeRef = inject(ResizeRef);\n  protected readonly styleScheduler = inject<_CoalescedStyleScheduler>(_COALESCED_STYLE_SCHEDULER);\n  protected readonly document = inject(DOCUMENT);\n\n  @ViewChild('top', {static: true}) topElement: ElementRef<HTMLElement>;\n\n  protected override updateResizeActive(active: boolean): void {\n    super.updateResizeActive(active);\n\n    const originHeight = this.resizeRef.origin.nativeElement.offsetHeight;\n    this.topElement.nativeElement.style.height = `${originHeight}px`;\n    this.resizeRef.overlayRef.updateSize({\n      height: active\n        ? (this.columnResize as AbstractMatColumnResize).getTableHeight()\n        : originHeight,\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Type} from '@angular/core';\nimport {Resizable} from '@angular/cdk-experimental/column-resize';\nimport {MatColumnResizeOverlayHandle} from '../overlay-handle';\n\nexport abstract class AbstractMatResizable extends Resizable<MatColumnResizeOverlayHandle> {\n  override minWidthPxInternal = 32;\n\n  protected override getInlineHandleCssClassName(): string {\n    return 'mat-resizable-handle';\n  }\n\n  protected override getOverlayHandleComponentType(): Type<MatColumnResizeOverlayHandle> {\n    return MatColumnResizeOverlayHandle;\n  }\n}\n\nexport const RESIZABLE_HOST_BINDINGS = {\n  'class': 'mat-resizable',\n};\n\nexport const RESIZABLE_INPUTS = [\n  {name: 'minWidthPx', alias: 'matResizableMinWidthPx'},\n  {name: 'maxWidthPx', alias: 'matResizableMaxWidthPx'},\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  Injector,\n  NgZone,\n  ViewContainerRef,\n  ChangeDetectorRef,\n  inject,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Overlay} from '@angular/cdk/overlay';\nimport {\n  CdkColumnDef,\n  _CoalescedStyleScheduler,\n  _COALESCED_STYLE_SCHEDULER,\n} from '@angular/cdk/table';\nimport {\n  ColumnResize,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n  ResizeStrategy,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatResizable, RESIZABLE_HOST_BINDINGS, RESIZABLE_INPUTS} from './common';\n\n/**\n * Implicitly enables column resizing for a mat-header-cell unless the disableResize attribute\n * is present.\n */\n@Directive({\n  selector: 'mat-header-cell:not([disableResize]), th[mat-header-cell]:not([disableResize])',\n  host: RESIZABLE_HOST_BINDINGS,\n  inputs: RESIZABLE_INPUTS,\n})\nexport class MatDefaultResizable extends AbstractMatResizable {\n  protected readonly columnDef = inject(CdkColumnDef);\n  protected readonly columnResize = inject(ColumnResize);\n  protected readonly directionality = inject(Directionality);\n  protected readonly elementRef = inject(ElementRef);\n  protected readonly eventDispatcher = inject(HeaderRowEventDispatcher);\n  protected readonly injector = inject(Injector);\n  protected readonly ngZone = inject(NgZone);\n  protected readonly overlay = inject(Overlay);\n  protected readonly resizeNotifier = inject(ColumnResizeNotifierSource);\n  protected readonly resizeStrategy = inject(ResizeStrategy);\n  protected readonly styleScheduler = inject<_CoalescedStyleScheduler>(_COALESCED_STYLE_SCHEDULER);\n  protected readonly viewContainerRef = inject(ViewContainerRef);\n  protected readonly changeDetectorRef = inject(ChangeDetectorRef);\n  protected readonly document = inject(DOCUMENT);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  Injector,\n  NgZone,\n  ViewContainerRef,\n  ChangeDetectorRef,\n  inject,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Overlay} from '@angular/cdk/overlay';\nimport {\n  CdkColumnDef,\n  _CoalescedStyleScheduler,\n  _COALESCED_STYLE_SCHEDULER,\n} from '@angular/cdk/table';\nimport {\n  ColumnResize,\n  ColumnResizeNotifierSource,\n  HeaderRowEventDispatcher,\n  ResizeStrategy,\n} from '@angular/cdk-experimental/column-resize';\n\nimport {AbstractMatResizable, RESIZABLE_HOST_BINDINGS, RESIZABLE_INPUTS} from './common';\n\n/**\n * Explicitly enables column resizing for a mat-header-cell.\n */\n@Directive({\n  selector: 'mat-header-cell[resizable], th[mat-header-cell][resizable]',\n  host: RESIZABLE_HOST_BINDINGS,\n  inputs: RESIZABLE_INPUTS,\n})\nexport class MatResizable extends AbstractMatResizable {\n  protected readonly columnDef = inject(CdkColumnDef);\n  protected readonly columnResize = inject(ColumnResize);\n  protected readonly directionality = inject(Directionality);\n  protected readonly elementRef = inject(ElementRef);\n  protected readonly eventDispatcher = inject(HeaderRowEventDispatcher);\n  protected readonly injector = inject(Injector);\n  protected readonly ngZone = inject(NgZone);\n  protected readonly overlay = inject(Overlay);\n  protected readonly resizeNotifier = inject(ColumnResizeNotifierSource);\n  protected readonly resizeStrategy = inject(ResizeStrategy);\n  protected readonly styleScheduler = inject<_CoalescedStyleScheduler>(_COALESCED_STYLE_SCHEDULER);\n  protected readonly viewContainerRef = inject(ViewContainerRef);\n  protected readonly changeDetectorRef = inject(ChangeDetectorRef);\n  protected readonly document = inject(DOCUMENT);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\nimport {MatColumnResize} from './column-resize-directives/column-resize';\nimport {MatColumnResizeFlex} from './column-resize-directives/column-resize-flex';\nimport {MatDefaultEnabledColumnResize} from './column-resize-directives/default-enabled-column-resize';\nimport {MatDefaultEnabledColumnResizeFlex} from './column-resize-directives/default-enabled-column-resize-flex';\nimport {MatDefaultResizable} from './resizable-directives/default-enabled-resizable';\nimport {MatResizable} from './resizable-directives/resizable';\nimport {MatColumnResizeOverlayHandle} from './overlay-handle';\n\nconst ENTRY_COMMON_COMPONENTS = [MatColumnResizeOverlayHandle];\n\n@NgModule({\n  imports: [...ENTRY_COMMON_COMPONENTS],\n  exports: ENTRY_COMMON_COMPONENTS,\n})\nexport class MatColumnResizeCommonModule {}\n\nconst IMPORTS = [MatCommonModule, OverlayModule, MatColumnResizeCommonModule];\n\n@NgModule({\n  imports: [\n    ...IMPORTS,\n    MatDefaultEnabledColumnResize,\n    MatDefaultEnabledColumnResizeFlex,\n    MatDefaultResizable,\n  ],\n  exports: [MatDefaultEnabledColumnResize, MatDefaultEnabledColumnResizeFlex, MatDefaultResizable],\n})\nexport class MatDefaultEnabledColumnResizeModule {}\n\n@NgModule({\n  imports: [...IMPORTS, MatColumnResize, MatColumnResizeFlex, MatResizable],\n  exports: [MatColumnResize, MatColumnResizeFlex, MatResizable],\n})\nexport class MatColumnResizeModule {}\n"],"names":[],"mappings":"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"}