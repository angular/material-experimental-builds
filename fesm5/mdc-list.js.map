{"version":3,"file":"mdc-list.js","sources":["../../../../../../src/material-experimental/mdc-list/list-base.ts","../../../../../../src/material-experimental/mdc-list/list.ts","../../../../../../src/material-experimental/mdc-list/action-list.ts","../../../../../../src/material-experimental/mdc-list/nav-list.ts","../../../../../../src/material-experimental/mdc-list/selection-list.ts","../../../../../../src/material-experimental/mdc-list/module.ts","../../../../../../src/material-experimental/mdc-list/public-api.ts","../../../../../../src/material-experimental/mdc-list/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AfterContentInit, ElementRef, NgZone, OnDestroy, QueryList} from '@angular/core';\nimport {setLines} from '@angular/material/core';\nimport {Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\n\nexport class MatListBase {}\n\nexport class MatListItemBase implements AfterContentInit, OnDestroy {\n  lines: QueryList<ElementRef<Element>>;\n\n  private _subscriptions = new Subscription();\n\n  constructor(protected _element: ElementRef, protected _ngZone: NgZone) {}\n\n  ngAfterContentInit() {\n    this._monitorLines();\n  }\n\n  /**\n   * Subscribes to changes in `MatLine` content children and annotates them appropriately when they\n   * change.\n   */\n  private _monitorLines() {\n    this._ngZone.runOutsideAngular(() => {\n      this._subscriptions.add(this.lines.changes.pipe(startWith(this.lines))\n          .subscribe((lines: QueryList<ElementRef<Element>>) => {\n            lines.forEach((line: ElementRef<Element>, index: number) => {\n              line.nativeElement.classList.toggle('mdc-list-item__primary-text', index === 0);\n              line.nativeElement.classList.toggle('mdc-list-item__secondary-text', index !== 0);\n            });\n            setLines(lines, this._element, 'mat-mdc');\n          }));\n    });\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  NgZone,\n  QueryList,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MatLine} from '@angular/material/core';\nimport {MatListBase, MatListItemBase} from './list-base';\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-list-avatar], [matListAvatar]',\n  host: {'class': 'mat-mdc-list-avatar mdc-list-item__graphic'}\n})\nexport class MatListAvatarCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-list-icon], [matListIcon]',\n  host: {'class': 'mat-mdc-list-icon mdc-list-item__graphic'}\n})\nexport class MatListIconCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-subheader], [matSubheader]',\n  // TODO(mmalerba): MDC's subheader font looks identical to the list item font, figure out why and\n  //  make a change in one of the repos to visually distinguish.\n  host: {'class': 'mat-mdc-subheader mdc-list-group__subheader'}\n})\nexport class MatListSubheaderCssMatStyler {}\n\n@Component({\n  selector: 'mat-list',\n  exportAs: 'matList',\n  template: '<ng-content></ng-content>',\n  host: {\n    'class': 'mat-mdc-list mat-mdc-list-base mdc-list',\n  },\n  styleUrls: ['list.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatList extends MatListBase {}\n\n@Component({\n  selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n  exportAs: 'matListItem',\n  host: {\n    'class': 'mat-mdc-list-item mdc-list-item',\n  },\n  templateUrl: 'list-item.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatListItem extends MatListItemBase {\n  @ContentChildren(MatLine, {read: ElementRef, descendants: true}) lines:\n      QueryList<ElementRef<Element>>;\n\n  constructor(element: ElementRef, ngZone: NgZone) {\n    super(element, ngZone);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {MatListBase} from './list-base';\n\n@Component({\n  selector: 'mat-action-list',\n  exportAs: 'matActionList',\n  template: '<ng-content></ng-content>',\n  host: {\n    'class': 'mat-mdc-action-list mat-mdc-list-base mdc-list',\n  },\n  styleUrls: ['list.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatActionList extends MatListBase {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {MatList} from './list';\nimport {MatListBase} from './list-base';\n\n@Component({\n  selector: 'mat-nav-list',\n  /**\n   * @deprecated `matList` export will be removed, use `matNavList`\n   * @breaking-change 11.0.0\n   */\n  exportAs: 'matNavList, matList',\n  template: '<ng-content></ng-content>',\n  host: {\n    'class': 'mat-mdc-nav-list mat-mdc-list-base mdc-list',\n  },\n  styleUrls: ['list.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    /**\n     * @deprecated Provider for `MatList` will be removed, use `MatNavList` instead.\n     * @breaking-change 11.0.0\n     */\n    {provide: MatList, useExisting: MatNavList}\n  ]\n})\nexport class MatNavList extends MatListBase {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  ElementRef,\n  forwardRef,\n  NgZone,\n  QueryList,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {MatLine} from '@angular/material/core';\nimport {MatListBase, MatListItemBase} from './list-base';\n\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSelectionList),\n  multi: true\n};\n\n/** Change event that is being fired whenever the selected state of an option changes. */\nexport class MatSelectionListChange {\n  constructor(\n      /** Reference to the selection list that emitted the event. */\n      public source: MatSelectionList,\n      /** Reference to the option that has been changed. */\n      public option: MatListOption) {}\n}\n\n@Component({\n  selector: 'mat-selection-list',\n  exportAs: 'matSelectionList',\n  host: {\n    'class': 'mat-mdc-selection-list mat-mdc-list-base'\n  },\n  templateUrl: 'selection-list.html',\n  styleUrls: ['list.css'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatSelectionList extends MatListBase {}\n\n@Component({\n  selector: 'mat-list-option',\n  exportAs: 'matListOption',\n  host: {\n    'class': 'mat-mdc-list-item mat-mdc-list-option',\n  },\n  templateUrl: 'list-option.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatListOption extends MatListItemBase {\n  @ContentChildren(MatLine, {read: ElementRef, descendants: true}) lines:\n      QueryList<ElementRef<Element>>;\n\n  constructor(element: ElementRef, ngZone: NgZone) {\n    super(element, ngZone);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatLineModule} from '@angular/material/core';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatActionList} from './action-list';\nimport {\n  MatList,\n  MatListAvatarCssMatStyler,\n  MatListIconCssMatStyler,\n  MatListItem,\n  MatListSubheaderCssMatStyler,\n} from './list';\nimport {MatNavList} from './nav-list';\nimport {MatListOption, MatSelectionList} from './selection-list';\n\n@NgModule({\n  imports: [MatLineModule],\n  exports: [\n    MatList,\n    MatActionList,\n    MatNavList,\n    MatSelectionList,\n    MatListItem,\n    MatListOption,\n    MatListAvatarCssMatStyler,\n    MatListIconCssMatStyler,\n    MatListSubheaderCssMatStyler,\n    MatDividerModule,\n    MatLineModule,\n  ],\n  declarations: [\n    MatList,\n    MatActionList,\n    MatNavList,\n    MatSelectionList,\n    MatListItem,\n    MatListOption,\n    MatListAvatarCssMatStyler,\n    MatListIconCssMatStyler,\n    MatListSubheaderCssMatStyler,\n  ]\n})\nexport class MatListModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './list';\nexport * from './action-list';\nexport * from './nav-list';\nexport * from './selection-list';\nexport * from './module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {MatListBase as Éµangular_material_src_material_experimental_mdc_list_mdc_list_a,MatListItemBase as Éµangular_material_src_material_experimental_mdc_list_mdc_list_b} from './list-base';"],"names":[],"mappings":"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"}