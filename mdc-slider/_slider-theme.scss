// TODO: disabled until we implement the new MDC slider.
// @import '@material/slider/mixins.import';
@import '../mdc-helpers/mdc-helpers';

@mixin mat-mdc-slider-color($config-or-theme) {
  $config: mat-get-color-config($config-or-theme);
  @include mat-using-mdc-theme($config) {
    // TODO: disabled until we implement the new MDC slider.
    // @include mdc-slider-core-styles($query: $mat-theme-styles-query);

    .mat-mdc-slider {
      &.mat-primary {
        // TODO: disabled until we implement the new MDC slider.
        // @include mdc-slider-color-accessible(primary, $mat-theme-styles-query);
      }

      &.mat-warn {
        // TODO: disabled until we implement the new MDC slider.
        // @include mdc-slider-color-accessible(error, $mat-theme-styles-query);
      }
    }
  }
}

@mixin mat-mdc-slider-typography($config-or-theme) {
  $config: mat-get-typography-config($config-or-theme);
  @include mat-using-mdc-typography($config) {
    // TODO: disabled until we implement the new MDC slider.
    // @include mdc-slider-core-styles($query: $mat-typography-styles-query);
  }
}

@mixin mat-mdc-slider-density($config-or-theme) {}

@mixin mat-mdc-slider-theme($theme-or-color-config) {
  $theme: mat-private-legacy-get-theme($theme-or-color-config);
  @include mat-private-check-duplicate-theme-styles($theme, 'mat-mdc-slider') {
    $color: mat-get-color-config($theme);
    $density: mat-get-density-config($theme);
    $typography: mat-get-typography-config($theme);

    @if $color != null {
      @include mat-mdc-slider-color($color);
    }
    @if $density != null {
      @include mat-mdc-slider-density($density);
    }
    @if $typography != null {
      @include mat-mdc-slider-typography($typography);
    }
  }
}

