@use 'sass:map';
@use '@angular/material' as mat;

/// Sets all of the standard typography tokens for the given token base name to the given typography
/// level.
/// @param {Map} $systems The MDC system tokens
/// @param {String} $base-name The token base name to get the typography tokens for
/// @param {String} $typography-level The typography level to base the token values on
/// @return {Map} A map containing the typography tokens for the given base token name
@function _generate-typography-tokens($systems, $base-name, $typography-level) {
  $result: ();
  @each $prop in (font, line-height, size, tracking, weight) {
    $result: map.set($result, #{$base-name}-#{$prop},
        map.get($systems, md-sys-typescale, #{$typography-level}-#{$prop}));
  }
  @return $result;
}

/// Generates custom tokens for the mat-card.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @return {Map} A set of custom tokens for the mat-card
@function card($systems, $exclude-hardcoded) {
  @return mat.private-merge-all(
      _generate-typography-tokens($systems, title-text, title-large),
      _generate-typography-tokens($systems, subtitle-text, title-medium),
      (
        subtitle-text-color: map.get($systems, md-ref-color, on-surface)
      )
  );
}
