!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/cdk/overlay"),require("@angular/common"),require("@angular/core"),require("@angular/material-experimental/mdc-core"),require("@angular/material-experimental/mdc-form-field"),require("@angular/cdk/scrolling"),require("@angular/material/select"),require("@angular/material/form-field"),require("rxjs/operators"),require("@angular/animations")):"function"==typeof define&&define.amd?define("@angular/material-experimental/mdc-select",["exports","@angular/cdk/overlay","@angular/common","@angular/core","@angular/material-experimental/mdc-core","@angular/material-experimental/mdc-form-field","@angular/cdk/scrolling","@angular/material/select","@angular/material/form-field","rxjs/operators","@angular/animations"],t):t(((e=e||self).ng=e.ng||{},e.ng.materialExperimental=e.ng.materialExperimental||{},e.ng.materialExperimental.mdcSelect={}),e.ng.cdk.overlay,e.ng.common,e.ng.core,e.ng.materialExperimental.mdcCore,e.ng.materialExperimental.mdcFormField,e.ng.cdk.scrolling,e.ng.material.select,e.ng.material.formField,e.rxjs.operators,e.ng.animations)}(this,(function(e,t,a,n,r,i,o,l,c,s,d){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var m=function(e,t){return(m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])})(e,t)};function p(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var n,r,i=a.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)o.push(n.value)}catch(e){r={error:e}}finally{try{n&&!n.done&&(a=i.return)&&a.call(i)}finally{if(r)throw r.error}}return o}function u(e,t){for(var a=0,n=t.length,r=e.length;a<n;a++,r++)e[r]=t[a];return e}
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
var g,f={transformPanelWrap:d.trigger("transformPanelWrap",[d.transition("* => void",d.query("@transformPanel",[d.animateChild()],{optional:!0}))]),transformPanel:d.trigger("transformPanel",[d.state("void",d.style({opacity:0,transform:"scale(1, 0.8)"})),d.transition("void => showing",d.animate("120ms cubic-bezier(0, 0, 0.2, 1)",d.style({opacity:1,transform:"scale(1, 1)"}))),d.transition("* => void",d.animate("100ms linear",d.style({opacity:0})))])},h=function h(e,t){this.source=e,this.value=t};(g=function g(){}).decorators=[{type:n.Directive,args:[{selector:"mat-select-trigger",providers:[{provide:l.MAT_SELECT_TRIGGER,useExisting:g}]}]}];var y,v=function(e){function t(){var t=e.apply(this,u([],p(arguments)))||this;return t._positions=[{originX:"start",originY:"bottom",overlayX:"start",overlayY:"top"},{originX:"start",originY:"top",overlayX:"start",overlayY:"bottom",panelClass:"mat-mdc-select-panel-above"}],t}return function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function a(){this.constructor=e}m(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}(t,e),Object.defineProperty(t.prototype,"shouldLabelFloat",{get:function(){return!this.empty},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){var t=this;e.prototype.ngOnInit.call(this),this._viewportRuler.change().pipe(s.takeUntil(this._destroy)).subscribe((function(){t.panelOpen&&(t._overlayWidth=t._getOverlayWidth(),t._changeDetectorRef.detectChanges())}))},t.prototype.ngAfterViewInit=function(){this._parentFormField&&(this._preferredOverlayOrigin={elementRef:this._parentFormField.getConnectedOverlayOrigin()})},t.prototype.open=function(){this._overlayWidth=this._getOverlayWidth(),e.prototype.open.call(this)},t.prototype.close=function(){e.prototype.close.call(this),this.stateChanges.next()},t.prototype._scrollOptionIntoView=function(e){var t=this.options.toArray()[e];if(t){var a=this.panel.nativeElement,n=t._getHostElement();a.scrollTop=r._getOptionScrollPosition(n.offsetTop,n.offsetHeight,a.scrollTop,a.offsetHeight)}},t.prototype._positioningSettled=function(){this._scrollOptionIntoView(this._keyManager.activeItemIndex||0)},t.prototype._getChangeEvent=function(e){return new h(this,e)},t.prototype._getOverlayWidth=function(){var e;return((null===(e=this._preferredOverlayOrigin)||void 0===e?void 0:e.elementRef)||this._elementRef).nativeElement.getBoundingClientRect().width},t}(l._MatSelectBase);v.decorators=[{type:n.Component,args:[{selector:"mat-select",exportAs:"matSelect",template:'\x3c!--\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\n While aria-owns is not required for the ARIA 1.2 `role="combobox"` interaction pattern,\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model="true"`\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\n VoiceOver from "seeing" the select\'s listbox overlay for aria-activedescendant.\n Using `aria-owns` re-parents the select overlay so that it works again.\n See https://github.com/angular/components/issues/20694\n--\x3e\n<div cdk-overlay-origin\n     [attr.aria-owns]="panelOpen ? id + \'-panel\' : null"\n     class="mat-mdc-select-trigger"\n     (click)="toggle()"\n     #fallbackOverlayOrigin="cdkOverlayOrigin"\n     #trigger>\n  <div class="mat-mdc-select-value" [ngSwitch]="empty" [attr.id]="_valueId">\n    <span class="mat-mdc-select-placeholder mat-mdc-select-min-line" *ngSwitchCase="true">{{placeholder}}</span>\n    <span class="mat-mdc-select-value-text" *ngSwitchCase="false" [ngSwitch]="!!customTrigger">\n      <span class="mat-mdc-select-min-line" *ngSwitchDefault>{{triggerValue}}</span>\n      <ng-content select="mat-select-trigger" *ngSwitchCase="true"></ng-content>\n    </span>\n  </div>\n\n  <div class="mat-mdc-select-arrow-wrapper">\n    <div class="mat-mdc-select-arrow">\n      \x3c!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. --\x3e\n      <svg viewBox="0 0 24 24" width="24px" height="24px" focusable="false">\n        <path d="M7 10l5 5 5-5z"/>\n      </svg>\n    </div>\n  </div>\n</div>\n\n<ng-template\n  cdk-connected-overlay\n  cdkConnectedOverlayLockPosition\n  cdkConnectedOverlayHasBackdrop\n  cdkConnectedOverlayBackdropClass="cdk-overlay-transparent-backdrop"\n  [cdkConnectedOverlayPanelClass]="_overlayPanelClass"\n  [cdkConnectedOverlayScrollStrategy]="_scrollStrategy"\n  [cdkConnectedOverlayOrigin]="_preferredOverlayOrigin || fallbackOverlayOrigin"\n  [cdkConnectedOverlayOpen]="panelOpen"\n  [cdkConnectedOverlayPositions]="_positions"\n  [cdkConnectedOverlayWidth]="_overlayWidth"\n  (backdropClick)="close()"\n  (attach)="_onAttached()"\n  (detach)="close()">\n  <div\n    #panel\n    role="listbox"\n    tabindex="-1"\n    class="mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}"\n    [attr.id]="id + \'-panel\'"\n    [attr.aria-multiselectable]="multiple"\n    [attr.aria-label]="ariaLabel || null"\n    [attr.aria-labelledby]="_getPanelAriaLabelledby()"\n    [ngClass]="panelClass"\n    [@transformPanel]="\'showing\'"\n    (@transformPanel.done)="_panelDoneAnimatingStream.next($event.toState)"\n    (keydown)="_handleKeydown($event)">\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n',inputs:["disabled","disableRipple","tabIndex"],encapsulation:n.ViewEncapsulation.None,changeDetection:n.ChangeDetectionStrategy.OnPush,host:{role:"combobox","aria-autocomplete":"none","aria-haspopup":"listbox",class:"mat-mdc-select","[attr.id]":"id","[attr.tabindex]":"tabIndex","[attr.aria-controls]":'panelOpen ? id + "-panel" : null',"[attr.aria-expanded]":"panelOpen","[attr.aria-label]":"ariaLabel || null","[attr.aria-required]":"required.toString()","[attr.aria-disabled]":"disabled.toString()","[attr.aria-invalid]":"errorState","[attr.aria-describedby]":"_ariaDescribedby || null","[attr.aria-activedescendant]":"_getAriaActiveDescendant()","[class.mat-mdc-select-disabled]":"disabled","[class.mat-mdc-select-invalid]":"errorState","[class.mat-mdc-select-required]":"required","[class.mat-mdc-select-empty]":"empty","[class.mat-mdc-select-multiple]":"multiple","(keydown)":"_handleKeydown($event)","(focus)":"_onFocus()","(blur)":"_onBlur()"},animations:[f.transformPanel],providers:[{provide:c.MatFormFieldControl,useExisting:v},{provide:r.MAT_OPTION_PARENT_COMPONENT,useExisting:v}],styles:['.mdc-menu-surface{display:none;position:absolute;box-sizing:border-box;max-width:calc(100vw - 32px);max-width:var(--mdc-menu-max-width, calc(100vw - 32px));max-height:calc(100vh - 32px);max-height:var(--mdc-menu-max-height, calc(100vh - 32px));margin:0;padding:0;transform:scale(1);transform-origin:top left;opacity:0;overflow:auto;will-change:transform,opacity;z-index:8;border-radius:4px;border-radius:var(--mdc-shape-medium, 4px);transform-origin-left:top left;transform-origin-right:top right}.mdc-menu-surface:focus{outline:none}.mdc-menu-surface--open{display:inline-block;transform:scale(1);opacity:1}.mdc-menu-surface--animating-open{display:inline-block;transform:scale(0.8);opacity:0}.mdc-menu-surface--animating-closed{display:inline-block;opacity:0}[dir=rtl] .mdc-menu-surface,.mdc-menu-surface[dir=rtl]{transform-origin-left:top right;transform-origin-right:top left}.mdc-menu-surface--anchor{position:relative;overflow:visible}.mdc-menu-surface--fixed{position:fixed}.mdc-menu-surface--fullwidth{width:100%}.mat-mdc-select{display:inline-block;width:100%;outline:none}.mat-mdc-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-40%)}.mat-mdc-select-arrow{margin:0 4px;width:10px;height:5px;position:relative}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mdc-menu-surface.mat-mdc-select-panel{width:100%;max-height:256px;position:static;outline:0;margin:0;padding:8px 0;list-style-type:none}.mdc-menu-surface.mat-mdc-select-panel:focus{outline:none}.cdk-high-contrast-active .mdc-menu-surface.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) .mdc-menu-surface.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above .mdc-menu-surface.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:" ";white-space:pre;width:1px}\n']}]}],v.propDecorators={options:[{type:n.ContentChildren,args:[r.MatOption,{descendants:!0}]}],optionGroups:[{type:n.ContentChildren,args:[r.MAT_OPTGROUP,{descendants:!0}]}],customTrigger:[{type:n.ContentChild,args:[l.MAT_SELECT_TRIGGER]}]},(y=function y(){}).decorators=[{type:n.NgModule,args:[{imports:[a.CommonModule,t.OverlayModule,r.MatOptionModule,r.MatCommonModule],exports:[o.CdkScrollableModule,i.MatFormFieldModule,v,g,r.MatOptionModule,r.MatCommonModule],declarations:[v,g],providers:[l.MAT_SELECT_SCROLL_STRATEGY_PROVIDER]}]}],
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
Object.defineProperty(e,"MAT_SELECT_CONFIG",{enumerable:!0,get:function(){return l.MAT_SELECT_CONFIG}}),Object.defineProperty(e,"MAT_SELECT_SCROLL_STRATEGY",{enumerable:!0,get:function(){return l.MAT_SELECT_SCROLL_STRATEGY}}),Object.defineProperty(e,"MAT_SELECT_SCROLL_STRATEGY_PROVIDER",{enumerable:!0,get:function(){return l.MAT_SELECT_SCROLL_STRATEGY_PROVIDER}}),Object.defineProperty(e,"MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY",{enumerable:!0,get:function(){return l.MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY}}),Object.defineProperty(e,"MAT_SELECT_TRIGGER",{enumerable:!0,get:function(){return l.MAT_SELECT_TRIGGER}}),e.MatSelect=v,e.MatSelectChange=h,e.MatSelectModule=y,e.MatSelectTrigger=g,e.matSelectAnimations=f,Object.defineProperty(e,"__esModule",{value:!0})}));