{"version":3,"sources":["src/material-experimental/material-experimental-mdc-card.umd.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","ng","materialExperimental","mdcCard","core","common","mdcCore","this","MatCard","MatCardTitle","MatCardTitleGroup","MatCardContent","MatCardSubtitle","MatCardActions","MatCardHeader","MatCardFooter","MatCardImage","MatCardSmImage","MatCardMdImage","MatCardLgImage","MatCardXlImage","MatCardAvatar","appearance","decorators","type","Component","args","selector","template","host","class","[class.mdc-card--outlined]","exportAs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","styles","propDecorators","Input","Directive","align","[class.mat-mdc-card-actions-align-end]","MatCardModule","CARD_DIRECTIVES","NgModule","imports","MatCommonModule","CommonModule","declarations","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/material-experimental/mdc-core')) :\n    typeof define === 'function' && define.amd ? define('@angular/material-experimental/mdc-card', ['exports', '@angular/core', '@angular/common', '@angular/material-experimental/mdc-core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.ng = global.ng || {}, global.ng.materialExperimental = global.ng.materialExperimental || {}, global.ng.materialExperimental.mdcCard = {}), global.ng.core, global.ng.common, global.ng.materialExperimental.mdcCore));\n}(this, (function (exports, core, common, mdcCore) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Material Design card component. Cards contain content and actions about a single subject.\n     * See https://material.io/design/components/cards.html\n     *\n     * MatCard provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCard = /** @class */ (function () {\n        function MatCard() {\n            this.appearance = 'raised';\n        }\n        return MatCard;\n    }());\n    MatCard.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'mat-card',\n                    template: \"<ng-content></ng-content>\\n\",\n                    host: {\n                        'class': 'mat-mdc-card mdc-card',\n                        '[class.mdc-card--outlined]': 'appearance == \"outlined\"'\n                    },\n                    exportAs: 'matCard',\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:0;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-card{border-radius:4px;border-radius:var(--mdc-shape-medium, 4px);position:relative;display:flex;flex-direction:column;box-sizing:border-box}.mdc-card .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-card::after{border-radius:4px;border-radius:var(--mdc-shape-medium, 4px);position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid transparent;border-radius:inherit;content:\\\"\\\";pointer-events:none;pointer-events:none}.mdc-card--outlined{border-width:1px;border-style:solid}.mdc-card--outlined::after{border:none}.mdc-card__content{border-radius:inherit;height:100%}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__media--square::before{margin-top:100%}.mdc-card__media--16-9::before{margin-top:56.25%}.mdc-card__media-content{position:absolute;top:0;right:0;bottom:0;left:0;box-sizing:border-box}.mdc-card__primary-action{display:flex;flex-direction:column;box-sizing:border-box;position:relative;outline:none;color:inherit;text-decoration:none;cursor:pointer;overflow:hidden}.mdc-card__primary-action:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__primary-action:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mdc-card__actions--full-bleed{padding:0}.mdc-card__action-buttons,.mdc-card__action-icons{display:flex;flex-direction:row;align-items:center;box-sizing:border-box}.mdc-card__action-icons{flex-grow:1;justify-content:flex-end}.mdc-card__action-buttons+.mdc-card__action-icons{margin-left:16px;margin-right:0}[dir=rtl] .mdc-card__action-buttons+.mdc-card__action-icons,.mdc-card__action-buttons+.mdc-card__action-icons[dir=rtl]{margin-left:0;margin-right:16px}.mdc-card__action{display:inline-flex;flex-direction:row;align-items:center;box-sizing:border-box;justify-content:center;cursor:pointer;user-select:none}.mdc-card__action:focus{outline:none}.mdc-card__action--button{margin-left:0;margin-right:8px;padding:0 8px}[dir=rtl] .mdc-card__action--button,.mdc-card__action--button[dir=rtl]{margin-left:8px;margin-right:0}.mdc-card__action--button:last-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-card__action--button:last-child,.mdc-card__action--button:last-child[dir=rtl]{margin-left:0;margin-right:0}.mdc-card__actions--full-bleed .mdc-card__action--button{justify-content:space-between;width:100%;height:auto;max-height:none;margin:0;padding:8px 16px;text-align:left}[dir=rtl] .mdc-card__actions--full-bleed .mdc-card__action--button,.mdc-card__actions--full-bleed .mdc-card__action--button[dir=rtl]{text-align:right}.mdc-card__action--icon{margin:-6px 0;padding:12px}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-header .mat-mdc-card-subtitle{margin-top:-8px;margin-bottom:16px}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;padding:16px 16px 0}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}\\n\"]\n                },] }\n    ];\n    MatCard.propDecorators = {\n        appearance: [{ type: core.Input }]\n    };\n    // TODO(jelbourn): add `MatActionCard`, which is a card that acts like a button (and has a ripple).\n    // Supported in MDC with `.mdc-card__primary-action`. Will require additional a11y docs for users.\n    /**\n     * Title of a card, intended for use within `<mat-card>`. This component is an optional\n     * convenience for one variety of card title; any custom title element may be used in its place.\n     *\n     * MatCardTitle provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCardTitle = /** @class */ (function () {\n        function MatCardTitle() {\n        }\n        return MatCardTitle;\n    }());\n    MatCardTitle.decorators = [\n        { type: core.Directive, args: [{\n                    selector: \"mat-card-title, [mat-card-title], [matCardTitle]\",\n                    host: { 'class': 'mat-mdc-card-title' }\n                },] }\n    ];\n    /**\n     * Container intended to be used within the `<mat-card>` component. Can contain exactly one\n     * `<mat-card-title>`, one `<mat-card-subtitle>` and one content image of any size\n     * (e.g. `<img matCardLgImage>`).\n     */\n    var MatCardTitleGroup = /** @class */ (function () {\n        function MatCardTitleGroup() {\n        }\n        return MatCardTitleGroup;\n    }());\n    MatCardTitleGroup.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'mat-card-title-group',\n                    template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    host: { 'class': 'mat-mdc-card-title-group' }\n                },] }\n    ];\n    /**\n     * Content of a card, intended for use within `<mat-card>`. This component is an optional\n     * convenience for use with other convenience elements, such as `<mat-card-title>`; any custom\n     * content block element may be used in its place.\n     *\n     * MatCardContent provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCardContent = /** @class */ (function () {\n        function MatCardContent() {\n        }\n        return MatCardContent;\n    }());\n    MatCardContent.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'mat-card-content',\n                    host: { 'class': 'mat-mdc-card-content' }\n                },] }\n    ];\n    /**\n     * Sub-title of a card, intended for use within `<mat-card>` beneath a `<mat-card-title>`. This\n     * component is an optional convenience for use with other convenience elements, such as\n     * `<mat-card-title>`.\n     *\n     * MatCardSubtitle provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCardSubtitle = /** @class */ (function () {\n        function MatCardSubtitle() {\n        }\n        return MatCardSubtitle;\n    }());\n    MatCardSubtitle.decorators = [\n        { type: core.Directive, args: [{\n                    selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\",\n                    host: { 'class': 'mat-mdc-card-subtitle' }\n                },] }\n    ];\n    /**\n     * Bottom area of a card that contains action buttons, intended for use within `<mat-card>`.\n     * This component is an optional convenience for use with other convenience elements, such as\n     * `<mat-card-content>`; any custom action block element may be used in its place.\n     *\n     * MatCardActions provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCardActions = /** @class */ (function () {\n        function MatCardActions() {\n            // TODO(jelbourn): deprecate `align` in favor of `actionPositon` or `actionAlignment`\n            // as to not conflict with the native `align` attribute.\n            /** Position of the actions inside the card. */\n            this.align = 'start';\n            // TODO(jelbourn): support `.mdc-card__actions--full-bleed`.\n            // TODO(jelbourn): support  `.mdc-card__action-buttons` and `.mdc-card__action-icons`.\n            // TODO(jelbourn): figure out how to use `.mdc-card__action`, `.mdc-card__action--button`, and\n            // `mdc-card__action--icon`. They're used primarily for positioning, which we might be able to\n            // do implicitly.\n        }\n        return MatCardActions;\n    }());\n    MatCardActions.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'mat-card-actions',\n                    exportAs: 'matCardActions',\n                    host: {\n                        'class': 'mat-mdc-card-actions mdc-card__actions',\n                        '[class.mat-mdc-card-actions-align-end]': 'align === \"end\"',\n                    }\n                },] }\n    ];\n    MatCardActions.propDecorators = {\n        align: [{ type: core.Input }]\n    };\n    /**\n     * Header region of a card, intended for use within `<mat-card>`. This header captures\n     * a card title, subtitle, and avatar.  This component is an optional convenience for use with\n     * other convenience elements, such as `<mat-card-footer>`; any custom header block element may be\n     * used in its place.\n     *\n     * MatCardHeader provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCardHeader = /** @class */ (function () {\n        function MatCardHeader() {\n        }\n        return MatCardHeader;\n    }());\n    MatCardHeader.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'mat-card-header',\n                    template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-mdc-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    host: { 'class': 'mat-mdc-card-header' }\n                },] }\n    ];\n    /**\n     * Footer area a card, intended for use within `<mat-card>`.\n     * This component is an optional convenience for use with other convenience elements, such as\n     * `<mat-card-content>`; any custom footer block element may be used in its place.\n     *\n     * MatCardFooter provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCardFooter = /** @class */ (function () {\n        function MatCardFooter() {\n        }\n        return MatCardFooter;\n    }());\n    MatCardFooter.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'mat-card-footer',\n                    host: { 'class': 'mat-mdc-card-footer' }\n                },] }\n    ];\n    // TODO(jelbourn): deprecate the \"image\" selectors to replace with \"media\".\n    // TODO(jelbourn): support `.mdc-card__media-content`.\n    /**\n     * Primary image content for a card, intended for use within `<mat-card>`. Can be applied to\n     * any media element, such as `<img>` or `<picture>`.\n     *\n     * This component is an optional convenience for use with other convenience elements, such as\n     * `<mat-card-content>`; any custom media element may be used in its place.\n     *\n     * MatCardImage provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCardImage = /** @class */ (function () {\n        function MatCardImage() {\n        }\n        return MatCardImage;\n    }());\n    MatCardImage.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[mat-card-image], [matCardImage]',\n                    host: { 'class': 'mat-mdc-card-image mdc-card__media' }\n                },] }\n    ];\n    /** Same as `MatCardImage`, but small. */\n    var MatCardSmImage = /** @class */ (function () {\n        function MatCardSmImage() {\n        }\n        return MatCardSmImage;\n    }());\n    MatCardSmImage.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[mat-card-sm-image], [matCardImageSmall]',\n                    host: { 'class': 'mat-mdc-card-sm-image mdc-card__media' }\n                },] }\n    ];\n    /** Same as `MatCardImage`, but medium. */\n    var MatCardMdImage = /** @class */ (function () {\n        function MatCardMdImage() {\n        }\n        return MatCardMdImage;\n    }());\n    MatCardMdImage.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[mat-card-md-image], [matCardImageMedium]',\n                    host: { 'class': 'mat-mdc-card-md-image mdc-card__media' }\n                },] }\n    ];\n    /** Same as `MatCardImage`, but large. */\n    var MatCardLgImage = /** @class */ (function () {\n        function MatCardLgImage() {\n        }\n        return MatCardLgImage;\n    }());\n    MatCardLgImage.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[mat-card-lg-image], [matCardImageLarge]',\n                    host: { 'class': 'mat-mdc-card-lg-image mdc-card__media' }\n                },] }\n    ];\n    /** Same as `MatCardImage`, but extra-large. */\n    var MatCardXlImage = /** @class */ (function () {\n        function MatCardXlImage() {\n        }\n        return MatCardXlImage;\n    }());\n    MatCardXlImage.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                    host: { 'class': 'mat-mdc-card-xl-image mdc-card__media' }\n                },] }\n    ];\n    /**\n     * Avatar image content for a card, intended for use within `<mat-card>`. Can be applied to\n     * any media element, such as `<img>` or `<picture>`.\n     *\n     * This component is an optional convenience for use with other convenience elements, such as\n     * `<mat-card-title>`; any custom media element may be used in its place.\n     *\n     * MatCardAvatar provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCardAvatar = /** @class */ (function () {\n        function MatCardAvatar() {\n        }\n        return MatCardAvatar;\n    }());\n    MatCardAvatar.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[mat-card-avatar], [matCardAvatar]',\n                    host: { 'class': 'mat-mdc-card-avatar' }\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CARD_DIRECTIVES = [\n        MatCard,\n        MatCardActions,\n        MatCardAvatar,\n        MatCardContent,\n        MatCardFooter,\n        MatCardHeader,\n        MatCardImage,\n        MatCardLgImage,\n        MatCardMdImage,\n        MatCardSmImage,\n        MatCardSubtitle,\n        MatCardTitle,\n        MatCardTitleGroup,\n        MatCardXlImage\n    ];\n    var MatCardModule = /** @class */ (function () {\n        function MatCardModule() {\n        }\n        return MatCardModule;\n    }());\n    MatCardModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [mdcCore.MatCommonModule, common.CommonModule],\n                    exports: [CARD_DIRECTIVES, mdcCore.MatCommonModule],\n                    declarations: CARD_DIRECTIVES,\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.MatCard = MatCard;\n    exports.MatCardActions = MatCardActions;\n    exports.MatCardAvatar = MatCardAvatar;\n    exports.MatCardContent = MatCardContent;\n    exports.MatCardFooter = MatCardFooter;\n    exports.MatCardHeader = MatCardHeader;\n    exports.MatCardImage = MatCardImage;\n    exports.MatCardLgImage = MatCardLgImage;\n    exports.MatCardMdImage = MatCardMdImage;\n    exports.MatCardModule = MatCardModule;\n    exports.MatCardSmImage = MatCardSmImage;\n    exports.MatCardSubtitle = MatCardSubtitle;\n    exports.MatCardTitle = MatCardTitle;\n    exports.MatCardTitleGroup = MatCardTitleGroup;\n    exports.MatCardXlImage = MatCardXlImage;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-experimental-mdc-card.umd.js.map\n"]}