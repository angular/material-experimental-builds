{"version":3,"sources":["src/material-experimental/material-experimental-mdc-card.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","materialExperimental","mdcCard","core","common","material","this","core$1","MatCard","decorators","type","Component","args","selector","template","host","class","exportAs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","styles","MatCardTitle","Directive","MatCardTitleGroup","MatCardContent","MatCardSubtitle","MatCardActions","align","[class.mat-mdc-card-actions-align-end]","propDecorators","Input","MatCardHeader","MatCardFooter","MatCardImage","MatCardSmImage","MatCardMdImage","MatCardLgImage","MatCardXlImage","MatCardAvatar","CARD_DIRECTIVES","MatCardModule","NgModule","imports","MatCommonModule","CommonModule","declarations","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/material/core')) :\n    typeof define === 'function' && define.amd ? define('@angular/material-experimental/mdc-card', ['exports', '@angular/core', '@angular/common', '@angular/material/core'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.materialExperimental = global.ng.materialExperimental || {}, global.ng.materialExperimental.mdcCard = {}), global.ng.core, global.ng.common, global.ng.material.core));\n}(this, (function (exports, core, common, core$1) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Material Design card component. Cards contain content and actions about a single subject.\n     * See https://material.io/design/components/cards.html\n     *\n     * MatCard provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCard = /** @class */ (function () {\n        function MatCard() {\n        }\n        MatCard.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'mat-card',\n                        template: \"<ng-content></ng-content>\\n\",\n                        host: { 'class': 'mat-mdc-card mdc-card' },\n                        exportAs: 'matCard',\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;opacity:0;pointer-events:none;transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-card{border-radius:4px;border-radius:var(--mdc-shape-medium, 4px);position:relative;display:flex;flex-direction:column;box-sizing:border-box}.mdc-card .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-card--outlined{border-width:1px;border-style:solid}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__media--square::before{margin-top:100%}.mdc-card__media--16-9::before{margin-top:56.25%}.mdc-card__media-content{position:absolute;top:0;right:0;bottom:0;left:0;box-sizing:border-box}.mdc-card__primary-action{display:flex;flex-direction:column;box-sizing:border-box;position:relative;outline:none;color:inherit;text-decoration:none;cursor:pointer;overflow:hidden}.mdc-card__primary-action:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__primary-action:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mdc-card__actions--full-bleed{padding:0}.mdc-card__action-buttons,.mdc-card__action-icons{display:flex;flex-direction:row;align-items:center;box-sizing:border-box}.mdc-card__action-icons{flex-grow:1;justify-content:flex-end}.mdc-card__action-buttons+.mdc-card__action-icons{margin-left:16px;margin-right:0}[dir=rtl] .mdc-card__action-buttons+.mdc-card__action-icons,.mdc-card__action-buttons+.mdc-card__action-icons[dir=rtl]{margin-left:0;margin-right:16px}.mdc-card__action{display:inline-flex;flex-direction:row;align-items:center;box-sizing:border-box;justify-content:center;cursor:pointer;user-select:none}.mdc-card__action:focus{outline:none}.mdc-card__action--button{margin-left:0;margin-right:8px;padding:0 8px}[dir=rtl] .mdc-card__action--button,.mdc-card__action--button[dir=rtl]{margin-left:8px;margin-right:0}.mdc-card__action--button:last-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-card__action--button:last-child,.mdc-card__action--button:last-child[dir=rtl]{margin-left:0;margin-right:0}.mdc-card__actions--full-bleed .mdc-card__action--button{justify-content:space-between;width:100%;height:auto;max-height:none;margin:0;padding:8px 16px;text-align:left}[dir=rtl] .mdc-card__actions--full-bleed .mdc-card__action--button,.mdc-card__actions--full-bleed .mdc-card__action--button[dir=rtl]{text-align:right}.mdc-card__action--icon{margin:-6px 0;padding:12px}.cdk-high-contrast-active .mat-mdc-card{outline:solid 1px}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-header .mat-mdc-card-subtitle{margin-top:-8px;margin-bottom:16px}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;padding:16px 16px 0}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}\\n\"]\n                    },] }\n        ];\n        return MatCard;\n    }());\n    // TODO(jelbourn): add `MatActionCard`, which is a card that acts like a button (and has a ripple).\n    // Supported in MDC with `.mdc-card__primary-action`. Will require additional a11y docs for users.\n    /**\n     * Title of a card, intended for use within `<mat-card>`. This component is an optional\n     * convenience for one variety of card title; any custom title element may be used in its place.\n     *\n     * MatCardTitle provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCardTitle = /** @class */ (function () {\n        function MatCardTitle() {\n        }\n        MatCardTitle.decorators = [\n            { type: core.Directive, args: [{\n                        selector: \"mat-card-title, [mat-card-title], [matCardTitle]\",\n                        host: { 'class': 'mat-mdc-card-title' }\n                    },] }\n        ];\n        return MatCardTitle;\n    }());\n    /**\n     * Container intended to be used within the `<mat-card>` component. Can contain exactly one\n     * `<mat-card-title>`, one `<mat-card-subtitle>` and one content image of any size\n     * (e.g. `<img matCardLgImage>`).\n     */\n    var MatCardTitleGroup = /** @class */ (function () {\n        function MatCardTitleGroup() {\n        }\n        MatCardTitleGroup.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'mat-card-title-group',\n                        template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        host: { 'class': 'mat-mdc-card-title-group' }\n                    },] }\n        ];\n        return MatCardTitleGroup;\n    }());\n    /**\n     * Content of a card, intended for use within `<mat-card>`. This component is an optional\n     * convenience for use with other convenience elements, such as `<mat-card-title>`; any custom\n     * content block element may be used in its place.\n     *\n     * MatCardContent provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCardContent = /** @class */ (function () {\n        function MatCardContent() {\n        }\n        MatCardContent.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'mat-card-content',\n                        host: { 'class': 'mat-mdc-card-content' }\n                    },] }\n        ];\n        return MatCardContent;\n    }());\n    /**\n     * Sub-title of a card, intended for use within `<mat-card>` beneath a `<mat-card-title>`. This\n     * component is an optional convenience for use with other convenience elements, such as\n     * `<mat-card-title>`.\n     *\n     * MatCardSubtitle provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCardSubtitle = /** @class */ (function () {\n        function MatCardSubtitle() {\n        }\n        MatCardSubtitle.decorators = [\n            { type: core.Directive, args: [{\n                        selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\",\n                        host: { 'class': 'mat-mdc-card-subtitle' }\n                    },] }\n        ];\n        return MatCardSubtitle;\n    }());\n    /**\n     * Bottom area of a card that contains action buttons, intended for use within `<mat-card>`.\n     * This component is an optional convenience for use with other convenience elements, such as\n     * `<mat-card-content>`; any custom action block element may be used in its place.\n     *\n     * MatCardActions provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCardActions = /** @class */ (function () {\n        function MatCardActions() {\n            // TODO(jelbourn): deprecate `align` in favor of `actionPositon` or `actionAlignment`\n            // as to not conflict with the native `align` attribute.\n            /** Position of the actions inside the card. */\n            this.align = 'start';\n            // TODO(jelbourn): support `.mdc-card__actions--full-bleed`.\n            // TODO(jelbourn): support  `.mdc-card__action-buttons` and `.mdc-card__action-icons`.\n            // TODO(jelbourn): figure out how to use `.mdc-card__action`, `.mdc-card__action--button`, and\n            // `mdc-card__action--icon`. They're used primarily for positioning, which we might be able to\n            // do implicitly.\n        }\n        MatCardActions.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'mat-card-actions',\n                        exportAs: 'matCardActions',\n                        host: {\n                            'class': 'mat-mdc-card-actions mdc-card__actions',\n                            '[class.mat-mdc-card-actions-align-end]': 'align === \"end\"',\n                        }\n                    },] }\n        ];\n        MatCardActions.propDecorators = {\n            align: [{ type: core.Input }]\n        };\n        return MatCardActions;\n    }());\n    /**\n     * Header region of a card, intended for use within `<mat-card>`. This header captures\n     * a card title, subtitle, and avatar.  This component is an optional convenience for use with\n     * other convenience elements, such as `<mat-card-footer>`; any custom header block element may be\n     * used in its place.\n     *\n     * MatCardHeader provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCardHeader = /** @class */ (function () {\n        function MatCardHeader() {\n        }\n        MatCardHeader.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'mat-card-header',\n                        template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-mdc-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        host: { 'class': 'mat-mdc-card-header' }\n                    },] }\n        ];\n        return MatCardHeader;\n    }());\n    /**\n     * Footer area a card, intended for use within `<mat-card>`.\n     * This component is an optional convenience for use with other convenience elements, such as\n     * `<mat-card-content>`; any custom footer block element may be used in its place.\n     *\n     * MatCardFooter provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCardFooter = /** @class */ (function () {\n        function MatCardFooter() {\n        }\n        MatCardFooter.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'mat-card-footer',\n                        host: { 'class': 'mat-mdc-card-footer' }\n                    },] }\n        ];\n        return MatCardFooter;\n    }());\n    // TODO(jelbourn): deprecate the \"image\" selectors to replace with \"media\".\n    // TODO(jelbourn): support `.mdc-card__media-content`.\n    /**\n     * Primary image content for a card, intended for use within `<mat-card>`. Can be applied to\n     * any media element, such as `<img>` or `<picture>`.\n     *\n     * This component is an optional convenience for use with other convenience elements, such as\n     * `<mat-card-content>`; any custom media element may be used in its place.\n     *\n     * MatCardImage provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCardImage = /** @class */ (function () {\n        function MatCardImage() {\n        }\n        MatCardImage.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-card-image], [matCardImage]',\n                        host: { 'class': 'mat-mdc-card-image mdc-card__media' }\n                    },] }\n        ];\n        return MatCardImage;\n    }());\n    /** Same as `MatCardImage`, but small. */\n    var MatCardSmImage = /** @class */ (function () {\n        function MatCardSmImage() {\n        }\n        MatCardSmImage.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-card-sm-image], [matCardImageSmall]',\n                        host: { 'class': 'mat-mdc-card-sm-image mdc-card__media' }\n                    },] }\n        ];\n        return MatCardSmImage;\n    }());\n    /** Same as `MatCardImage`, but medium. */\n    var MatCardMdImage = /** @class */ (function () {\n        function MatCardMdImage() {\n        }\n        MatCardMdImage.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-card-md-image], [matCardImageMedium]',\n                        host: { 'class': 'mat-mdc-card-md-image mdc-card__media' }\n                    },] }\n        ];\n        return MatCardMdImage;\n    }());\n    /** Same as `MatCardImage`, but large. */\n    var MatCardLgImage = /** @class */ (function () {\n        function MatCardLgImage() {\n        }\n        MatCardLgImage.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-card-lg-image], [matCardImageLarge]',\n                        host: { 'class': 'mat-mdc-card-lg-image mdc-card__media' }\n                    },] }\n        ];\n        return MatCardLgImage;\n    }());\n    /** Same as `MatCardImage`, but extra-large. */\n    var MatCardXlImage = /** @class */ (function () {\n        function MatCardXlImage() {\n        }\n        MatCardXlImage.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                        host: { 'class': 'mat-mdc-card-xl-image mdc-card__media' }\n                    },] }\n        ];\n        return MatCardXlImage;\n    }());\n    /**\n     * Avatar image content for a card, intended for use within `<mat-card>`. Can be applied to\n     * any media element, such as `<img>` or `<picture>`.\n     *\n     * This component is an optional convenience for use with other convenience elements, such as\n     * `<mat-card-title>`; any custom media element may be used in its place.\n     *\n     * MatCardAvatar provides no behaviors, instead serving as a purely visual treatment.\n     */\n    var MatCardAvatar = /** @class */ (function () {\n        function MatCardAvatar() {\n        }\n        MatCardAvatar.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-card-avatar], [matCardAvatar]',\n                        host: { 'class': 'mat-mdc-card-avatar' }\n                    },] }\n        ];\n        return MatCardAvatar;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CARD_DIRECTIVES = [\n        MatCard,\n        MatCardActions,\n        MatCardAvatar,\n        MatCardContent,\n        MatCardFooter,\n        MatCardHeader,\n        MatCardImage,\n        MatCardLgImage,\n        MatCardMdImage,\n        MatCardSmImage,\n        MatCardSubtitle,\n        MatCardTitle,\n        MatCardTitleGroup,\n        MatCardXlImage\n    ];\n    var MatCardModule = /** @class */ (function () {\n        function MatCardModule() {\n        }\n        MatCardModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [core$1.MatCommonModule, common.CommonModule],\n                        exports: [CARD_DIRECTIVES, core$1.MatCommonModule],\n                        declarations: CARD_DIRECTIVES,\n                    },] }\n        ];\n        return MatCardModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.MatCard = MatCard;\n    exports.MatCardActions = MatCardActions;\n    exports.MatCardAvatar = MatCardAvatar;\n    exports.MatCardContent = MatCardContent;\n    exports.MatCardFooter = MatCardFooter;\n    exports.MatCardHeader = MatCardHeader;\n    exports.MatCardImage = MatCardImage;\n    exports.MatCardLgImage = MatCardLgImage;\n    exports.MatCardMdImage = MatCardMdImage;\n    exports.MatCardModule = MatCardModule;\n    exports.MatCardSmImage = MatCardSmImage;\n    exports.MatCardSubtitle = MatCardSubtitle;\n    exports.MatCardTitle = MatCardTitle;\n    exports.MatCardTitleGroup = MatCardTitleGroup;\n    exports.MatCardXlImage = MatCardXlImage;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-experimental-mdc-card.umd.js.map\n"]}