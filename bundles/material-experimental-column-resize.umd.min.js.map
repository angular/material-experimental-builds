{"version":3,"sources":["src/material-experimental/material-experimental-column-resize.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","materialExperimental","columnResize","core","cdk","bidi","cdkExperimental","common","overlay","table","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","MatFlexTableResizeStrategy","_super","document","getColumnCssClass","cssFriendlyColumnName","decorators","type","Injectable","ctorParameters","ColumnResize","undefined","Inject","args","DOCUMENT","CdkFlexTableResizeStrategy","FLEX_RESIZE_STRATEGY_PROVIDER","provide","ResizeStrategy","useClass","PROVIDERS","ColumnResizeNotifier","HeaderRowEventDispatcher","ColumnResizeNotifierSource","TABLE_PROVIDERS","TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER","FLEX_PROVIDERS","HOST_BINDINGS","[class.mat-column-resize-rtl]","TABLE_HOST_BINDINGS","class","FLEX_HOST_BINDINGS","AbstractMatColumnResize","getTableHeight","elementRef","nativeElement","offsetHeight","MatColumnResize","columnResizeNotifier","directionality","eventDispatcher","ngZone","notifier","_this","Directive","selector","host","providers","useExisting","Directionality","ElementRef","NgZone","MatColumnResizeFlex","MatDefaultEnabledColumnResize","MatDefaultEnabledColumnResizeFlex","MatColumnResizeOverlayHandle","columnDef","resizeNotifier","resizeRef","updateResizeActive","active","overlayRef","updateSize","height","origin","Component","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","template","CdkColumnDef","ResizeRef","ResizeOverlayHandle","AbstractMatResizable","minWidthPxInternal","getInlineHandleCssClassName","getOverlayHandleComponentType","Resizable","RESIZABLE_HOST_BINDINGS","RESIZABLE_INPUTS","MatDefaultResizable","injector","resizeStrategy","viewContainerRef","inputs","Injector","Overlay","ViewContainerRef","MatResizable","ENTRY_COMMON_COMPONENTS","MatColumnResizeCommonModule","NgModule","declarations","entryComponents","IMPORTS","OverlayModule","MatDefaultEnabledColumnResizeModule","imports","MatColumnResizeModule","defineProperty","enumerable","get","ɵangular_material_src_material_experimental_column_resize_column_resize_a","ɵangular_material_src_material_experimental_column_resize_column_resize_b","ɵangular_material_src_material_experimental_column_resize_column_resize_c","ɵangular_material_src_material_experimental_column_resize_column_resize_d","ɵangular_material_src_material_experimental_column_resize_column_resize_e","ɵangular_material_src_material_experimental_column_resize_column_resize_f","ɵangular_material_src_material_experimental_column_resize_column_resize_g","ɵangular_material_src_material_experimental_column_resize_column_resize_h"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/cdk/bidi'), require('@angular/cdk-experimental/column-resize'), require('@angular/common'), require('@angular/cdk/overlay'), require('@angular/cdk/table')) :\n    typeof define === 'function' && define.amd ? define('@angular/material-experimental/column-resize', ['exports', '@angular/core', '@angular/cdk/bidi', '@angular/cdk-experimental/column-resize', '@angular/common', '@angular/cdk/overlay', '@angular/cdk/table'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.materialExperimental = global.ng.materialExperimental || {}, global.ng.materialExperimental.columnResize = {}), global.ng.core, global.ng.cdk.bidi, global.ng.cdkExperimental.columnResize, global.ng.common, global.ng.cdk.overlay, global.ng.cdk.table));\n}(this, (function (exports, core, bidi, columnResize, common, overlay, table) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Overrides CdkFlexTableResizeStrategy to match mat-column elements.\n     */\n    var MatFlexTableResizeStrategy = /** @class */ (function (_super) {\n        __extends(MatFlexTableResizeStrategy, _super);\n        function MatFlexTableResizeStrategy(columnResize, document) {\n            return _super.call(this, columnResize, document) || this;\n        }\n        MatFlexTableResizeStrategy.prototype.getColumnCssClass = function (cssFriendlyColumnName) {\n            return \"mat-column-\" + cssFriendlyColumnName;\n        };\n        MatFlexTableResizeStrategy.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        MatFlexTableResizeStrategy.ctorParameters = function () { return [\n            { type: columnResize.ColumnResize },\n            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] }\n        ]; };\n        return MatFlexTableResizeStrategy;\n    }(columnResize.CdkFlexTableResizeStrategy));\n    var FLEX_RESIZE_STRATEGY_PROVIDER = {\n        provide: columnResize.ResizeStrategy,\n        useClass: MatFlexTableResizeStrategy,\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PROVIDERS = [\n        columnResize.ColumnResizeNotifier,\n        columnResize.HeaderRowEventDispatcher,\n        columnResize.ColumnResizeNotifierSource,\n    ];\n    var TABLE_PROVIDERS = __spread(PROVIDERS, [\n        columnResize.TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER,\n    ]);\n    var FLEX_PROVIDERS = __spread(PROVIDERS, [FLEX_RESIZE_STRATEGY_PROVIDER]);\n    var HOST_BINDINGS = {\n        '[class.mat-column-resize-rtl]': 'directionality.value === \"rtl\"',\n    };\n    var TABLE_HOST_BINDINGS = __assign(__assign({}, HOST_BINDINGS), { 'class': 'mat-column-resize-table' });\n    var FLEX_HOST_BINDINGS = __assign(__assign({}, HOST_BINDINGS), { 'class': 'mat-column-resize-flex' });\n    var AbstractMatColumnResize = /** @class */ (function (_super) {\n        __extends(AbstractMatColumnResize, _super);\n        function AbstractMatColumnResize() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        AbstractMatColumnResize.prototype.getTableHeight = function () {\n            return this.elementRef.nativeElement.offsetHeight;\n        };\n        return AbstractMatColumnResize;\n    }(columnResize.ColumnResize));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Explicitly enables column resizing for a table-based mat-table.\n     * Individual columns must be annotated specifically.\n     */\n    var MatColumnResize = /** @class */ (function (_super) {\n        __extends(MatColumnResize, _super);\n        function MatColumnResize(columnResizeNotifier, directionality, elementRef, eventDispatcher, ngZone, notifier) {\n            var _this = _super.call(this) || this;\n            _this.columnResizeNotifier = columnResizeNotifier;\n            _this.directionality = directionality;\n            _this.elementRef = elementRef;\n            _this.eventDispatcher = eventDispatcher;\n            _this.ngZone = ngZone;\n            _this.notifier = notifier;\n            return _this;\n        }\n        MatColumnResize.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'table[mat-table][columnResize]',\n                        host: TABLE_HOST_BINDINGS,\n                        providers: __spread(TABLE_PROVIDERS, [\n                            { provide: columnResize.ColumnResize, useExisting: MatColumnResize },\n                        ]),\n                    },] }\n        ];\n        /** @nocollapse */\n        MatColumnResize.ctorParameters = function () { return [\n            { type: columnResize.ColumnResizeNotifier },\n            { type: bidi.Directionality },\n            { type: core.ElementRef },\n            { type: columnResize.HeaderRowEventDispatcher },\n            { type: core.NgZone },\n            { type: columnResize.ColumnResizeNotifierSource }\n        ]; };\n        return MatColumnResize;\n    }(AbstractMatColumnResize));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Explicitly enables column resizing for a flexbox-based mat-table.\n     * Individual columns must be annotated specifically.\n     */\n    var MatColumnResizeFlex = /** @class */ (function (_super) {\n        __extends(MatColumnResizeFlex, _super);\n        function MatColumnResizeFlex(columnResizeNotifier, directionality, elementRef, eventDispatcher, ngZone, notifier) {\n            var _this = _super.call(this) || this;\n            _this.columnResizeNotifier = columnResizeNotifier;\n            _this.directionality = directionality;\n            _this.elementRef = elementRef;\n            _this.eventDispatcher = eventDispatcher;\n            _this.ngZone = ngZone;\n            _this.notifier = notifier;\n            return _this;\n        }\n        MatColumnResizeFlex.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'mat-table[columnResize]',\n                        host: FLEX_HOST_BINDINGS,\n                        providers: __spread(FLEX_PROVIDERS, [\n                            { provide: columnResize.ColumnResize, useExisting: MatColumnResizeFlex },\n                        ]),\n                    },] }\n        ];\n        /** @nocollapse */\n        MatColumnResizeFlex.ctorParameters = function () { return [\n            { type: columnResize.ColumnResizeNotifier },\n            { type: bidi.Directionality },\n            { type: core.ElementRef },\n            { type: columnResize.HeaderRowEventDispatcher },\n            { type: core.NgZone },\n            { type: columnResize.ColumnResizeNotifierSource }\n        ]; };\n        return MatColumnResizeFlex;\n    }(AbstractMatColumnResize));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Implicitly enables column resizing for a table-based mat-table.\n     * Individual columns will be resizable unless opted out.\n     */\n    var MatDefaultEnabledColumnResize = /** @class */ (function (_super) {\n        __extends(MatDefaultEnabledColumnResize, _super);\n        function MatDefaultEnabledColumnResize(columnResizeNotifier, directionality, elementRef, eventDispatcher, ngZone, notifier) {\n            var _this = _super.call(this) || this;\n            _this.columnResizeNotifier = columnResizeNotifier;\n            _this.directionality = directionality;\n            _this.elementRef = elementRef;\n            _this.eventDispatcher = eventDispatcher;\n            _this.ngZone = ngZone;\n            _this.notifier = notifier;\n            return _this;\n        }\n        MatDefaultEnabledColumnResize.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'table[mat-table]',\n                        host: TABLE_HOST_BINDINGS,\n                        providers: __spread(TABLE_PROVIDERS, [\n                            { provide: columnResize.ColumnResize, useExisting: MatDefaultEnabledColumnResize },\n                        ]),\n                    },] }\n        ];\n        /** @nocollapse */\n        MatDefaultEnabledColumnResize.ctorParameters = function () { return [\n            { type: columnResize.ColumnResizeNotifier },\n            { type: bidi.Directionality },\n            { type: core.ElementRef },\n            { type: columnResize.HeaderRowEventDispatcher },\n            { type: core.NgZone },\n            { type: columnResize.ColumnResizeNotifierSource }\n        ]; };\n        return MatDefaultEnabledColumnResize;\n    }(AbstractMatColumnResize));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Implicitly enables column resizing for a flexbox-based mat-table.\n     * Individual columns will be resizable unless opted out.\n     */\n    var MatDefaultEnabledColumnResizeFlex = /** @class */ (function (_super) {\n        __extends(MatDefaultEnabledColumnResizeFlex, _super);\n        function MatDefaultEnabledColumnResizeFlex(columnResizeNotifier, directionality, elementRef, eventDispatcher, ngZone, notifier) {\n            var _this = _super.call(this) || this;\n            _this.columnResizeNotifier = columnResizeNotifier;\n            _this.directionality = directionality;\n            _this.elementRef = elementRef;\n            _this.eventDispatcher = eventDispatcher;\n            _this.ngZone = ngZone;\n            _this.notifier = notifier;\n            return _this;\n        }\n        MatDefaultEnabledColumnResizeFlex.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'mat-table',\n                        host: FLEX_HOST_BINDINGS,\n                        providers: __spread(FLEX_PROVIDERS, [\n                            { provide: columnResize.ColumnResize, useExisting: MatDefaultEnabledColumnResizeFlex },\n                        ]),\n                    },] }\n        ];\n        /** @nocollapse */\n        MatDefaultEnabledColumnResizeFlex.ctorParameters = function () { return [\n            { type: columnResize.ColumnResizeNotifier },\n            { type: bidi.Directionality },\n            { type: core.ElementRef },\n            { type: columnResize.HeaderRowEventDispatcher },\n            { type: core.NgZone },\n            { type: columnResize.ColumnResizeNotifierSource }\n        ]; };\n        return MatDefaultEnabledColumnResizeFlex;\n    }(AbstractMatColumnResize));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Component shown over the edge of a resizable column that is responsible\n     * for handling column resize mouse events and displaying a vertical line along the column edge.\n     */\n    var MatColumnResizeOverlayHandle = /** @class */ (function (_super) {\n        __extends(MatColumnResizeOverlayHandle, _super);\n        function MatColumnResizeOverlayHandle(columnDef, columnResize, directionality, elementRef, eventDispatcher, ngZone, resizeNotifier, resizeRef, document) {\n            var _this = _super.call(this) || this;\n            _this.columnDef = columnDef;\n            _this.columnResize = columnResize;\n            _this.directionality = directionality;\n            _this.elementRef = elementRef;\n            _this.eventDispatcher = eventDispatcher;\n            _this.ngZone = ngZone;\n            _this.resizeNotifier = resizeNotifier;\n            _this.resizeRef = resizeRef;\n            _this.document = document;\n            return _this;\n        }\n        MatColumnResizeOverlayHandle.prototype.updateResizeActive = function (active) {\n            _super.prototype.updateResizeActive.call(this, active);\n            this.resizeRef.overlayRef.updateSize({\n                height: active ?\n                    this.columnResize.getTableHeight() :\n                    this.resizeRef.origin.nativeElement.offsetHeight\n            });\n        };\n        MatColumnResizeOverlayHandle.decorators = [\n            { type: core.Component, args: [{\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        encapsulation: core.ViewEncapsulation.None,\n                        host: { 'class': 'mat-column-resize-overlay-thumb' },\n                        template: ''\n                    }] }\n        ];\n        /** @nocollapse */\n        MatColumnResizeOverlayHandle.ctorParameters = function () { return [\n            { type: table.CdkColumnDef },\n            { type: columnResize.ColumnResize },\n            { type: bidi.Directionality },\n            { type: core.ElementRef },\n            { type: columnResize.HeaderRowEventDispatcher },\n            { type: core.NgZone },\n            { type: columnResize.ColumnResizeNotifierSource },\n            { type: columnResize.ResizeRef },\n            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] }\n        ]; };\n        return MatColumnResizeOverlayHandle;\n    }(columnResize.ResizeOverlayHandle));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var AbstractMatResizable = /** @class */ (function (_super) {\n        __extends(AbstractMatResizable, _super);\n        function AbstractMatResizable() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.minWidthPxInternal = 32;\n            return _this;\n        }\n        AbstractMatResizable.prototype.getInlineHandleCssClassName = function () {\n            return 'mat-resizable-handle';\n        };\n        AbstractMatResizable.prototype.getOverlayHandleComponentType = function () {\n            return MatColumnResizeOverlayHandle;\n        };\n        return AbstractMatResizable;\n    }(columnResize.Resizable));\n    var RESIZABLE_HOST_BINDINGS = {\n        'class': 'mat-resizable',\n    };\n    var RESIZABLE_INPUTS = [\n        'minWidthPx: matResizableMinWidthPx',\n        'maxWidthPx: matResizableMaxWidthPx',\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Implicitly enables column resizing for a mat-header-cell unless the disableResize attribute\n     * is present.\n     */\n    var MatDefaultResizable = /** @class */ (function (_super) {\n        __extends(MatDefaultResizable, _super);\n        function MatDefaultResizable(columnDef, columnResize, directionality, document, elementRef, eventDispatcher, injector, ngZone, overlay, resizeNotifier, resizeStrategy, viewContainerRef) {\n            var _this = _super.call(this) || this;\n            _this.columnDef = columnDef;\n            _this.columnResize = columnResize;\n            _this.directionality = directionality;\n            _this.elementRef = elementRef;\n            _this.eventDispatcher = eventDispatcher;\n            _this.injector = injector;\n            _this.ngZone = ngZone;\n            _this.overlay = overlay;\n            _this.resizeNotifier = resizeNotifier;\n            _this.resizeStrategy = resizeStrategy;\n            _this.viewContainerRef = viewContainerRef;\n            _this.document = document;\n            return _this;\n        }\n        MatDefaultResizable.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'mat-header-cell:not([disableResize]), th[mat-header-cell]:not([disableResize])',\n                        host: RESIZABLE_HOST_BINDINGS,\n                        inputs: RESIZABLE_INPUTS,\n                    },] }\n        ];\n        /** @nocollapse */\n        MatDefaultResizable.ctorParameters = function () { return [\n            { type: table.CdkColumnDef },\n            { type: columnResize.ColumnResize },\n            { type: bidi.Directionality },\n            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] },\n            { type: core.ElementRef },\n            { type: columnResize.HeaderRowEventDispatcher },\n            { type: core.Injector },\n            { type: core.NgZone },\n            { type: overlay.Overlay },\n            { type: columnResize.ColumnResizeNotifierSource },\n            { type: columnResize.ResizeStrategy },\n            { type: core.ViewContainerRef }\n        ]; };\n        return MatDefaultResizable;\n    }(AbstractMatResizable));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Explicitly enables column resizing for a mat-header-cell.\n     */\n    var MatResizable = /** @class */ (function (_super) {\n        __extends(MatResizable, _super);\n        function MatResizable(columnDef, columnResize, directionality, document, elementRef, eventDispatcher, injector, ngZone, overlay, resizeNotifier, resizeStrategy, viewContainerRef) {\n            var _this = _super.call(this) || this;\n            _this.columnDef = columnDef;\n            _this.columnResize = columnResize;\n            _this.directionality = directionality;\n            _this.elementRef = elementRef;\n            _this.eventDispatcher = eventDispatcher;\n            _this.injector = injector;\n            _this.ngZone = ngZone;\n            _this.overlay = overlay;\n            _this.resizeNotifier = resizeNotifier;\n            _this.resizeStrategy = resizeStrategy;\n            _this.viewContainerRef = viewContainerRef;\n            _this.document = document;\n            return _this;\n        }\n        MatResizable.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'mat-header-cell[resizable], th[mat-header-cell][resizable]',\n                        host: RESIZABLE_HOST_BINDINGS,\n                        inputs: RESIZABLE_INPUTS,\n                    },] }\n        ];\n        /** @nocollapse */\n        MatResizable.ctorParameters = function () { return [\n            { type: table.CdkColumnDef },\n            { type: columnResize.ColumnResize },\n            { type: bidi.Directionality },\n            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] },\n            { type: core.ElementRef },\n            { type: columnResize.HeaderRowEventDispatcher },\n            { type: core.Injector },\n            { type: core.NgZone },\n            { type: overlay.Overlay },\n            { type: columnResize.ColumnResizeNotifierSource },\n            { type: columnResize.ResizeStrategy },\n            { type: core.ViewContainerRef }\n        ]; };\n        return MatResizable;\n    }(AbstractMatResizable));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ENTRY_COMMON_COMPONENTS = [\n        MatColumnResizeOverlayHandle,\n    ];\n    var MatColumnResizeCommonModule = /** @class */ (function () {\n        function MatColumnResizeCommonModule() {\n        }\n        MatColumnResizeCommonModule.decorators = [\n            { type: core.NgModule, args: [{\n                        declarations: ENTRY_COMMON_COMPONENTS,\n                        exports: ENTRY_COMMON_COMPONENTS,\n                        entryComponents: ENTRY_COMMON_COMPONENTS,\n                    },] }\n        ];\n        return MatColumnResizeCommonModule;\n    }());\n    var IMPORTS = [\n        overlay.OverlayModule,\n        MatColumnResizeCommonModule,\n    ];\n    var MatDefaultEnabledColumnResizeModule = /** @class */ (function () {\n        function MatDefaultEnabledColumnResizeModule() {\n        }\n        MatDefaultEnabledColumnResizeModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: IMPORTS,\n                        declarations: [\n                            MatDefaultEnabledColumnResize,\n                            MatDefaultEnabledColumnResizeFlex,\n                            MatDefaultResizable,\n                        ],\n                        exports: [\n                            MatDefaultEnabledColumnResize,\n                            MatDefaultEnabledColumnResizeFlex,\n                            MatDefaultResizable,\n                        ],\n                    },] }\n        ];\n        return MatDefaultEnabledColumnResizeModule;\n    }());\n    var MatColumnResizeModule = /** @class */ (function () {\n        function MatColumnResizeModule() {\n        }\n        MatColumnResizeModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: IMPORTS,\n                        declarations: [\n                            MatColumnResize,\n                            MatColumnResizeFlex,\n                            MatResizable,\n                        ],\n                        exports: [\n                            MatColumnResize,\n                            MatColumnResizeFlex,\n                            MatResizable,\n                        ],\n                    },] }\n        ];\n        return MatColumnResizeModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    Object.defineProperty(exports, 'TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER', {\n        enumerable: true,\n        get: function () {\n            return columnResize.TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER;\n        }\n    });\n    exports.FLEX_RESIZE_STRATEGY_PROVIDER = FLEX_RESIZE_STRATEGY_PROVIDER;\n    exports.MatColumnResize = MatColumnResize;\n    exports.MatColumnResizeCommonModule = MatColumnResizeCommonModule;\n    exports.MatColumnResizeFlex = MatColumnResizeFlex;\n    exports.MatColumnResizeModule = MatColumnResizeModule;\n    exports.MatColumnResizeOverlayHandle = MatColumnResizeOverlayHandle;\n    exports.MatDefaultEnabledColumnResize = MatDefaultEnabledColumnResize;\n    exports.MatDefaultEnabledColumnResizeFlex = MatDefaultEnabledColumnResizeFlex;\n    exports.MatDefaultEnabledColumnResizeModule = MatDefaultEnabledColumnResizeModule;\n    exports.MatDefaultResizable = MatDefaultResizable;\n    exports.MatFlexTableResizeStrategy = MatFlexTableResizeStrategy;\n    exports.MatResizable = MatResizable;\n    exports.ɵangular_material_src_material_experimental_column_resize_column_resize_a = TABLE_PROVIDERS;\n    exports.ɵangular_material_src_material_experimental_column_resize_column_resize_b = FLEX_PROVIDERS;\n    exports.ɵangular_material_src_material_experimental_column_resize_column_resize_c = TABLE_HOST_BINDINGS;\n    exports.ɵangular_material_src_material_experimental_column_resize_column_resize_d = FLEX_HOST_BINDINGS;\n    exports.ɵangular_material_src_material_experimental_column_resize_column_resize_e = AbstractMatColumnResize;\n    exports.ɵangular_material_src_material_experimental_column_resize_column_resize_f = AbstractMatResizable;\n    exports.ɵangular_material_src_material_experimental_column_resize_column_resize_g = RESIZABLE_HOST_BINDINGS;\n    exports.ɵangular_material_src_material_experimental_column_resize_column_resize_h = RESIZABLE_INPUTS;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-experimental-column-resize.umd.js.map\n"]}