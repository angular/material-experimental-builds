{"version":3,"sources":["src/material-experimental/material-experimental-mdc-chips-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","materialExperimental","mdcChips","testing","cdk","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","adopt","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","MatChipInputHarness","_super","arguments","with","options","HarnessPredicate","isDisabled","_a","host","getAttribute","getPlaceholder","hostSelector","ComponentHarness","MatChipHarness","getText","text","MatChipRowHarness","MatChipGridHarness","_this","_rows","locatorForAll","_input","locatorFor","getRows","getTextInput","MatChipOptionHarness","isSelected","MatChipListboxHarness","_options","getOptions","getSelected","all","map","o","isSelectedStates","selectedOptions","forEach","isSelectedOption","index","MatChipSetHarness","_chips","getChips","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/testing')) :\n    typeof define === 'function' && define.amd ? define('@angular/material-experimental/mdc-chips/testing', ['exports', '@angular/cdk/testing'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.materialExperimental = global.ng.materialExperimental || {}, global.ng.materialExperimental.mdcChips = global.ng.materialExperimental.mdcChips || {}, global.ng.materialExperimental.mdcChips.testing = {}), global.ng.cdk.testing));\n}(this, (function (exports, testing) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    const __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n    }\r\n\r\n    function __values(o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    const __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\r\n\r\n    function __classPrivateFieldGet(receiver, privateMap) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to get private field on non-instance\");\r\n        }\r\n        return privateMap.get(receiver);\r\n    }\r\n\r\n    function __classPrivateFieldSet(receiver, privateMap, value) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to set private field on non-instance\");\r\n        }\r\n        privateMap.set(receiver, value);\r\n        return value;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Harness for interacting with a grid's chip input in tests. */\n    var MatChipInputHarness = /** @class */ (function (_super) {\n        __extends(MatChipInputHarness, _super);\n        function MatChipInputHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a chip input with specific attributes.\n         */\n        MatChipInputHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatChipInputHarness, options);\n        };\n        /** Gets a promise for the disabled state. */\n        MatChipInputHarness.prototype.isDisabled = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [4 /*yield*/, ((_a.sent()).getAttribute('disabled'))];\n                        case 2: return [2 /*return*/, (_a.sent()) === 'true'];\n                    }\n                });\n            });\n        };\n        /** Gets a promise for the placeholder text. */\n        MatChipInputHarness.prototype.getPlaceholder = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).getAttribute('placeholder')];\n                    }\n                });\n            });\n        };\n        MatChipInputHarness.hostSelector = '.mat-mdc-chip-input';\n        return MatChipInputHarness;\n    }(testing.ComponentHarness));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Harness for interacting with a mat-chip in tests. */\n    var MatChipHarness = /** @class */ (function (_super) {\n        __extends(MatChipHarness, _super);\n        function MatChipHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a chip with specific attributes.\n         */\n        // Note(mmalerba): generics are used as a workaround for lack of polymorphic `this` in static\n        // methods. See https://github.com/microsoft/TypeScript/issues/5863\n        MatChipHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatChipHarness, options);\n        };\n        /** Gets a promise for the text content the option. */\n        MatChipHarness.prototype.getText = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [2 /*return*/, (_a.sent()).text()];\n                    }\n                });\n            });\n        };\n        MatChipHarness.hostSelector = 'mat-basic-chip, mat-chip';\n        return MatChipHarness;\n    }(testing.ComponentHarness));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Harness for interacting with a mat-chip-row in tests. */\n    var MatChipRowHarness = /** @class */ (function (_super) {\n        __extends(MatChipRowHarness, _super);\n        function MatChipRowHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a chip row with specific attributes.\n         */\n        // Note(mmalerba): generics are used as a workaround for lack of polymorphic `this` in static\n        // methods. See https://github.com/microsoft/TypeScript/issues/5863\n        MatChipRowHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatChipRowHarness, options);\n        };\n        MatChipRowHarness.hostSelector = 'mat-chip-row, mat-basic-chip-row';\n        return MatChipRowHarness;\n    }(MatChipHarness));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Harness for interacting with a mat-chip-grid in tests. */\n    var MatChipGridHarness = /** @class */ (function (_super) {\n        __extends(MatChipGridHarness, _super);\n        function MatChipGridHarness() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._rows = _this.locatorForAll(MatChipRowHarness);\n            _this._input = _this.locatorFor(MatChipInputHarness);\n            return _this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a chip grid with specific attributes.\n         */\n        MatChipGridHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatChipGridHarness, options);\n        };\n        /** Gets promise of the harnesses for the chip rows. */\n        MatChipGridHarness.prototype.getRows = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._rows()];\n                        case 1: return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        /** Gets promise of the chip text input harness. */\n        MatChipGridHarness.prototype.getTextInput = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._input()];\n                        case 1: return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        MatChipGridHarness.hostSelector = 'mat-chip-grid';\n        return MatChipGridHarness;\n    }(testing.ComponentHarness));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Harness for interacting with a mat-chip-option in tests. */\n    var MatChipOptionHarness = /** @class */ (function (_super) {\n        __extends(MatChipOptionHarness, _super);\n        function MatChipOptionHarness() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a chip option with specific\n         * attributes.\n         */\n        // Note(mmalerba): generics are used as a workaround for lack of polymorphic `this` in static\n        // methods. See https://github.com/microsoft/TypeScript/issues/5863\n        MatChipOptionHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatChipOptionHarness, options);\n        };\n        /** Gets a promise for the selected state. */\n        MatChipOptionHarness.prototype.isSelected = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [4 /*yield*/, ((_a.sent()).getAttribute('aria-selected'))];\n                        case 2: return [2 /*return*/, (_a.sent()) === 'true'];\n                    }\n                });\n            });\n        };\n        /** Gets a promise for the disabled state. */\n        MatChipOptionHarness.prototype.isDisabled = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.host()];\n                        case 1: return [4 /*yield*/, ((_a.sent()).getAttribute('aria-disabled'))];\n                        case 2: return [2 /*return*/, (_a.sent()) === 'true'];\n                    }\n                });\n            });\n        };\n        MatChipOptionHarness.hostSelector = 'mat-basic-chip-option, mat-chip-option';\n        return MatChipOptionHarness;\n    }(MatChipHarness));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Harness for interacting with a mat-chip-listbox in tests. */\n    var MatChipListboxHarness = /** @class */ (function (_super) {\n        __extends(MatChipListboxHarness, _super);\n        function MatChipListboxHarness() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._options = _this.locatorForAll(MatChipOptionHarness);\n            return _this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a chip listbox with specific\n         * attributes.\n         */\n        MatChipListboxHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatChipListboxHarness, options);\n        };\n        /** Gets promise of the harnesses for the chip options in the listbox. */\n        MatChipListboxHarness.prototype.getOptions = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._options()];\n                        case 1: return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        /** Gets promise of the selected options. */\n        MatChipListboxHarness.prototype.getSelected = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var options;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._options()];\n                        case 1:\n                            options = _a.sent();\n                            return [2 /*return*/, Promise.all(options.map(function (o) { return o.isSelected(); })).then(function (isSelectedStates) {\n                                    var selectedOptions = [];\n                                    isSelectedStates.forEach(function (isSelectedOption, index) {\n                                        if (isSelectedOption) {\n                                            selectedOptions.push(options[index]);\n                                        }\n                                    });\n                                    return selectedOptions;\n                                })];\n                    }\n                });\n            });\n        };\n        MatChipListboxHarness.hostSelector = 'mat-chip-listbox';\n        return MatChipListboxHarness;\n    }(testing.ComponentHarness));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Harness for interacting with a mat-chip-set in tests. */\n    var MatChipSetHarness = /** @class */ (function (_super) {\n        __extends(MatChipSetHarness, _super);\n        function MatChipSetHarness() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._chips = _this.locatorForAll(MatChipHarness);\n            return _this;\n        }\n        /**\n         * Gets a `HarnessPredicate` that can be used to search for a chip set with specific attributes.\n         */\n        MatChipSetHarness.with = function (options) {\n            if (options === void 0) { options = {}; }\n            return new testing.HarnessPredicate(MatChipSetHarness, options);\n        };\n        /** Gets promise of the harnesses for the chips. */\n        MatChipSetHarness.prototype.getChips = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this._chips()];\n                        case 1: return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        MatChipSetHarness.hostSelector = 'mat-chip-set';\n        return MatChipSetHarness;\n    }(testing.ComponentHarness));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.MatChipGridHarness = MatChipGridHarness;\n    exports.MatChipHarness = MatChipHarness;\n    exports.MatChipInputHarness = MatChipInputHarness;\n    exports.MatChipListboxHarness = MatChipListboxHarness;\n    exports.MatChipOptionHarness = MatChipOptionHarness;\n    exports.MatChipRowHarness = MatChipRowHarness;\n    exports.MatChipSetHarness = MatChipSetHarness;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-experimental-mdc-chips-testing.umd.js.map\n"]}