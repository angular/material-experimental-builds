@use '../mdc-helpers/mdc-helpers';
@use '../../material/core/theming/theming';

@import '@material/theme/functions.import';
@import '@material/data-table/variables.import';
@import '@material/data-table/mixins.import';

@mixin color($config-or-theme) {
  $config: theming.get-color-config($config-or-theme);
  // Save original values of MDC global variables. We need to save these so we can restore the
  // variables to their original values and prevent unintended side effects from using this mixin.
  $orig-mdc-data-table-selected-row-fill-color: $mdc-data-table-selected-row-fill-color;
  $orig-mdc-data-table-divider-color: $mdc-data-table-divider-color;
  $orig-mdc-data-table-table-divider-color: $mdc-data-table-table-divider-color;
  $orig-mdc-data-table-row-hover-fill-color: $mdc-data-table-row-hover-fill-color;
  $orig-mdc-data-table-header-row-text-color: $mdc-data-table-header-row-text-color;
  $orig-mdc-data-table-row-text-color: $mdc-data-table-row-text-color;
  $orig-mdc-data-table-sort-icon-color: $mdc-data-table-sort-icon-color;
  $orig-mdc-data-table-sort-icon-active-color: $mdc-data-table-sort-icon-active-color;
  $orig-mdc-data-table-stroke-color: $mdc-data-table-stroke-color;

  @include mdc-helpers.mat-using-mdc-theme($config) {
    $mdc-data-table-selected-row-fill-color: rgba(mdc-theme-prop-value(primary), 0.04) !global;
    $mdc-data-table-divider-color: rgba(mdc-theme-prop-value(on-surface), 0.12) !global;
    $mdc-data-table-row-hover-fill-color: rgba(mdc-theme-prop-value(on-surface), 0.04) !global;
    $mdc-data-table-header-row-text-color: rgba(mdc-theme-prop-value(on-surface), 0.87) !global;
    $mdc-data-table-row-text-color: rgba(mdc-theme-prop-value(on-surface), 0.87) !global;
    $mdc-data-table-sort-icon-color: rgba(mdc-theme-prop-value(on-surface), 0.6) !global;
    $mdc-data-table-sort-icon-active-color: rgba(mdc-theme-prop-value(on-surface), 0.87) !global;
    $mdc-data-table-stroke-color: rgba(mdc-theme-prop-value(on-surface), 0.12) !global;

    @include mdc-data-table-core-styles($query: mdc-helpers.$mat-theme-styles-query);
  }

  // Restore original values of MDC global variables.
  $mdc-data-table-selected-row-fill-color: $orig-mdc-data-table-selected-row-fill-color !global;
  $mdc-data-table-divider-color: $orig-mdc-data-table-divider-color !global;
  $mdc-data-table-table-divider-color: $orig-mdc-data-table-table-divider-color !global;
  $mdc-data-table-row-hover-fill-color: $orig-mdc-data-table-row-hover-fill-color !global;
  $mdc-data-table-header-row-text-color: $orig-mdc-data-table-header-row-text-color !global;
  $mdc-data-table-row-text-color: $orig-mdc-data-table-row-text-color !global;
  $mdc-data-table-sort-icon-color: $orig-mdc-data-table-sort-icon-color !global;
  $mdc-data-table-sort-icon-active-color: $orig-mdc-data-table-sort-icon-active-color !global;
  $mdc-data-table-stroke-color: $orig-mdc-data-table-stroke-color !global;
}

@mixin typography($config-or-theme) {
  $config: theming.get-typography-config($config-or-theme);
  @include mdc-helpers.mat-using-mdc-typography($config) {
    @include mdc-data-table-core-styles($query: mdc-helpers.$mat-typography-styles-query);
  }
}

@mixin density($config-or-theme) {
  $density-scale: theming.get-density-config($config-or-theme);
  .mat-mdc-table {
    @include mdc-data-table-density($density-scale, $query: mdc-helpers.$mat-base-styles-query);
  }
}

@mixin theme($theme-or-color-config) {
  $theme: theming.legacy-get-theme($theme-or-color-config);
  @include theming.check-duplicate-theme-styles($theme, 'mat-mdc-table') {
    $color: theming.get-color-config($theme);
    $density: theming.get-density-config($theme);
    $typography: theming.get-typography-config($theme);

    @if $color != null {
      @include color($color);
    }
    @if $density != null {
      @include density($density);
    }
    @if $typography != null {
      @include typography($typography);
    }
  }
}
