@use '@material/ripple/mixins' as mdc-ripple;
@use '@material/textfield/variables' as mdc-text-field;
@use '../mdc-helpers/mdc-helpers';
@use 'form-field-density';
@use 'form-field-subscript';
@use 'form-field-focus-overlay';
@use 'form-field-native-select';
@use 'mdc-text-field-theme-variable-refresh';
@use '../../material/core/theming/theming';

@import '@material/density/functions.import';
@import '@material/theme/variables.import';
@import '@material/textfield/mixins.import';
@import '@material/textfield/variables.import';
@import '@material/typography/mixins.import';

// Mixin that overwrites the default MDC text-field color styles to be based on
// the given theme palette. The MDC text-field is styled using `primary` by default.
@mixin _mat-mdc-text-field-color-styles($palette-name,
  $query: mdc-helpers.$mat-theme-styles-query) {
  $_mdc-text-field-focused-label-color: mdc-text-field.$focused-label-color;
  mdc-text-field.$focused-label-color: rgba(mdc-theme-prop-value($palette-name), 0.87);

  @include mdc-text-field-caret-color($palette-name, $query);
  @include mdc-text-field-line-ripple-color($palette-name, $query);

  .mdc-text-field--focused {
    @include mdc-text-field-focused_($query);
  }

  .mdc-text-field--invalid {
    @include mdc-text-field-invalid_($query);
  }

  .mdc-text-field--outlined {
    @include mdc-text-field-focused-outline-color($palette-name, $query);
  }

  mdc-text-field.$focused-label-color: $_mdc-text-field-focused-label-color;
}

@mixin color($config-or-theme) {
  $config: theming.get-color-config($config-or-theme);
  @include mdc-helpers.mat-using-mdc-theme($config) {
    @include mdc-text-field-theme-variable-refresh.private-text-field-refresh-theme-variables() {
      @include mdc-text-field-without-ripple($query: mdc-helpers.$mat-theme-styles-query);
      @include mdc-floating-label-core-styles($query: mdc-helpers.$mat-theme-styles-query);
      @include mdc-notched-outline-core-styles($query: mdc-helpers.$mat-theme-styles-query);
      @include mdc-line-ripple-core-styles($query: mdc-helpers.$mat-theme-styles-query);
      @include form-field-subscript.private-form-field-subscript-color();
      @include form-field-focus-overlay.private-form-field-focus-overlay-color();
      @include form-field-native-select.private-form-field-native-select-color($config);

      .mat-mdc-form-field.mat-accent {
        @include _mat-mdc-text-field-color-styles(secondary);
      }

      .mat-mdc-form-field.mat-warn {
        @include _mat-mdc-text-field-color-styles(error);
      }
    }
  }
}

@mixin typography($config-or-theme) {
  $config: theming.get-typography-config($config-or-theme);
  @include mdc-helpers.mat-using-mdc-typography($config) {
    @include mdc-text-field-without-ripple($query: mdc-helpers.$mat-typography-styles-query);
    @include mdc-floating-label-core-styles($query: mdc-helpers.$mat-typography-styles-query);
    @include mdc-notched-outline-core-styles($query: mdc-helpers.$mat-typography-styles-query);
    @include mdc-line-ripple-core-styles($query: mdc-helpers.$mat-typography-styles-query);
    @include form-field-subscript.private-form-field-subscript-typography($config);

    // MDC uses the `subtitle1` level for the input label and value, but the spec shows `body1` as
    // the correct level.
    .mat-mdc-input-element,
    .mat-mdc-form-field label,
    .mat-mdc-form-field-text-prefix,
    .mat-mdc-form-field-text-suffix {
      @include mdc-typography(body1, $query: mdc-helpers.$mat-typography-styles-query);
    }
  }
}

@mixin density($config-or-theme) {
  $density-scale: theming.get-density-config($config-or-theme);
  @include form-field-density.private-form-field-density($density-scale);
}

@mixin theme($theme-or-color-config) {
  $theme: theming.private-legacy-get-theme($theme-or-color-config);
  @include theming.private-check-duplicate-theme-styles($theme, 'mat-mdc-form-field') {
    $color: theming.get-color-config($theme);
    $density: theming.get-density-config($theme);
    $typography: theming.get-typography-config($theme);

    @if $color != null {
      @include color($color);
    }
    @if $density != null {
      @include density($density);
    }
    @if $typography != null {
      @include typography($typography);
    }
  }
}
