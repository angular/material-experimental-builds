{"version":3,"file":"testing.mjs","sources":["../../../../../../../src/material-experimental/mdc-paginator/testing/paginator-harness.ts","../../../../../../../src/material-experimental/mdc-paginator/testing/public-api.ts","../../../../../../../src/material-experimental/mdc-paginator/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HarnessPredicate} from '@angular/cdk/testing';\nimport {MatSelectHarness} from '@angular/material-experimental/mdc-select/testing';\nimport {\n  PaginatorHarnessFilters,\n  _MatPaginatorHarnessBase,\n} from '@angular/material/paginator/testing';\n\n/** Harness for interacting with an MDC-based mat-paginator in tests. */\nexport class MatPaginatorHarness extends _MatPaginatorHarnessBase {\n  /** Selector used to find paginator instances. */\n  static hostSelector = '.mat-mdc-paginator';\n  protected _nextButton = this.locatorFor('.mat-mdc-paginator-navigation-next');\n  protected _previousButton = this.locatorFor('.mat-mdc-paginator-navigation-previous');\n  protected _firstPageButton = this.locatorForOptional('.mat-mdc-paginator-navigation-first');\n  protected _lastPageButton = this.locatorForOptional('.mat-mdc-paginator-navigation-last');\n  protected _select = this.locatorForOptional(\n    MatSelectHarness.with({\n      ancestor: '.mat-mdc-paginator-page-size',\n    }),\n  );\n  protected _pageSizeFallback = this.locatorFor('.mat-mdc-paginator-page-size-value');\n  protected _rangeLabel = this.locatorFor('.mat-mdc-paginator-range-label');\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a `MatPaginatorHarness` that meets\n   * certain criteria.\n   * @param options Options for filtering which paginator instances are considered a match.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: PaginatorHarnessFilters = {}): HarnessPredicate<MatPaginatorHarness> {\n    return new HarnessPredicate(MatPaginatorHarness, options);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './paginator-harness';\nexport {PaginatorHarnessFilters} from '@angular/material/paginator/testing';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;AAAA;;;;;;AAMG;AASH;AACM,MAAO,mBAAoB,SAAQ,wBAAwB,CAAA;AAAjE,IAAA,WAAA,GAAA;;AAGY,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,oCAAoC,CAAC,CAAC;AACpE,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,wCAAwC,CAAC,CAAC;AAC5E,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,qCAAqC,CAAC,CAAC;AAClF,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,oCAAoC,CAAC,CAAC;QAChF,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC,kBAAkB,CACzC,gBAAgB,CAAC,IAAI,CAAC;AACpB,YAAA,QAAQ,EAAE,8BAA8B;AACzC,SAAA,CAAC,CACH,CAAC;AACQ,QAAA,IAAA,CAAA,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,oCAAoC,CAAC,CAAC;AAC1E,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,gCAAgC,CAAC,CAAC;KAW3E;AATC;;;;;AAKG;AACH,IAAA,OAAO,IAAI,CAAC,OAAA,GAAmC,EAAE,EAAA;AAC/C,QAAA,OAAO,IAAI,gBAAgB,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;KAC3D;;AAtBD;AACO,mBAAY,CAAA,YAAA,GAAG,oBAAoB;;AClB5C;;;;;;AAMG;;ACNH;;;;;;AAMG;;;;"}