{"version":3,"file":"mdc-card.mjs","sources":["../../../../../../src/material-experimental/mdc-card/card.ts","../../../../../../src/material-experimental/mdc-card/card.html","../../../../../../src/material-experimental/mdc-card/card-title-group.html","../../../../../../src/material-experimental/mdc-card/card-header.html","../../../../../../src/material-experimental/mdc-card/module.ts","../../../../../../src/material-experimental/mdc-card/public-api.ts","../../../../../../src/material-experimental/mdc-card/index.ts","../../../../../../src/material-experimental/mdc-card/mdc-card_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  Inject,\n  InjectionToken,\n  Input,\n  Optional,\n  ViewEncapsulation,\n} from '@angular/core';\n\nexport type MatCardAppearance = 'outlined' | 'raised';\n\n/** Object that can be used to configure the default options for the card module. */\nexport interface MatCardConfig {\n  /** Default appearance for cards. */\n  appearance?: MatCardAppearance;\n}\n\n/** Injection token that can be used to provide the default options the card module. */\nexport const MAT_CARD_CONFIG = new InjectionToken<MatCardConfig>('MAT_CARD_CONFIG');\n\n/**\n * Material Design card component. Cards contain content and actions about a single subject.\n * See https://material.io/design/components/cards.html\n *\n * MatCard provides no behaviors, instead serving as a purely visual treatment.\n */\n@Component({\n  selector: 'mat-card',\n  templateUrl: 'card.html',\n  styleUrls: ['card.css'],\n  host: {\n    'class': 'mat-mdc-card mdc-card',\n    '[class.mdc-card--outlined]': 'appearance == \"outlined\"',\n  },\n  exportAs: 'matCard',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCard {\n  @Input() appearance: MatCardAppearance;\n\n  constructor(@Inject(MAT_CARD_CONFIG) @Optional() config?: MatCardConfig) {\n    this.appearance = config?.appearance || 'raised';\n  }\n}\n\n// TODO(jelbourn): add `MatActionCard`, which is a card that acts like a button (and has a ripple).\n// Supported in MDC with `.mdc-card__primary-action`. Will require additional a11y docs for users.\n\n/**\n * Title of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for one variety of card title; any custom title element may be used in its place.\n *\n * MatCardTitle provides no behaviors, instead serving as a purely visual treatment.\n */\n@Directive({\n  selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n  host: {'class': 'mat-mdc-card-title'},\n})\nexport class MatCardTitle {}\n\n/**\n * Container intended to be used within the `<mat-card>` component. Can contain exactly one\n * `<mat-card-title>`, one `<mat-card-subtitle>` and one content image of any size\n * (e.g. `<img matCardLgImage>`).\n */\n@Component({\n  selector: 'mat-card-title-group',\n  templateUrl: 'card-title-group.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-mdc-card-title-group'},\n})\nexport class MatCardTitleGroup {}\n\n/**\n * Content of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for use with other convenience elements, such as `<mat-card-title>`; any custom\n * content block element may be used in its place.\n *\n * MatCardContent provides no behaviors, instead serving as a purely visual treatment.\n */\n@Directive({\n  selector: 'mat-card-content',\n  host: {'class': 'mat-mdc-card-content'},\n})\nexport class MatCardContent {}\n\n/**\n * Sub-title of a card, intended for use within `<mat-card>` beneath a `<mat-card-title>`. This\n * component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`.\n *\n * MatCardSubtitle provides no behaviors, instead serving as a purely visual treatment.\n */\n@Directive({\n  selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n  host: {'class': 'mat-mdc-card-subtitle'},\n})\nexport class MatCardSubtitle {}\n\n/**\n * Bottom area of a card that contains action buttons, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom action block element may be used in its place.\n *\n * MatCardActions provides no behaviors, instead serving as a purely visual treatment.\n */\n@Directive({\n  selector: 'mat-card-actions',\n  exportAs: 'matCardActions',\n  host: {\n    'class': 'mat-mdc-card-actions mdc-card__actions',\n    '[class.mat-mdc-card-actions-align-end]': 'align === \"end\"',\n  },\n})\nexport class MatCardActions {\n  // TODO(jelbourn): deprecate `align` in favor of `actionPositon` or `actionAlignment`\n  // as to not conflict with the native `align` attribute.\n\n  /** Position of the actions inside the card. */\n  @Input() align: 'start' | 'end' = 'start';\n\n  // TODO(jelbourn): support `.mdc-card__actions--full-bleed`.\n\n  // TODO(jelbourn): support  `.mdc-card__action-buttons` and `.mdc-card__action-icons`.\n\n  // TODO(jelbourn): figure out how to use `.mdc-card__action`, `.mdc-card__action--button`, and\n  // `mdc-card__action--icon`. They're used primarily for positioning, which we might be able to\n  // do implicitly.\n}\n\n/**\n * Header region of a card, intended for use within `<mat-card>`. This header captures\n * a card title, subtitle, and avatar.  This component is an optional convenience for use with\n * other convenience elements, such as `<mat-card-footer>`; any custom header block element may be\n * used in its place.\n *\n * MatCardHeader provides no behaviors, instead serving as a purely visual treatment.\n */\n@Component({\n  selector: 'mat-card-header',\n  templateUrl: 'card-header.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-mdc-card-header'},\n})\nexport class MatCardHeader {}\n\n/**\n * Footer area a card, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom footer block element may be used in its place.\n *\n * MatCardFooter provides no behaviors, instead serving as a purely visual treatment.\n */\n@Directive({\n  selector: 'mat-card-footer',\n  host: {'class': 'mat-mdc-card-footer'},\n})\nexport class MatCardFooter {}\n\n// TODO(jelbourn): deprecate the \"image\" selectors to replace with \"media\".\n\n// TODO(jelbourn): support `.mdc-card__media-content`.\n\n/**\n * Primary image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom media element may be used in its place.\n *\n * MatCardImage provides no behaviors, instead serving as a purely visual treatment.\n */\n@Directive({\n  selector: '[mat-card-image], [matCardImage]',\n  host: {'class': 'mat-mdc-card-image mdc-card__media'},\n})\nexport class MatCardImage {\n  // TODO(jelbourn): support `.mdc-card__media--square` and `.mdc-card__media--16-9`.\n}\n\n/** Same as `MatCardImage`, but small. */\n@Directive({\n  selector: '[mat-card-sm-image], [matCardImageSmall]',\n  host: {'class': 'mat-mdc-card-sm-image mdc-card__media'},\n})\nexport class MatCardSmImage {}\n\n/** Same as `MatCardImage`, but medium. */\n@Directive({\n  selector: '[mat-card-md-image], [matCardImageMedium]',\n  host: {'class': 'mat-mdc-card-md-image mdc-card__media'},\n})\nexport class MatCardMdImage {}\n\n/** Same as `MatCardImage`, but large. */\n@Directive({\n  selector: '[mat-card-lg-image], [matCardImageLarge]',\n  host: {'class': 'mat-mdc-card-lg-image mdc-card__media'},\n})\nexport class MatCardLgImage {}\n\n/** Same as `MatCardImage`, but extra-large. */\n@Directive({\n  selector: '[mat-card-xl-image], [matCardImageXLarge]',\n  host: {'class': 'mat-mdc-card-xl-image mdc-card__media'},\n})\nexport class MatCardXlImage {}\n\n/**\n * Avatar image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`; any custom media element may be used in its place.\n *\n * MatCardAvatar provides no behaviors, instead serving as a purely visual treatment.\n */\n@Directive({\n  selector: '[mat-card-avatar], [matCardAvatar]',\n  host: {'class': 'mat-mdc-card-avatar'},\n})\nexport class MatCardAvatar {}\n","<ng-content></ng-content>\n","<div>\n  <ng-content\n      select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content>\n</div>\n<ng-content select=\"[mat-card-image], [matCardImage],\n                    [mat-card-sm-image], [matCardImageSmall],\n                    [mat-card-md-image], [matCardImageMedium],\n                    [mat-card-lg-image], [matCardImageLarge],\n                    [mat-card-xl-image], [matCardImageXLarge]\"></ng-content>\n<ng-content></ng-content>\n","<ng-content select=\"[mat-card-avatar], [matCardAvatar]\"></ng-content>\n<div class=\"mat-mdc-card-header-text\">\n  <ng-content\n      select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content>\n</div>\n<ng-content></ng-content>\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material-experimental/mdc-core';\nimport {\n  MatCard,\n  MatCardActions,\n  MatCardAvatar,\n  MatCardContent,\n  MatCardFooter,\n  MatCardHeader,\n  MatCardImage,\n  MatCardLgImage,\n  MatCardMdImage,\n  MatCardSmImage,\n  MatCardSubtitle,\n  MatCardTitle,\n  MatCardTitleGroup,\n  MatCardXlImage,\n} from './card';\n\nconst CARD_DIRECTIVES = [\n  MatCard,\n  MatCardActions,\n  MatCardAvatar,\n  MatCardContent,\n  MatCardFooter,\n  MatCardHeader,\n  MatCardImage,\n  MatCardLgImage,\n  MatCardMdImage,\n  MatCardSmImage,\n  MatCardSubtitle,\n  MatCardTitle,\n  MatCardTitleGroup,\n  MatCardXlImage,\n];\n\n@NgModule({\n  imports: [MatCommonModule, CommonModule],\n  exports: [CARD_DIRECTIVES, MatCommonModule],\n  declarations: CARD_DIRECTIVES,\n})\nexport class MatCardModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './card';\nexport * from './module';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}