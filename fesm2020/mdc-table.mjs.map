{"version":3,"file":"mdc-table.mjs","sources":["../../../../../../src/material-experimental/mdc-table/table.ts","../../../../../../src/material-experimental/mdc-table/cell.ts","../../../../../../src/material-experimental/mdc-table/row.ts","../../../../../../src/material-experimental/mdc-table/text-column.ts","../../../../../../src/material-experimental/mdc-table/module.ts","../../../../../../src/material-experimental/mdc-table/table-data-source.ts","../../../../../../src/material-experimental/mdc-table/public-api.ts","../../../../../../src/material-experimental/mdc-table/index.ts","../../../../../../src/material-experimental/mdc-table/mdc-table_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_TABLE_TEMPLATE,\n  CdkTable,\n  _CoalescedStyleScheduler,\n  _COALESCED_STYLE_SCHEDULER,\n  CDK_TABLE,\n  STICKY_POSITIONING_LISTENER,\n} from '@angular/cdk/table';\nimport {\n  _DisposeViewRepeaterStrategy,\n  _RecycleViewRepeaterStrategy,\n  _VIEW_REPEATER_STRATEGY,\n} from '@angular/cdk/collections';\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\n@Directive({\n  selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n  providers: [{provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy}],\n})\nexport class MatRecycleRows {}\n\n@Component({\n  selector: 'mat-table, table[mat-table]',\n  exportAs: 'matTable',\n  template: CDK_TABLE_TEMPLATE,\n  styleUrls: ['table.css'],\n  host: {\n    'class': 'mat-mdc-table mdc-data-table__table',\n    '[class.mdc-table-fixed-layout]': 'fixedLayout',\n  },\n  providers: [\n    {provide: CdkTable, useExisting: MatTable},\n    {provide: CDK_TABLE, useExisting: MatTable},\n    {provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler},\n    // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n    //  is only included in the build if used.\n    {provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy},\n    // Prevent nested tables from seeing this table's StickyPositioningListener.\n    {provide: STICKY_POSITIONING_LISTENER, useValue: null},\n  ],\n  encapsulation: ViewEncapsulation.None,\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class MatTable<T> extends CdkTable<T> implements OnInit {\n  /** Overrides the sticky CSS class set by the `CdkTable`. */\n  protected override stickyCssClass = 'mat-mdc-table-sticky';\n\n  /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n  protected override needsPositionStickyOnElement = false;\n\n  override ngOnInit() {\n    super.ngOnInit();\n\n    // After ngOnInit, the `CdkTable` has created and inserted the table sections (thead, tbody,\n    // tfoot). MDC requires the `mdc-data-table__content` class to be added to the body. Note that\n    // this only applies to native tables, because we don't wrap the content of flexbox-based ones.\n    if (this._isNativeHtmlTable) {\n      const tbody = this._elementRef.nativeElement.querySelector('tbody');\n      tbody.classList.add('mdc-data-table__content');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkFooterCell,\n  CdkFooterCellDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[matCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: MatCellDef}],\n})\nexport class MatCellDef extends CdkCellDef {}\n\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[matHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef}],\n})\nexport class MatHeaderCellDef extends CdkHeaderCellDef {}\n\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[matFooterCellDef]',\n  providers: [{provide: CdkFooterCellDef, useExisting: MatFooterCellDef}],\n})\nexport class MatFooterCellDef extends CdkFooterCellDef {}\n\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[matColumnDef]',\n  inputs: ['sticky'],\n  providers: [\n    {provide: CdkColumnDef, useExisting: MatColumnDef},\n    {provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef},\n  ],\n})\nexport class MatColumnDef extends CdkColumnDef {\n  /** Unique name for this column. */\n  @Input('matColumnDef')\n  override get name(): string {\n    return this._name;\n  }\n  override set name(name: string) {\n    this._setNameInput(name);\n  }\n\n  /**\n   * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n   * In the future, this will only add \"mat-column-\" and columnCssClassName\n   * will change from type string[] to string.\n   * @docs-private\n   */\n  protected override _updateColumnCssClassName() {\n    super._updateColumnCssClassName();\n    this._columnCssClassName!.push(`mat-column-${this.cssClassFriendlyName}`);\n  }\n}\n\n/** Header cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'mat-header-cell, th[mat-header-cell]',\n  host: {\n    'class': 'mat-mdc-header-cell mdc-data-table__header-cell',\n    'role': 'columnheader',\n  },\n})\nexport class MatHeaderCell extends CdkHeaderCell {}\n\n/** Footer cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'mat-footer-cell, td[mat-footer-cell]',\n  host: {\n    'class': 'mat-mdc-footer-cell mdc-data-table__cell',\n  },\n})\nexport class MatFooterCell extends CdkFooterCell {}\n\n/** Cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'mat-cell, td[mat-cell]',\n  host: {\n    'class': 'mat-mdc-cell mdc-data-table__cell',\n  },\n})\nexport class MatCell extends CdkCell {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkFooterRow,\n  CdkFooterRowDef,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n  CdkNoDataRow,\n} from '@angular/cdk/table';\nimport {ChangeDetectionStrategy, Component, Directive, ViewEncapsulation} from '@angular/core';\n\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[matHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef}],\n  inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n})\nexport class MatHeaderRowDef extends CdkHeaderRowDef {}\n\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\n@Directive({\n  selector: '[matFooterRowDef]',\n  providers: [{provide: CdkFooterRowDef, useExisting: MatFooterRowDef}],\n  inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n})\nexport class MatFooterRowDef extends CdkFooterRowDef {}\n\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[matRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: MatRowDef}],\n  inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n})\nexport class MatRowDef<T> extends CdkRowDef<T> {}\n\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  selector: 'mat-header-row, tr[mat-header-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'mat-mdc-header-row mdc-data-table__header-row',\n    'role': 'row',\n  },\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matHeaderRow',\n  providers: [{provide: CdkHeaderRow, useExisting: MatHeaderRow}],\n})\nexport class MatHeaderRow extends CdkHeaderRow {}\n\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  selector: 'mat-footer-row, tr[mat-footer-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'mat-mdc-footer-row mdc-data-table__row',\n    'role': 'row',\n  },\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matFooterRow',\n  providers: [{provide: CdkFooterRow, useExisting: MatFooterRow}],\n})\nexport class MatFooterRow extends CdkFooterRow {}\n\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  selector: 'mat-row, tr[mat-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'mat-mdc-row mdc-data-table__row',\n    'role': 'row',\n  },\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matRow',\n  providers: [{provide: CdkRow, useExisting: MatRow}],\n})\nexport class MatRow extends CdkRow {}\n\n/** Row that can be used to display a message when no data is shown in the table. */\n@Directive({\n  selector: 'ng-template[matNoDataRow]',\n  providers: [{provide: CdkNoDataRow, useExisting: MatNoDataRow}],\n})\nexport class MatNoDataRow extends CdkNoDataRow {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkTextColumn} from '@angular/cdk/table';\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\n@Component({\n  selector: 'mat-text-column',\n  template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  // Change detection is intentionally not set to OnPush. This component's template will be provided\n  // to the table to be inserted into its view. This is problematic when change detection runs since\n  // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n  // mean's the template in the table's view will not have the updated value (and in fact will cause\n  // an ExpressionChangedAfterItHasBeenCheckedError).\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class MatTextColumn<T> extends CdkTextColumn<T> {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material-experimental/mdc-core';\nimport {MatRecycleRows, MatTable} from './table';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {\n  MatCell,\n  MatCellDef,\n  MatColumnDef,\n  MatFooterCell,\n  MatFooterCellDef,\n  MatHeaderCell,\n  MatHeaderCellDef,\n} from './cell';\nimport {\n  MatFooterRow,\n  MatFooterRowDef,\n  MatHeaderRow,\n  MatHeaderRowDef,\n  MatRow,\n  MatRowDef,\n  MatNoDataRow,\n} from './row';\nimport {MatTextColumn} from './text-column';\n\nconst EXPORTED_DECLARATIONS = [\n  // Table\n  MatTable,\n  MatRecycleRows,\n\n  // Template defs\n  MatHeaderCellDef,\n  MatHeaderRowDef,\n  MatColumnDef,\n  MatCellDef,\n  MatRowDef,\n  MatFooterCellDef,\n  MatFooterRowDef,\n\n  // Cell directives\n  MatHeaderCell,\n  MatCell,\n  MatFooterCell,\n\n  // Row directives\n  MatHeaderRow,\n  MatRow,\n  MatFooterRow,\n  MatNoDataRow,\n\n  MatTextColumn,\n];\n\n@NgModule({\n  imports: [MatCommonModule, CdkTableModule],\n  exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n  declarations: EXPORTED_DECLARATIONS,\n})\nexport class MatTableModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {_MatTableDataSource, MatTableDataSourcePaginator} from '@angular/material/table';\n\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nexport class MatTableDataSource<\n  T,\n  P extends MatTableDataSourcePaginator = MatTableDataSourcePaginator,\n> extends _MatTableDataSource<T, P> {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './table';\nexport * from './module';\nexport * from './cell';\nexport * from './row';\nexport * from './table-data-source';\nexport * from './text-column';\n\nexport {MatTableDataSourcePageEvent, MatTableDataSourcePaginator} from '@angular/material/table';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}