{"version":3,"file":"testing.mjs","sources":["../../../../../../../src/material-experimental/mdc-form-field/testing/form-field-harness.ts","../../../../../../../src/material-experimental/mdc-form-field/testing/public-api.ts","../../../../../../../src/material-experimental/mdc-form-field/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HarnessPredicate} from '@angular/cdk/testing';\nimport {\n  FormFieldHarnessFilters,\n  _MatFormFieldHarnessBase,\n} from '@angular/material/form-field/testing';\nimport {MatInputHarness} from '@angular/material-experimental/mdc-input/testing';\nimport {MatSelectHarness} from '@angular/material-experimental/mdc-select/testing';\nimport {\n  MatDatepickerInputHarness,\n  MatDateRangeInputHarness,\n} from '@angular/material/datepicker/testing';\n\n// TODO(devversion): support support chip list harness\n/** Possible harnesses of controls which can be bound to a form-field. */\nexport type FormFieldControlHarness =\n  | MatInputHarness\n  | MatSelectHarness\n  | MatDatepickerInputHarness\n  | MatDateRangeInputHarness;\n\n/** Harness for interacting with a MDC-based form-field's in tests. */\nexport class MatFormFieldHarness extends _MatFormFieldHarnessBase<FormFieldControlHarness> {\n  static hostSelector = '.mat-mdc-form-field';\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a `MatFormFieldHarness` that meets\n   * certain criteria.\n   * @param options Options for filtering which form field instances are considered a match.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: FormFieldHarnessFilters = {}): HarnessPredicate<MatFormFieldHarness> {\n    return new HarnessPredicate(MatFormFieldHarness, options)\n      .addOption('floatingLabelText', options.floatingLabelText, async (harness, text) =>\n        HarnessPredicate.stringMatches(await harness.getLabel(), text),\n      )\n      .addOption(\n        'hasErrors',\n        options.hasErrors,\n        async (harness, hasErrors) => (await harness.hasErrors()) === hasErrors,\n      );\n  }\n\n  protected _prefixContainer = this.locatorForOptional('.mat-mdc-form-field-text-prefix');\n  protected _suffixContainer = this.locatorForOptional('.mat-mdc-form-field-text-suffix');\n  protected _label = this.locatorForOptional('.mdc-floating-label');\n  protected _errors = this.locatorForAll('.mat-mdc-form-field-error');\n  protected _hints = this.locatorForAll('.mat-mdc-form-field-hint');\n  protected _inputControl = this.locatorForOptional(MatInputHarness);\n  protected _selectControl = this.locatorForOptional(MatSelectHarness);\n  protected _datepickerInputControl = this.locatorForOptional(MatDatepickerInputHarness);\n  protected _dateRangeInputControl = this.locatorForOptional(MatDateRangeInputHarness);\n  private _mdcTextField = this.locatorFor('.mat-mdc-text-field-wrapper');\n\n  /** Gets the appearance of the form-field. */\n  async getAppearance(): Promise<'fill' | 'outline'> {\n    const textFieldEl = await this._mdcTextField();\n    if (await textFieldEl.hasClass('mdc-text-field--outlined')) {\n      return 'outline';\n    }\n    return 'fill';\n  }\n\n  /** Whether the form-field has a label. */\n  async hasLabel(): Promise<boolean> {\n    return (await this._label()) !== null;\n  }\n\n  /** Whether the label is currently floating. */\n  async isLabelFloating(): Promise<boolean> {\n    const labelEl = await this._label();\n    return labelEl !== null ? await labelEl.hasClass('mdc-floating-label--float-above') : false;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Re-export the base control harness from the \"form-field/testing/control\" entry-point. To\n// avoid circular dependencies, harnesses for form-field controls (i.e. input, select)\n// need to import the base form-field control harness through a separate entry-point.\nexport {MatFormFieldControlHarness} from '@angular/material/form-field/testing/control';\n\nexport {FormFieldHarnessFilters} from '@angular/material/form-field/testing';\nexport * from './form-field-harness';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;AAAA;;;;;;AAMG;AAsBH;AACM,MAAO,mBAAoB,SAAQ,wBAAiD,CAAA;AAA1F,IAAA,WAAA,GAAA;;AAqBY,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,iCAAiC,CAAC,CAAC;AAC9E,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,iCAAiC,CAAC,CAAC;AAC9E,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,CAAC;AACxD,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,2BAA2B,CAAC,CAAC;AAC1D,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,CAAC;AACxD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;AACzD,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;AAC3D,QAAA,IAAA,CAAA,uBAAuB,GAAG,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,CAAC,CAAC;AAC7E,QAAA,IAAA,CAAA,sBAAsB,GAAG,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,CAAC;AAC7E,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,CAAC;KAqBxE;AAhDC;;;;;AAKG;AACH,IAAA,OAAO,IAAI,CAAC,OAAA,GAAmC,EAAE,EAAA;AAC/C,QAAA,OAAO,IAAI,gBAAgB,CAAC,mBAAmB,EAAE,OAAO,CAAC;aACtD,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC,iBAAiB,EAAE,OAAO,OAAO,EAAE,IAAI,KAC7E,gBAAgB,CAAC,aAAa,CAAC,MAAM,OAAO,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAC/D;aACA,SAAS,CACR,WAAW,EACX,OAAO,CAAC,SAAS,EACjB,OAAO,OAAO,EAAE,SAAS,KAAK,CAAC,MAAM,OAAO,CAAC,SAAS,EAAE,MAAM,SAAS,CACxE,CAAC;KACL;;AAcD,IAAA,MAAM,aAAa,GAAA;AACjB,QAAA,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;AAC/C,QAAA,IAAI,MAAM,WAAW,CAAC,QAAQ,CAAC,0BAA0B,CAAC,EAAE;AAC1D,YAAA,OAAO,SAAS,CAAC;AAClB,SAAA;AACD,QAAA,OAAO,MAAM,CAAC;KACf;;AAGD,IAAA,MAAM,QAAQ,GAAA;QACZ,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,CAAC;KACvC;;AAGD,IAAA,MAAM,eAAe,GAAA;AACnB,QAAA,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC;AACpC,QAAA,OAAO,OAAO,KAAK,IAAI,GAAG,MAAM,OAAO,CAAC,QAAQ,CAAC,iCAAiC,CAAC,GAAG,KAAK,CAAC;KAC7F;;AAjDM,mBAAY,CAAA,YAAA,GAAG,qBAAqB;;AC9B7C;;;;;;AAMG;;ACNH;;;;;;AAMG;;;;"}