{"version":3,"file":"testing.mjs","sources":["../../../../../../../src/material-experimental/mdc-slide-toggle/testing/slide-toggle-harness.ts","../../../../../../../src/material-experimental/mdc-slide-toggle/testing/public-api.ts","../../../../../../../src/material-experimental/mdc-slide-toggle/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HarnessPredicate} from '@angular/cdk/testing';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  _MatSlideToggleHarnessBase,\n  SlideToggleHarnessFilters,\n} from '@angular/material/slide-toggle/testing';\n\n/** Harness for interacting with a MDC-based mat-slide-toggle in tests. */\nexport class MatSlideToggleHarness extends _MatSlideToggleHarnessBase {\n  protected _nativeElement = this.locatorFor('button');\n  static hostSelector = '.mat-mdc-slide-toggle';\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a slide-toggle w/ specific attributes.\n   * @param options Options for narrowing the search:\n   *   - `selector` finds a slide-toggle whose host element matches the given selector.\n   *   - `label` finds a slide-toggle with specific label text.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: SlideToggleHarnessFilters = {}): HarnessPredicate<MatSlideToggleHarness> {\n    return (\n      new HarnessPredicate(MatSlideToggleHarness, options)\n        .addOption('label', options.label, (harness, label) =>\n          HarnessPredicate.stringMatches(harness.getLabelText(), label),\n        )\n        // We want to provide a filter option for \"name\" because the name of the slide-toggle is\n        // only set on the underlying input. This means that it's not possible for developers\n        // to retrieve the harness of a specific checkbox with name through a CSS selector.\n        .addOption(\n          'name',\n          options.name,\n          async (harness, name) => (await harness.getName()) === name,\n        )\n    );\n  }\n\n  async toggle(): Promise<void> {\n    return (await this._nativeElement()).click();\n  }\n\n  override async isRequired(): Promise<boolean> {\n    const ariaRequired = await (await this._nativeElement()).getAttribute('aria-required');\n    return ariaRequired === 'true';\n  }\n\n  async isChecked(): Promise<boolean> {\n    const checked = (await this._nativeElement()).getAttribute('aria-checked');\n    return coerceBooleanProperty(await checked);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './slide-toggle-harness';\nexport {SlideToggleHarnessFilters} from '@angular/material/slide-toggle/testing';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;AAAA;;;;;;;AAeA;MACa,qBAAsB,SAAQ,0BAA0B;IAArE;;QACY,mBAAc,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;KAwCtD;;;;;;;;IA9BC,OAAO,IAAI,CAAC,UAAqC,EAAE;QACjD,QACE,IAAI,gBAAgB,CAAC,qBAAqB,EAAE,OAAO,CAAC;aACjD,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,KAAK,KAChD,gBAAgB,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,KAAK,CAAC,CAC9D;;;;aAIA,SAAS,CACR,MAAM,EACN,OAAO,CAAC,IAAI,EACZ,OAAO,OAAO,EAAE,IAAI,KAAK,CAAC,MAAM,OAAO,CAAC,OAAO,EAAE,MAAM,IAAI,CAC5D,EACH;KACH;IAED,MAAM,MAAM;QACV,OAAO,CAAC,MAAM,IAAI,CAAC,cAAc,EAAE,EAAE,KAAK,EAAE,CAAC;KAC9C;IAEQ,MAAM,UAAU;QACvB,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,cAAc,EAAE,EAAE,YAAY,CAAC,eAAe,CAAC,CAAC;QACvF,OAAO,YAAY,KAAK,MAAM,CAAC;KAChC;IAED,MAAM,SAAS;QACb,MAAM,OAAO,GAAG,CAAC,MAAM,IAAI,CAAC,cAAc,EAAE,EAAE,YAAY,CAAC,cAAc,CAAC,CAAC;QAC3E,OAAO,qBAAqB,CAAC,MAAM,OAAO,CAAC,CAAC;KAC7C;;AAtCM,kCAAY,GAAG,uBAAuB;;AClB/C;;;;;;;;ACAA;;;;;;;;;;"}